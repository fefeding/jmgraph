{"version":3,"file":"jmgraph.core.min.js","sources":["../src/core/jmList.js","../src/core/jmUtils.js","../src/core/jmObject.js","../src/core/jmProperty.js","../src/core/jmShadow.js","../src/core/jmGradient.js","../src/core/jmEvents.js","../src/lib/earcut.js","../src/lib/webgl/gradient.js","../src/lib/webgl/core/shader.js","../src/lib/webgl/core/mapSize.js","../src/lib/webgl/core/mapType.js","../src/lib/webgl/core/program.js","../src/lib/webgl/core/buffer.js","../src/lib/webgl/core/texture.js","../src/lib/webgl/base.js","../src/lib/webgl/path.js","../src/core/jmControl.js","../src/core/jmPath.js","../src/core/jmGraph.js"],"sourcesContent":["/**\r\n * 自定义集合\r\n * \r\n * @class jmList\r\n * @for jmUtils\r\n * @param {array} [arr] 数组，可转为当前list元素\r\n */\r\nexport default class jmList extends Array {    \r\n    constructor(...arg) {\r\n        let ps = [];\r\n        if(arg && arg.length && Array.isArray(arg[0])) {\r\n            for(let i=0; i< arg[0].length; i++) ps.push(arg[0][i]);\r\n            super(...ps);\r\n        }\r\n        else {\r\n            super();\r\n        }\r\n        this.option = {}; //选项\r\n        this.type = 'jmList';\r\n    }\r\n    /**\r\n     * 往集合中添加对象\r\n     *\r\n     * @method add\r\n     * @for list\r\n     * @param {any} obj 往集合中添加的对象\r\n     */\r\n    add(obj) {        \r\n        if(obj && Array.isArray(obj)) {\r\n            for(let i=0; i < obj.length; i++) {\r\n                if(!this.includes(obj[i])) this.push(obj[i]);\r\n            } \r\n            return obj;           \r\n        }\r\n        if(typeof obj == 'object' && this.includes(obj)) return obj;\r\n        this.push(obj);\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * 从集合中移除指定对象\r\n     * \r\n     * @method remove\r\n     * @for list\r\n     * @param {any} obj 将移除的对象\r\n     */\r\n    remove(obj) {\r\n        for(let i = this.length -1; i>=0; i--) {            \r\n            if(this[i] == obj) {\r\n                this.removeAt(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 按索引移除对象\r\n     * \r\n     * @method removeAt\r\n     * @for list\r\n     * @param {integer} index 移除对象的索引\r\n     */\r\n    removeAt(index) {\r\n        if(this.length > index) {\r\n            let obj = this[index];\r\n            this.splice(index,1);\r\n            if(this.option.removeHandler)  this.option.removeHandler.call(this, obj, index);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断是否包含某个对象\r\n     * \r\n     * @method contain\r\n     * @for list\r\n     * @param {any} obj 判断当前集合中是否包含此对象\r\n     */\r\n    contain(obj) {\r\n        return this.includes(obj);\r\n    }\r\n\r\n    /**\r\n     * 从集合中获取某个对象\r\n     * \r\n     * @method get\r\n     * @for list\r\n     * @param {integer/function} index 如果为整型则表示为获取此索引的对象，如果为function为则通过此委托获取对象\r\n     * @return {any} 集合中的对象\r\n     */\r\n    get(index) {\r\n        if(typeof index == 'function') {\r\n            return this.find(index);\r\n        }\r\n        else {\r\n            return this[index];\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * 遍历当前集合 \r\n     *\r\n     * @method each\r\n     * @for list\r\n     * @param {function} cb 遍历当前集合的委托\r\n     * @param {boolean} inverse 是否按逆序遍历\r\n     */\r\n    each(cb, inverse) {\r\n        if(cb && typeof cb == 'function') {\r\n            //如果按倒序循环\r\n            if(inverse) {\r\n                for(let i = this.length - 1;i>=0; i--) {\r\n                    let r = cb.call(this, i, this[i]);\r\n                    if(r === false) break;\r\n                }\r\n            }\r\n            else {\r\n                let len = this.length;\r\n               for(let i  = 0; i < len;i++) {\r\n                    let r = cb.call(this, i, this[i]);\r\n                    if(r === false) break;\r\n                } \r\n            }            \r\n        }        \r\n    }\r\n\r\n    /**\r\n     * 获取当前集合对象个数\r\n     *\r\n     * @method count\r\n     * @param {function} [handler] 检查对象是否符合计算的条件\r\n     * @for list\r\n     * @return {integer} 当前集合的个数\r\n     */\r\n    count(handler) {\r\n        if(handler && typeof handler == 'function') {\r\n            let count = 0;\r\n            let len = this.length;\r\n            for(let i  = 0; i<len;i++) {\r\n                if(handler(this[i])) {\r\n                    count ++;\r\n                }\r\n            } \r\n            return count;\r\n        }\r\n        return this.length;\r\n    }\r\n\r\n    /**\r\n     * 清空当前集合\r\n     *\r\n     * @method clear\r\n     * @for list\r\n     */\r\n    clear() {\r\n        this.splice(0, this.length);\r\n    }\r\n}\r\n\r\nexport { jmList };","\r\nimport { jmList } from './jmList.js';\r\n\r\nconst colorKeywords = {\r\n    aliceblue:            \"#f0f8ff\",\r\n    antiquewhite:         \"#faebd7\",\r\n    aqua:                 \"#00ffff\",\r\n    aquamarine:           \"#7fffd4\",\r\n    azure:                \"#f0ffff\",\r\n    beige:                \"#f5f5dc\",\r\n    bisque:               \"#ffe4c4\",\r\n    black:                \"#000000\",\r\n    blanchedalmond:       \"#ffebcd\",\r\n    blue:                 \"#0000ff\",\r\n    blueviolet:           \"#8a2be2\",\r\n    brown:                \"#a52a2a\",\r\n    burlywood:            \"#deb887\",\r\n    cadetblue:            \"#5f9ea0\",\r\n    chartreuse:           \"#7fff00\",\r\n    chocolate:            \"#d2691e\",\r\n    coral:                \"#ff7f50\",\r\n    cornflowerblue:       \"#6495ed\",\r\n    cornsilk:             \"#fff8dc\",\r\n    crimson:              \"#dc143c\",\r\n    cyan:                 \"#00ffff\",\r\n    darkblue:             \"#00008b\",\r\n    darkcyan:             \"#008b8b\",\r\n    darkgoldenrod:        \"#b8860b\",\r\n    darkgray:             \"#a9a9a9\",\r\n    darkgreen:            \"#006400\",\r\n    darkkhaki:            \"#bdb76b\",\r\n    darkmagenta:          \"#8b008b\",\r\n    darkolivegreen:       \"#556b2f\",\r\n    darkorange:           \"#ff8c00\",\r\n    darkorchid:           \"#9932cc\",\r\n    darkred:              \"#8b0000\",\r\n    darksalmon:           \"#e9967a\",\r\n    darkseagreen:         \"#8fbc8f\",\r\n    darkslateblue:        \"#483d8b\",\r\n    darkslategray:        \"#2f4f4f\",\r\n    darkturquoise:        \"#00ced1\",\r\n    darkviolet:           \"#9400d3\",\r\n    deeppink:             \"#ff1493\",\r\n    deepskyblue:          \"#00bfff\",\r\n    dimgray:              \"#696969\",\r\n    dodgerblue:           \"#1e90ff\",\r\n    firebrick:            \"#b22222\",\r\n    floralwhite:          \"#fffaf0\",\r\n    forestgreen:          \"#228b22\",\r\n    fuchsia:              \"#ff00ff\",\r\n    gainsboro:            \"#dcdcdc\",\r\n    ghostwhite:           \"#f8f8ff\",\r\n    gold:                 \"#ffd700\",\r\n    goldenrod:            \"#daa520\",\r\n    gray:                 \"#808080\",\r\n    green:                \"#008000\",\r\n    greenyellow:          \"#adff2f\",\r\n    grey:                 \"#808080\",\r\n    honeydew:             \"#f0fff0\",\r\n    hotpink:              \"#ff69b4\",\r\n    indianred:            \"#cd5c5c\",\r\n    indigo:               \"#4b0082\",\r\n    ivory:                \"#fffff0\",\r\n    khaki:                \"#f0e68c\",\r\n    lavender:             \"#e6e6fa\",\r\n    lavenderblush:        \"#fff0f5\",\r\n    lawngreen:            \"#7cfc00\",\r\n    lemonchiffon:         \"#fffacd\",\r\n    lightblue:            \"#add8e6\",\r\n    lightcoral:           \"#f08080\",\r\n    lightcyan:            \"#e0ffff\",\r\n    lightgoldenrodyellow: \"#fafad2\",\r\n    lightgrey:            \"#d3d3d3\",\r\n    lightgreen:           \"#90ee90\",\r\n    lightpink:            \"#ffb6c1\",\r\n    lightsalmon:          \"#ffa07a\",\r\n    lightseagreen:        \"#20b2aa\",\r\n    lightskyblue:         \"#87cefa\",\r\n    lightslategray:       \"#778899\",\r\n    lightsteelblue:       \"#b0c4de\",\r\n    lightyellow:          \"#ffffe0\",\r\n    lime:                 \"#00ff00\",\r\n    limegreen:            \"#32cd32\",\r\n    linen:                \"#faf0e6\",\r\n    magenta:              \"#ff00ff\",\r\n    maroon:               \"#800000\",\r\n    mediumaquamarine:     \"#66cdaa\",\r\n    mediumblue:           \"#0000cd\",\r\n    mediumorchid:         \"#ba55d3\",\r\n    mediumpurple:         \"#9370d8\",\r\n    mediumseagreen:       \"#3cb371\",\r\n    mediumslateblue:      \"#7b68ee\",\r\n    mediumspringgreen:    \"#00fa9a\",\r\n    mediumturquoise:      \"#48d1cc\",\r\n    mediumvioletred:      \"#c71585\",\r\n    midnightblue:         \"#191970\",\r\n    mintcream:            \"#f5fffa\",\r\n    mistyrose:            \"#ffe4e1\",\r\n    moccasin:             \"#ffe4b5\",\r\n    navajowhite:          \"#ffdead\",\r\n    navy:                 \"#000080\",\r\n    oldlace:              \"#fdf5e6\",\r\n    olive:                \"#808000\",\r\n    olivedrab:            \"#6b8e23\",\r\n    orange:               \"#ffa500\",\r\n    orangered:            \"#ff4500\",\r\n    orchid:               \"#da70d6\",\r\n    palegoldenrod:        \"#eee8aa\",\r\n    palegreen:            \"#98fb98\",\r\n    paleturquoise:        \"#afeeee\",\r\n    palevioletred:        \"#d87093\",\r\n    papayawhip:           \"#ffefd5\",\r\n    peachpuff:            \"#ffdab9\",\r\n    peru:                 \"#cd853f\",\r\n    pink:                 \"#ffc0cb\",\r\n    plum:                 \"#dda0dd\",\r\n    powderblue:           \"#b0e0e6\",\r\n    purple:               \"#800080\",\r\n    red:                  \"#ff0000\",\r\n    rosybrown:            \"#bc8f8f\",\r\n    royalblue:            \"#4169e1\",\r\n    saddlebrown:          \"#8b4513\",\r\n    salmon:               \"#fa8072\",\r\n    sandybrown:           \"#f4a460\",\r\n    seagreen:             \"#2e8b57\",\r\n    seashell:             \"#fff5ee\",\r\n    sienna:               \"#a0522d\",\r\n    silver:               \"#c0c0c0\",\r\n    skyblue:              \"#87ceeb\",\r\n    slateblue:            \"#6a5acd\",\r\n    slategray:            \"#708090\",\r\n    snow:                 \"#fffafa\",\r\n    springgreen:          \"#00ff7f\",\r\n    steelblue:            \"#4682b4\",\r\n    tan:                  \"#d2b48c\",\r\n    teal:                 \"#008080\",\r\n    thistle:              \"#d8bfd8\",\r\n    tomato:               \"#ff6347\",\r\n    turquoise:            \"#40e0d0\",\r\n    violet:               \"#ee82ee\",\r\n    wheat:                \"#f5deb3\",\r\n    white:                \"#ffffff\",\r\n    whitesmoke:           \"#f5f5f5\",\r\n    yellow:               \"#ffff00\",\r\n    yellowgreen:          \"#9acd32\",\r\n    transparent:          \"rgba(0,0,0,0)\"\r\n  };\r\n\r\n/**\r\n * 画图基础对象\r\n * 当前库的工具类\r\n * \r\n * @class jmUtils\r\n * @static\r\n */\r\nexport default class jmUtils {\r\n    /**\r\n     * 复制一个对象\r\n     * \r\n     * @method clone\r\n     * @static\r\n     * @param {object} source 被复制的对象\r\n     * @param {object} target 可选，如果指定就表示复制给这个对象，如果为boolean它就是deep参数\r\n     * @param {boolean} deep 是否深度复制，如果为true,数组内的每个对象都会被复制\r\n     * @param {function} copyHandler 复制对象回调，如果返回undefined，就走后面的逻辑，否则到这里中止\r\n     * @return {object} 参数source的拷贝对象\r\n     */\r\n    static clone(source, target, deep = false, copyHandler = null, deepIndex = 0) {\r\n        // 如果有指定回调，则用回调处理，否则走后面的复制逻辑\r\n        if(typeof copyHandler === 'function') {\r\n            const obj = copyHandler(source, deep, deepIndex);\r\n            if(obj) return obj;\r\n        }\r\n        deepIndex++; // 每执行一次，需要判断最大拷贝深度        \r\n\r\n        if(typeof target === 'boolean') {\r\n            deep = target;\r\n            target = undefined;\r\n        }\r\n\r\n        // 超过100拷贝深度，直接返回\r\n        if(deepIndex > 100) {\r\n            return target;\r\n        }\r\n\r\n        if(source && typeof source === 'object') {\r\n            target = target || {};\r\n\r\n            //如果为当前泛型，则直接new\r\n            if(this.isType(source, jmList)) {\r\n                return new jmList(source);\r\n            }\r\n            else if(Array.isArray(source)) {\r\n                //如果是深度复，则拷贝每个对象\r\n                if(deep) {\r\n                    let dest = [];\r\n                    for(let i=0; i<source.length; i++) {\r\n                        dest.push(this.clone(source[i], target[i], deep, copyHandler, deepIndex));\r\n                    }\r\n                    return dest;\r\n                }\r\n                return source.slice(0);\r\n            }\r\n           \r\n            if(source.__proto__) target.__proto__ = source.__proto__;\r\n            \r\n            for(let k in source) {\r\n                if(k === 'constructor') continue;\r\n                const v = source[k];\r\n                // 不复制页面元素和class对象\r\n                if(v && (v.tagName || v.getContext)) {\r\n                    target[k] = v;\r\n                    continue;\r\n                }\r\n\r\n                // 如果不是对象和空，则采用target的属性\r\n                if(typeof target[k] === 'object' || typeof target[k] === 'undefined') {                    \r\n                    target[k] = this.clone(v, target[k], deep, copyHandler, deepIndex);\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n        else if(typeof target != 'undefined') {\r\n            return target;\r\n        }\r\n\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * 绑定事件到html对象\r\n     * \r\n     * @method bindEvent\r\n     * @static\r\n     * @param {element} html元素对象\r\n     * @param {string} name 事件名称\r\n     * @param {function} fun 事件委托\r\n     * @returns {name, fun, target} 返回当前绑定\r\n     */\r\n    static bindEvent(target, name, fun, opt) {\r\n        if(name &&  name.indexOf && name.indexOf(' ') != -1) {\r\n            let ns = name.split(' ');\r\n            for(let i=0;i<ns.length;i++) {\r\n                this.bindEvent(target, ns[i], fun, opt);\r\n            }\r\n        }\r\n        if(target.attachEvent) {\r\n            target.attachEvent(\"on\"+name, fun, opt);\r\n        }    \r\n        else if(target.addEventListener) {\r\n            target.addEventListener(name, fun, opt);\r\n        }\r\n        return {\r\n            name,\r\n            target,\r\n            fun\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 从对象中移除事件到\r\n     * \r\n     * @method removeEvent\r\n     * @static\r\n     * @param {element} html元素对象\r\n     * @param {string} name 事件名称\r\n     * @param {function} fun 事件委托\r\n     */\r\n    static removeEvent(target, name, fun) {\r\n        if(target.removeEventListener) {\r\n            return target.removeEventListener(name, fun, false);\r\n        }    \r\n        else if(target.detachEvent) {\r\n            target.detachEvent('on' + name, fun);\r\n            return true;\r\n        }\r\n        else {\r\n            target['on' + name] = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取元素的绝对定位\r\n     *\r\n     * @method getElementPosition\r\n     * @static\r\n     * @param {element} el 目标元素对象\r\n     * @return {position} 位置对象(top,left)\r\n     */\r\n    static getElementPosition(el) {    \r\n        let pos = {\"top\": 0, \"left\": 0};\r\n        if(!el) return pos;\r\n\r\n        if (el.offsetParent) {\r\n            while (el.offsetParent) {\r\n                pos.top += el.offsetTop;\r\n                pos.left += el.offsetLeft;\r\n                el = el.offsetParent;\r\n            }\r\n        }\r\n        else if(el.x) {\r\n            pos.left += el.x;\r\n        }\r\n        else if(el.x){\r\n            pos.top += el.y;\r\n        } \r\n        return pos;\r\n    }\r\n    /**\r\n     * 获取元素事件触发的位置\r\n     *\r\n     * @method getEventPosition\r\n     * @static\r\n     * @param {eventArg} evt 当前触发事件的参数\r\n     * @param {point} [scale] 当前画布的缩放比例\r\n     * @return {point} 事件触发的位置 \r\n     */\r\n    static getEventPosition (evt, scale) {\r\n        evt = evt || event;\r\n        \r\n        let isTouch = false;\r\n        let touches = evt.changedTouches || evt.targetTouches || evt.touches;\r\n        let target = evt.target || evt.srcElement;\r\n        if(touches && touches.length) {\r\n            evt = touches[0];//兼容touch事件\r\n            if(!evt.target) evt.target = target;\r\n            isTouch = true;\r\n        }\r\n        let px = evt.pageX || evt.x;\r\n        if(typeof px == 'undefined')  px = evt.clientX + (document.documentElement.scrollLeft || document.body.scrollLeft);    \r\n        let py = evt.pageY || evt.y;\r\n        if(typeof py == 'undefined')  py = evt.clientY + (document.documentElement.scrollTop || document.body.scrollTop);\r\n\r\n        let ox = evt.offsetX;\r\n        let oy = evt.offsetY;\r\n        if(typeof ox === 'undefined' && typeof oy === 'undefined') {\r\n            // 小程序下取x,y就是它的相对坐标\r\n            if(evt.isWXMiniApp) {\r\n                ox = evt.x;\r\n                oy = evt.y;\r\n            }\r\n            else {\r\n                let p = this.getElementPosition(target);\r\n                ox= px - p.left;\r\n                oy = py - p.top;\r\n            }\r\n        }\r\n        if(scale) {\r\n            if(scale.x) ox = ox / scale.x;\r\n            if(scale.y) oy = oy / scale.y;\r\n        }\r\n\r\n        return {\r\n            pageX: px,\r\n            pageY: py,\r\n            clientX: evt.clientX,\r\n            clientY: evt.clientY,\r\n            //相对于容器偏移量\r\n            offsetX: ox,\r\n            offsetY: oy,\r\n            layerX: evt.layerX,\r\n            layerY: evt.layerY,\r\n            screenX: evt.screenX,\r\n            screenY: evt.screenY,\r\n            x: ox,\r\n            y: oy,\r\n            isTouch: isTouch,\r\n            touches\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 检 查对象是否为指定的类型,不包括继承\r\n     * \r\n     * @method isType\r\n     * @static\r\n     * @param {object} target 需要判断类型的对象\r\n     * @param {class} type 对象类型\r\n     * @return {boolean} 返回对象是否为指定类型 \r\n     */\r\n    static isType(target, type) {\r\n        if(!target || typeof target !== 'object') return false;\r\n        if(target.constructor === type) return true;\r\n        /*if(target.__baseType) {        \r\n            return jmUtils.isType(target.__baseType.prototype,type);\r\n        }*/\r\n\r\n        //return target instanceof type;\r\n        return false;\r\n    }\r\n    /**\r\n     * 判断点是否在多边形内\r\n     * 如果一个点在多边形内部，任意角度做射线肯定会与多边形要么有一个交点，要么有与多边形边界线重叠。\r\n     * 如果一个点在多边形外部，任意角度做射线要么与多边形有一个交点，要么有两个交点，要么没有交点，要么有与多边形边界线重叠。\r\n     * 利用上面的结论，我们只要判断这个点与多边形的交点个数，就可以判断出点与多边形的位置关系了。\r\n     * \r\n     * @method pointInPolygon\r\n     * @static\r\n     * @param {point} pt 坐标对象\r\n     * @param {array} polygon 多边型角坐标对象数组\r\n     * @param {number} offset 判断可偏移值\r\n     * @return {integer} 0= 不在图形内和线上，1=在边上，2=在图形内部\r\n     */\r\n    static pointInPolygon(pt, polygon, offset) {\r\n        offset = offset || 1;\r\n        offset = offset / 2;\r\n        let i, j, n = polygon.length;\r\n        let inside = false, redo = true;\r\n\r\n        if(!polygon || n == 0) return 0;\r\n        if(n == 1) {\r\n            return Math.abs(polygon[0].x - pt.x) <= offset && Math.abs(polygon[0].y - pt.y) <= offset;\r\n        }\r\n        \r\n        //一条直线\r\n        else if(n == 2) {\r\n            //在最左边之外或在最右边之外\r\n            if(Math.min(polygon[0].x,polygon[1].x) - pt.x > offset || \r\n                pt.x - Math.max(polygon[0].x,polygon[1].x) > offset ) {\r\n                return 0;\r\n            }\r\n            //在最顶部之外或在最底部之外\r\n            if(Math.min(polygon[0].y,polygon[1].y) - pt.y > offset || \r\n                pt.y - Math.max(polygon[0].y,polygon[1].y) > offset) {\r\n                return 0;\r\n            }\r\n\r\n            //如果线为平行为纵坐标。\r\n            if(polygon[0].x == polygon[1].x){\r\n                return (Math.abs(polygon[0].x - pt.x) <= offset && (pt.y - polygon[0].y) * (pt.y - polygon[1].y) <= 0)? 1:0;\r\n            }\r\n            //如果线为平行为横坐标。\r\n            if(polygon[0].y == polygon[1].y){\r\n                return (Math.abs(polygon[0].y - pt.y) <= offset && (pt.x - polygon[0].x) * (pt.x - polygon[1].x) <= 0)? 1:0;\r\n            }\r\n\r\n            if(Math.abs(polygon[0].x - pt.x) < offset && Math.abs(polygon[0].y - pt.y) < offset) {\r\n                return 1;\r\n            }\r\n            if(Math.abs(polygon[1].x - pt.x) < offset && Math.abs(polygon[1].y - pt.y) < offset) {\r\n                return 1;\r\n            }\r\n\r\n            //点到直线的距离小于宽度的一半，表示在线上\r\n            if(pt.y != polygon[0].y && pt.y != polygon[1].y) {\r\n\r\n                let f = (polygon[1].x - polygon[0].x) / (polygon[1].y - polygon[0].y) * (pt.y - polygon[0].y);\r\n                let ff = (pt.y - polygon[0].y) / Math.sqrt(f * f + (pt.y - polygon[0].y) * (pt.y - polygon[0].y));\r\n                let l = ff * (pt.x - polygon[0].x - f );\r\n                \r\n                return Math.abs(l) <= offset ?1:0;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        for (i = 0;i < n;++i) {\r\n            if (polygon[i].x == pt.x &&    // 是否在顶点上\r\n                polygon[i].y == pt.y ) {\r\n                return 1;\r\n            }\r\n        }\r\n\r\n        //pt = this.clone(pt);\r\n        while (redo) {\r\n            redo = false;\r\n            inside = false;\r\n            for (i = 0,j = n - 1;i < n;j = i++) {\r\n                if ( (polygon[i].y < pt.y && pt.y < polygon[j].y) || \r\n                    (polygon[j].y < pt.y && pt.y < polygon[i].y) ) {\r\n                    if (pt.x <= polygon[i].x || pt.x <= polygon[j].x) {\r\n                        var _x = (pt.y-polygon[i].y)*(polygon[j].x-polygon[i].x)/(polygon[j].y-polygon[i].y)+polygon[i].x;\r\n                        if (pt.x < _x)          // 在线的左侧\r\n                            inside = !inside;\r\n                        else if (pt.x == _x)    // 在线上\r\n                        {\r\n                            return 1;\r\n                        }\r\n                    }\r\n                }\r\n                else if ( pt.y == polygon[i].y) {\r\n                    if (pt.x < polygon[i].x) {    // 交点在顶点上                    \r\n                        if(polygon[i].y > polygon[j].y) {\r\n                            --pt.y\r\n                        }\r\n                        else {\r\n                            ++pt.y;\r\n                        }\r\n                        redo = true;\r\n                        break;\r\n                    }\r\n                }\r\n                else if ( polygon[i].y ==  polygon[j].y && // 在水平的边界线上\r\n                    pt.y == polygon[i].y &&\r\n                    ( (polygon[i].x < pt.x && pt.x < polygon[j].x) || \r\n                    (polygon[j].x < pt.x && pt.x < polygon[i].x) ) ) {\r\n                    inside = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return inside ? 2:0;\r\n    }\r\n\r\n    /**\r\n     * @method judge 判断点是否在多边形中\r\n     * @param {point} dot {{x,y}} 需要判断的点\r\n     * @param {array} coordinates {{x,y}} 多边形点坐标的数组，为保证图形能够闭合，起点和终点必须相等。\r\n     *        比如三角形需要四个点表示，第一个点和最后一个点必须相同。 \r\n     * @param  {number} 是否为实心 1= 是\r\n     * @returns {boolean} 结果 true=在形状内\r\n     */\r\n    /*static judge(dot,coordinates,noneZeroMode) {\r\n        // 默认启动none zero mode\r\n        noneZeroMode=noneZeroMode||1;\r\n        var x = dot.x,y=dot.y;\r\n        var crossNum = 0;\r\n        // 点在线段的左侧数目\r\n        var leftCount = 0;\r\n        // 点在线段的右侧数目\r\n        var rightCount = 0;\r\n        for(var i=0;i<coordinates.length-1;i++){\r\n            var start = coordinates[i];\r\n            var end = coordinates[i+1];\r\n                \r\n            // 起点、终点斜率不存在的情况\r\n            if(start.x===end.x) {\r\n                // 因为射线向右水平，此处说明不相交\r\n                if(x>start.x) continue;\r\n                \r\n                // 从左侧贯穿\r\n                if((end.y>start.y&&y>=start.y && y<=end.y)){\r\n                    leftCount++;\r\n                    crossNum++;\r\n                }\r\n                // 从右侧贯穿\r\n                if((end.y<start.y&&y>=end.y && y<=start.y)) {\r\n                    rightCount++;\r\n                    crossNum++;\r\n                }\r\n                continue;\r\n            }\r\n            // 斜率存在的情况，计算斜率\r\n            var k=(end.y-start.y)/(end.x-start.x);\r\n            // 交点的x坐标\r\n            var x0 = (y-start.y)/k+start.x;\r\n            // 因为射线向右水平，此处说明不相交\r\n            if(x>x0) continue;\r\n                \r\n            if((end.x>start.x&&x0>=start.x && x0<=end.x)){\r\n                crossNum++;\r\n                if(k>=0) leftCount++;\r\n                else rightCount++;\r\n            }\r\n            if((end.x<start.x&&x0>=end.x && x0<=start.x)) {\r\n                crossNum++;\r\n                if(k>=0) rightCount++;\r\n                else leftCount++;\r\n            }\r\n        }\r\n        \r\n        return noneZeroMode===1?leftCount-rightCount!==0:crossNum%2===1;\r\n    }*/\r\n\r\n    /**\r\n     * 检查边界，子对象是否超出父容器边界\r\n     * 当对象偏移offset后是否出界\r\n     * 返回(left:0,right:0,top:0,bottom:0)\r\n     * 如果right>0表示右边出界right偏移量,left<0则表示左边出界left偏移量\r\n     * 如果bottom>0表示下边出界bottom偏移量,top<0则表示上边出界ltop偏移量\r\n     *\r\n     * @method checkOutSide\r\n     * @static\r\n     * @param {bound} parentBounds 父对象的边界\r\n     * @param {bound} targetBounds 对象的边界\r\n     * @param {number} offset 判断是否越界可容偏差\r\n     * @return {bound} 越界标识\r\n     */\r\n    static checkOutSide(parentBounds, targetBounds, offset) {\r\n        let result = {left:0,right:0,top:0,bottom:0};\r\n        if(offset.x < 0 ) {\r\n            result.left = targetBounds.left + offset.x - parentBounds.left;\r\n        }\r\n        else if(offset.x > 0 ) {\r\n            result.right = targetBounds.right + offset.x - parentBounds.right;\r\n        }\r\n\r\n        if(offset.y < 0 ) {\r\n            result.top = targetBounds.top + offset.y - parentBounds.top;\r\n        }\r\n        else if(offset.y > 0) {\r\n            result.bottom = targetBounds.bottom + offset.y - parentBounds.bottom;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 把一个或多个点绕某个点旋转一定角度\r\n     * 先把坐标原点移到旋转中心点，计算后移回\r\n     * @method rotatePoints\r\n     * @static\r\n     * @param {Array/object} p 一个或多个点\r\n     * @param {*} rp 旋转中心点\r\n     * @param {*} r 旋转角度\r\n     */\r\n    static rotatePoints(p, rp, r) {\r\n        if(!r || !p) return p;\r\n        let cos = Math.cos(r);\r\n        let sin = Math.sin(r);\r\n        if(Array.isArray(p)) {\r\n            for(let i=0;i<p.length;i++) {\r\n                if(!p[i]) continue;\r\n                let x1 = p[i].x - rp.x;\r\n                let y1 = p[i].y - rp.y;\r\n                p[i].x = x1 * cos - y1 * sin + rp.x;\r\n                p[i].y = x1 * sin + y1 * cos + rp.y;\r\n            }\r\n        }\r\n        else {\r\n            let x1 = p.x - rp.x;\r\n            let y1 = p.y - rp.y;\r\n            p.x = x1 * cos - y1 * sin + rp.x;\r\n            p.y = x1 * sin + y1 * cos + rp.y;\r\n        }\r\n        return p;\r\n    }\r\n\r\n    /**\r\n     * 去除字符串开始字符\r\n     * \r\n     * @method trimStart\r\n     * @static\r\n     * @param {string} source 需要处理的字符串\r\n     * @param {char} [c] 要去除字符串的前置字符\r\n     * @return {string} 去除前置字符后的字符串\r\n     */\r\n    static trimStart(source, c) {\r\n        c = c || ' ';\r\n        if(source && source.length > 0) {\r\n            let sc = source[0];\r\n            if(sc === c || c.indexOf(sc) >= 0) {\r\n                source = source.substring(1);\r\n                return this.trimStart(source,c);\r\n            }        \r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * 去除字符串结束的字符c\r\n     *\r\n     * @method trimEnd\r\n     * @static\r\n     * @param {string} source 需要处理的字符串\r\n     * @param {char} [c] 要去除字符串的后置字符\r\n     * @return {string} 去除后置字符后的字符串\r\n     */\r\n    static trimEnd(source, c) {\r\n        c = c || ' ';\r\n        if(source && source.length > 0) {\r\n            let sc = source[source.length - 1];\r\n            if(sc === c || c.indexOf(sc) >= 0) {\r\n                source = source.substring(0,source.length - 1);\r\n                return this.trimStart(source,c);\r\n            }        \r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * 去除字符串开始与结束的字符\r\n     *\r\n     * @method trim\r\n     * @static\r\n     * @param {string} source 需要处理的字符串\r\n     * @param {char} [c] 要去除字符串的字符\r\n     * @return {string} 去除字符后的字符串\r\n     */\r\n    static trim(source,c) {\r\n        return this.trimEnd(this.trimStart(source,c),c);\r\n    }\r\n\r\n    /**\r\n     * 检查是否为百分比参数\r\n     *\r\n     * @method checkPercent\r\n     * @static\r\n     * @param {string} 字符串参数\r\n     * @return {boolean} true=当前字符串为百分比参数,false=不是\r\n     */\r\n    static checkPercent(per) {\r\n        if(typeof per === 'string') {\r\n            per = this.trim(per);\r\n            if(per[per.length - 1] == '%') {\r\n                return per;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 转换百分数为数值类型\r\n     *\r\n     * @method percentToNumber\r\n     * @static\r\n     * @param {string} per 把百分比转为数值的参数\r\n     * @return {number} 百分比对应的数值\r\n     */\r\n    static percentToNumber(per) {\r\n        if(typeof per === 'string') {\r\n            let tmp = this.checkPercent(per);\r\n            if(tmp) {\r\n                per = this.trim(tmp,'% ');\r\n                per = per / 100;\r\n            }\r\n        }\r\n        return per;\r\n    }\r\n\r\n    /**\r\n     * 转换16进制为数值\r\n     *\r\n     * @method hexToNumber\r\n     * @static\r\n     * @param {string} h 16进制颜色表达\r\n     * @return {number} 10进制表达\r\n     */\r\n    static hexToNumber(h) {\r\n        if(typeof h !== 'string') return h;\r\n\r\n        h = h.toLowerCase();\r\n        let hex = '0123456789abcdef';\r\n        let v = 0;\r\n        let l = h.length;\r\n        for(let i=0;i<l;i++) {\r\n            let iv = hex.indexOf(h[i]);\r\n            if(iv == 0) continue;\r\n            \r\n            for(let j=1;j<l - i;j++) {\r\n                iv *= 16;\r\n            }\r\n            v += iv;\r\n        }\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 转换数值为16进制字符串表达\r\n     *\r\n     * @method hex\r\n     * @static\r\n     * @param {number} v 数值\r\n     * @return {string} 16进制表达\r\n     */\r\n    static numberToHex(v) {\r\n        let hex = '0123456789abcdef';\r\n        \r\n        let h = '';\r\n        while(v > 0) {\r\n            let t = v % 16;\r\n            h = hex[t] + h;\r\n            v = Math.floor(v / 16);\r\n        }\r\n        return h;\r\n    }\r\n\r\n    /**\r\n     * 16进制颜色转为r g b a 对象 {r, g , b, a}\r\n     * @param {string}} hex 16进度的颜色\r\n     */\r\n    static hexToRGBA(hex) {\r\n        if(typeof hex === 'string') hex = this.trim(hex);   \r\n        else return hex;\r\n\r\n        // 如果缓存存在，则直接返回\r\n        this.__hexToRGBA_Cache = this.__hexToRGBA_Cache || {};\r\n        if(this.__hexToRGBA_Cache[hex]) return this.__hexToRGBA_Cache[hex];\r\n\r\n        let res = hex;\r\n\r\n        // 系统颜色\r\n        if(colorKeywords[res]) res = colorKeywords[res];\r\n\r\n        //当为7位时，表示需要转为带透明度的rgba\r\n        if(res[0] == '#') {\r\n            const color = {\r\n                a: 1\r\n            };\r\n            if(res.length >= 8) {\r\n                color.a = res.substr(1,2);\r\n                color.g = res.substr(5,2);\r\n                color.b = res.substr(7,2);\r\n                color.r = res.substr(3,2);\r\n                //透明度\r\n                color.a = Number((this.hexToNumber(color.a) / 255).toFixed(4));\r\n\r\n                color.r = this.hexToNumber(color.r||0);\r\n                color.g = this.hexToNumber(color.g||0);\r\n                color.b = this.hexToNumber(color.b||0);\r\n                res = color; \r\n            }\r\n            // #cccccc || #ccc\r\n            else if(res.length === 7 || res.length === 4) {\r\n                // #ccc这种情况，把每个位复制一份\r\n                if(res.length === 4) {\r\n                    color.g = res.substr(2, 1);\r\n                    color.g = color.g + color.g;\r\n                    color.b = res.substr(3, 1);\r\n                    color.b = color.b + color.b;\r\n                    color.r = res.substr(1, 1);\r\n                    color.r = color.r + color.r;\r\n                }\r\n                else {\r\n                    color.g = res.substr(3, 2);//除#号外的第二位\r\n                    color.b = res.substr(5, 2);\r\n                    color.r = res.substr(1, 2);\r\n                }\r\n\r\n                color.r = this.hexToNumber(color.r||0);\r\n                color.g = this.hexToNumber(color.g||0);\r\n                color.b = this.hexToNumber(color.b||0);\r\n                \r\n                res = color; \r\n            }\r\n            //如果是5位的话，# 则第2位表示A，后面依次是r,g,b\r\n            else if(res.length === 5) {\r\n                color.a = res.substr(1,1);\r\n                color.g = res.substr(3,1);//除#号外的第二位\r\n                color.b = res.substr(4,1);\r\n                color.r = res.substr(2,1);\r\n\r\n                color.r = this.hexToNumber(color.r||0);\r\n                color.g = this.hexToNumber(color.g||0);\r\n                color.b = this.hexToNumber(color.b||0);\r\n                //透明度\r\n                color.a = Number((this.hexToNumber(color.a) / 255).toFixed(4));\r\n                res = color; \r\n            }\r\n        }  \r\n        if(typeof res === 'string') {\r\n            const m = res.match(/rgb(a)?\\s*\\(\\s*([\\d\\.]+)\\s*,\\s*([\\d\\.]+)\\s*,\\s*([\\d\\.]+)\\s*(,\\s*[\\d\\.]+)?\\s*\\)/i); \r\n            if(m && m.length === 6) {\r\n                const color = {\r\n                    r: Number(m[2]),\r\n                    g: Number(m[3]),\r\n                    b: Number(m[4]),\r\n                    a: Number(this.trimStart(m[5]||'1', ','))\r\n                };\r\n                res = color;\r\n            }\r\n        }\r\n        return this.__hexToRGBA_Cache[hex] = res;     \r\n    }\r\n\r\n    /**\r\n     * 把255的rgb值转为0-1的值\r\n     * @param {rgba} color 颜色\r\n     */\r\n    static rgbToDecimal(color) {\r\n        color = this.clone(color);\r\n        color.r = this.byteToDecimal(color.r);\r\n        color.g = this.byteToDecimal(color.g);\r\n        color.b = this.byteToDecimal(color.b);\r\n        return color;\r\n    }\r\n\r\n    //255值转为0-1的小数\r\n    static byteToDecimal(b) {\r\n        return b / 255;\r\n    }\r\n\r\n    /**\r\n     * 转换颜色格式，如果输入r,g,b则转为hex格式,如果为hex则转为r,g,b格式\r\n     *\r\n     * @method toColor\r\n     * @static\r\n     * @param {string} hex 16进制颜色表达\r\n     * @return {string} 颜色字符串\r\n     */\r\n    static toColor(r, g, b, a) {    \r\n        if(typeof r === 'string' && r) {\r\n            r = this.trim(r); \r\n            // 正常的颜色表达，不需要转换\r\n            if(r[0] === '#' && (r.length === 4 || r.length === 7)) return r;\r\n\r\n            const color = this.hexToRGBA(r);\r\n            if(typeof color === 'string') return color;\r\n            \r\n            r = typeof color.r !== 'undefined'? color.r: r;\r\n            g = typeof color.g !== 'undefined'? color.g: g;\r\n            b = typeof color.b !== 'undefined'? color.b: b;\r\n            a = typeof color.a !== 'undefined'? color.a: a;\r\n        }\r\n        if(r && typeof r === 'object') {\r\n            g = r.g;\r\n            b = r.b;\r\n            a = r.a || 1;\r\n            r = r.r;\r\n        }\r\n        if(typeof r != 'undefined' && typeof g != 'undefined' && typeof b != 'undefined') {\r\n            if(typeof a != 'undefined') {            \r\n                return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\r\n            }\r\n            else {\r\n                return 'rgb(' + r + ',' + g + ',' + b + ')';\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n    // window.requestAnimationFrame() 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行\r\n    static requestAnimationFrame(callback, win) {\r\n        let fun = win && win.requestAnimationFrame? win.requestAnimationFrame: (typeof window !== 'undefined' && window.requestAnimationFrame? window.requestAnimationFrame: setTimeout);        \r\n\t\treturn fun(callback, 20);\r\n    }\r\n    static cancelAnimationFrame(handler, win) {\r\n        let fun = win && win.cancelAnimationFrame? win.cancelAnimationFrame: (typeof window !== 'undefined' && window.cancelAnimationFrame? window.cancelAnimationFrame: clearTimeout);        \r\n\t\treturn fun(handler);\r\n    }\t\r\n}\r\nexport { jmUtils };","\r\nimport {jmList} from \"./jmList.js\";\r\n\r\nvar control_id_counter = 0;\r\n/**\r\n *  所有jm对象的基础对象\r\n * \r\n * @class jmObject\r\n * @for jmGraph\r\n */\r\nexport default class jmObject {\r\n\t//id;\r\n\tconstructor(g) {\r\n\t\tif(g && g.type == 'jmGraph') {\r\n\t\t\tthis.graph = g;\r\n\t\t}\r\n\t\tthis.id = ++control_id_counter; //生成一个唯一id\r\n\t}\r\n\t\r\n\t/**\r\n\t * 检 查对象是否为指定类型\r\n\t * \r\n\t * @method is\r\n\t * @param {class} type 判断的类型\r\n\t * @for jmObject\r\n\t * @return {boolean} true=表示当前对象为指定的类型type,false=表示不是\r\n\t */\r\n\tis(type) {\r\n\t\tif(typeof type == 'string') {\r\n\t\t\treturn this.type == type;\r\n\t\t}\r\n\t\treturn this instanceof type;\r\n\t}\r\n\r\n\t/**\r\n\t * 给控件添加动画处理,如果成功执行会导致画布刷新。\r\n\t *\r\n\t * @method animate\r\n\t * @for jmObject\r\n\t * @param {function} handle 动画委托\r\n\t * @param {integer} millisec 此委托执行间隔 （毫秒）\r\n\t */\r\n\tanimate(...args) {\t\r\n\t\tif(this.is('jmGraph')) {\r\n\t\t\tif(args.length > 1) {\t\t\t\r\n\t\t\t\tif(!this.animateHandles) this.animateHandles = new jmList();\r\n\t\t\t\t\r\n\t\t\t\tvar params = [];\r\n\t\t\t\tif(args.length > 2) {\r\n\t\t\t\t\tfor(var i=2;i<args.length;i++) {\r\n\t\t\t\t\t\tparams.push(args[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\r\n\t\t\t\tthis.animateHandles.add({\r\n\t\t\t\t\tmillisec: args[1] || 20, \r\n\t\t\t\t\thandle: args[0], \r\n\t\t\t\t\tparams:params\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif(this.animateHandles) {\r\n\t\t\t\tif(this.animateHandles.count() > 0) {\r\n\t\t\t\t\tvar self = this;\r\n\t\t\t\t\t//延时处理动画事件\r\n\t\t\t\t\tthis.dispatcher = setTimeout(function(_this) {\r\n\t\t\t\t\t\t_this = _this || self;\r\n\t\t\t\t\t\t//var needredraw = false;\r\n\t\t\t\t\t\tvar overduehandles = [];\r\n\t\t\t\t\t\tvar curTimes = new Date().getTime();\r\n\t\t\t\t\t\t_this.animateHandles.each(function(i,ani) {\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tif(ani && ani.handle && (!ani.times || curTimes - ani.times >= ani.millisec)) {\r\n\t\t\t\t\t\t\t\t\tvar r = ani.handle.apply(_this, ani.params);\r\n\t\t\t\t\t\t\t\t\tif(r === false) {\r\n\t\t\t\t\t\t\t\t\t\toverduehandles.push(ani);//表示已完成的动画效果\r\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tani.times = curTimes;\r\n\t\t\t\t\t\t\t\t\t//needredraw = true;\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch(e) {\r\n\t\t\t\t\t\t\t\tif(window.console && window.console.info) {\r\n\t\t\t\t\t\t\t\t\twindow.console.info(e.toString());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(ani) overduehandles.push(ani);//异常的事件，不再执行\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tfor(var i in overduehandles) {\r\n\t\t\t\t\t\t\t_this.animateHandles.remove(overduehandles[i]);//移除完成的效果\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_this.animate();\r\n\t\t\t\t\t},10,this);//刷新\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\t\telse {\r\n\t\t\tvar graph = this.graph;\r\n\t\t\tif(graph) {\r\n\t\t\t\tgraph.animate(...args);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { jmObject };","\r\nimport {jmUtils} from \"./jmUtils.js\";\r\nimport { jmObject } from \"./jmObject.js\";\r\n\r\nconst PROPERTY_KEY = Symbol(\"properties\");\r\n\r\n/**\r\n * 对象属性管理\r\n * \r\n * @class jmProperty\r\n * @extends jmObject\r\n * @require jmObject\r\n */\r\nexport default class jmProperty extends jmObject {\t\t\r\n\t\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis[PROPERTY_KEY] = {};\r\n\t\tif(params && params.mode) this.mode = params.mode;\r\n\t}\r\n\r\n\t/**\r\n\t * 基础属性读写接口\r\n\t * @method property\r\n\t * @param {string} name 属性名\r\n\t * @param {any} value 属性的值\r\n\t * @returns {any} 属性的值\r\n\t */\r\n\t property(...pars) {\r\n\t\tif(pars) {\r\n\t\t\tconst pros = this[PROPERTY_KEY];\r\n\t\t\tconst name = pars[0];\r\n\t\t\tif(pars.length > 1) {\r\n\t\t\t\tconst value = pars[1];\r\n\t\t\t\tconst args = {oldValue: pros[name], newValue: value};\r\n\t\t\t\tpros[name] = pars[1];\r\n\t\t\t\tif(this.emit) this.emit('propertyChange', name, args);\r\n\t\t\t\treturn pars[1];\r\n\t\t\t}\r\n\t\t\telse if(name) {\r\n\t\t\t\treturn pros[name];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 是否需要刷新画板，属性的改变会导致它变为true\r\n\t * @property needUpdate\r\n\t * @type {boolean}\r\n\t */\r\n\tget needUpdate() {\r\n\t\treturn this.property('needUpdate');\r\n\t}\r\n\tset needUpdate(v) {\r\n\t\tthis.property('needUpdate', v);\r\n\t\t//子控件属性改变，需要更新整个画板\r\n\t\tif(v && !this.is('jmGraph') && this.graph) {\r\n\t\t\tthis.graph.needUpdate = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 当前所在的画布对象 jmGraph\r\n\t * @property graph\r\n\t * @type {jmGraph}\r\n\t */\r\n\tget graph() {\r\n\t\tlet g = this.property('graph');\r\n\t\tg = g || (this.property('graph', this.findParent('jmGraph')));\r\n\t\treturn g;\r\n\t}\r\n\tset graph(v) {\r\n\t\treturn this.property('graph', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 绘制模式 2d/webgl\r\n\t * @property mode\r\n\t * @type {string}\r\n\t */\r\n\tget mode() {\r\n\t\tlet m = this.property('mode');\r\n\t\tif(m) return m;\r\n\t\telse if(this.is('jmGraph')) return this.property('mode');\t\t\r\n\t\treturn this.graph.mode;\r\n\t}\r\n\tset mode(v) {\r\n\t\treturn this.property('mode', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 在下次进行重绘时执行\r\n\t * @param {Function} handler \r\n\t */\r\n\trequestAnimationFrame(handler) {\r\n\t\treturn jmUtils.requestAnimationFrame(handler, this.graph? this.graph.canvas: null);\r\n\t}\r\n\t/**\r\n\t * 清除执行回调\r\n\t * @param {Function} handler \r\n\t * @returns \r\n\t */\r\n\tcancelAnimationFrame(handler) {\r\n\t\treturn jmUtils.cancelAnimationFrame(handler, this.graph? this.graph.canvas: null);\r\n\t}\r\n}\r\n\r\nexport { jmProperty };\r\n\r\n\r\n","import {jmUtils} from \"./jmUtils.js\";\r\n\r\n/**\r\n * 画图阴影对象表示法\r\n *\r\n * @class jmShadow\r\n * @param {number} x 横坐标偏移量\r\n * @param {number} y 纵坐标编移量\r\n * @param {number} blur 模糊值\r\n * @param {string} color 阴影的颜色\r\n */\r\n\r\nexport default class jmShadow {\r\n\tconstructor(x, y, blur, color) {\r\n\t\tif(typeof x == 'string' && !y && !blur && !color) {\r\n\t\t\tthis.fromString(x);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.blur = blur;\r\n\t\t\tthis.color = color;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 根据字符串格式转为阴影\r\n\t * @method fromString\r\n\t * @param {string} s 阴影字符串 x,y,blur,color\r\n\t */\r\n\tfromString(s) {\r\n\t\tif(!s) return;\r\n\t\tlet ms = s.match(/\\s*([^,]+)\\s*,\\s*([^,]+)\\s*(,[^,]+)?\\s*(,[\\s\\S]+)?\\s*/i);\r\n\t\tif(ms) {\r\n\t\t\tthis.x = ms[1]||0;\r\n\t\t\tthis.y = ms[2]||0;\r\n\t\t\tif(ms[3]) {\r\n\t\t\t\tms[3] = jmUtils.trim(ms[3],', ');\r\n\t\t\t\t//如果第三位是颜色格式，则表示为颜色\r\n\t\t\t\tif(ms[3].indexOf('#')===0 || /^rgb/i.test(ms[3])) {\r\n\t\t\t\t\tthis.color = ms[3];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.blur = jmUtils.trim(ms[3],', ');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(ms[4]) {\r\n\t\t\t\tthis.color = jmUtils.trim(ms[4],', ');\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * 转为字符串格式 x,y,blur,color\r\n\t * @method toString\r\n\t * @returns {string} 阴影字符串\r\n\t */\r\n\ttoString() {\r\n\t\tlet s = this.x + ',' + this.y;\r\n\t\tif(this.blur) s += ',' + this.blur;\r\n\t\tif(this.color) s += ',' + this.color;\r\n\t\treturn s;\r\n\t}\r\n}\r\n\r\nexport { jmShadow };","import {jmUtils} from \"./jmUtils.js\";\r\nimport {jmList} from \"./jmList.js\";\r\n\r\n/**\r\n * 渐变类\r\n *\r\n * @class jmGradient\r\n * @param {object} op 渐变参数,type:[linear= 线性渐变,radial=放射性渐变] \r\n */\r\nexport default class jmGradient {\r\n\tconstructor(opt) {\r\n\t\tthis.stops = new jmList();\r\n\r\n\t\tif(opt && typeof opt == 'object') {\r\n\t\t\tfor(let k in opt) {\r\n\t\t\t\tif(k === 'stops') continue;\r\n\t\t\t\tthis[k] = opt[k];\r\n\t\t\t}\r\n\t\t\tif(opt.stops && Array.isArray(opt.stops)) {\r\n\t\t\t\tthis.stops.push(...opt.stops);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//解析字符串格式\r\n\t\t//linear-gradient(direction, color-stop1, color-stop2, ...);\r\n\t\t//radial-gradient(center, shape size, start-color, ..., last-color);\r\n\t\telse if(typeof opt == 'string') {\r\n\t\t\tthis.fromString(opt);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 添加渐变色\r\n\t * \r\n\t * @method addStop\r\n\t * @for jmGradient\r\n\t * @param {number} offset 放射渐变颜色偏移,可为百分比参数。\r\n\t * @param {string} color 当前偏移颜色值\r\n\t */\r\n\taddStop(offset, color) {\r\n\t\tthis.stops.add({\r\n\t\t\toffset: Number(offset),\r\n\t\t\tcolor: color\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * 生成为canvas的渐变对象\r\n\t *\r\n\t * @method toGradient\r\n\t * @for jmGradient\r\n\t * @param {jmControl} control 当前渐变对应的控件\r\n\t * @return {gradient} canvas渐变对象\r\n\t */\r\n\ttoGradient(control) {\r\n\t\tlet gradient;\r\n\t\tlet context = control.context || control;\r\n\t\tlet bounds = control.absoluteBounds?control.absoluteBounds:control.getAbsoluteBounds();\r\n\t\tlet x1 = this.x1||0;\r\n\t\tlet y1 = this.y1||0;\r\n\t\tlet x2 = this.x2;\r\n\t\tlet y2 = this.y2;\r\n\r\n\t\tlet location = control.getLocation();\r\n\r\n\t\tlet d = 0;\r\n\t\tif(location.radius) {\r\n\t\t\td = location.radius * 2;\t\t\t\t\r\n\t\t}\r\n\t\tif(!d) {\r\n\t\t\td = Math.min(location.width,location.height);\t\t\t\t\r\n\t\t}\r\n\r\n\t\t//let offsetLine = 1;//渐变长度或半径\r\n\t\t//处理百分比参数\r\n\t\tif(jmUtils.checkPercent(x1)) {\r\n\t\t\tx1 = jmUtils.percentToNumber(x1) * (bounds.width || d);\r\n\t\t}\r\n\t\tif(jmUtils.checkPercent(x2)) {\r\n\t\t\tx2 = jmUtils.percentToNumber(x2) * (bounds.width || d);\r\n\t\t}\r\n\t\tif(jmUtils.checkPercent(y1)) {\r\n\t\t\ty1 = jmUtils.percentToNumber(y1) * (bounds.height || d);\r\n\t\t}\r\n\t\tif(jmUtils.checkPercent(y2)) {\r\n\t\t\ty2 = jmUtils.percentToNumber(y2) * (bounds.height || d);\r\n\t\t}\t\r\n\r\n\t\tlet sx1 = Number(x1) + bounds.left;\r\n\t\tlet sy1 = Number(y1) + bounds.top;\r\n\t\tlet sx2 = Number(x2) + bounds.left;\r\n\t\tlet sy2 = Number(y2) + bounds.top;\r\n\t\tif(this.type === 'linear') {\r\n\t\t\tif(control.mode === 'webgl' && control.webglControl) {\r\n\t\t\t\tgradient = control.webglControl.createLinearGradient(x1, y1, x2, y2, bounds);\r\n\t\t\t\tgradient.key = this.toString();\r\n\t\t\t}\t\r\n\t\t\telse {\t\t\r\n\t\t\t\tcontext.createLinearGradient && (gradient = context.createLinearGradient(sx1, sy1, sx2, sy2));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.type === 'radial') {\r\n\t\t\tlet r1 = this.r1||0;\r\n\t\t\tlet r2 = this.r2;\r\n\t\t\tif(jmUtils.checkPercent(r1)) {\r\n\t\t\t\tr1 = jmUtils.percentToNumber(r1);\t\t\t\r\n\t\t\t\tr1 = d * r1;\r\n\t\t\t}\r\n\t\t\tif(jmUtils.checkPercent(r2)) {\r\n\t\t\t\tr2 = jmUtils.percentToNumber(r2);\r\n\t\t\t\tr2 = d * r2;\r\n\t\t\t}\r\n\t\t\tif(control.mode === 'webgl' && control.webglControl) {\r\n\t\t\t\tgradient = control.webglControl.createRadialGradient(x1, y1, r1, x2, y2, r2, bounds);\r\n\t\t\t\tgradient.key = this.toString();\r\n\t\t\t}\t\r\n\t\t\t//offsetLine = Math.abs(r2 - r1);//二圆半径差\r\n\t\t\telse if(context.createRadialGradient) {\r\n\t\t\t\tgradient = context.createRadialGradient(sx1, sy1, r1, sx2, sy2, r2);\t\r\n\t\t\t}\r\n\t\t\t//小程序的接口特殊\r\n\t\t\telse if(context.createCircularGradient) { \r\n\t\t\t\tgradient = context.createCircularGradient(sx1, sy1, r2);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//颜色渐变\r\n\t\tif(gradient) {\r\n\t\t\tthis.stops.each(function(i,s) {\t\r\n\t\t\t\tlet c = jmUtils.toColor(s.color);\r\n\t\t\t\t//s.offset 0.0 ~ 1.0\r\n\t\t\t\tgradient && gradient.addColorStop(s.offset, c);\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst s = this.stops.get(0);\r\n\t\t\treturn (s && s.color) || '#000';\r\n\t\t}\r\n\t\t\r\n\t\treturn gradient;\r\n\t}\r\n\r\n\t/**\r\n\t * 变换为字条串格式\r\n\t * linear-gradient(x1 y1 x2 y2, color1 step, color2 step, ...);\t//radial-gradient(x1 y1 r1 x2 y2 r2, color1 step,color2 step, ...);\r\n\t * linear-gradient线性渐变，x1 y1表示起点，x2 y2表示结束点,color表颜色，step为当前颜色偏移\r\n\t * radial-gradient径向渐变,x1 y1 r1分别表示内圆中心和半径，x2 y2 r2为结束圆 中心和半径，颜色例似线性渐变 step为0-1之间\r\n\t *\r\n\t * @method fromString\r\n\t * @for jmGradient\r\n\t * @return {string} \r\n\t */\r\n\tfromString(s) {\r\n\t\tif(!s) return;\r\n\t\tlet ms = s.match(/(linear|radial)-gradient\\s*\\(\\s*([^,]+)\\s*,\\s*((.|\\s)+)\\)/i);\r\n\t\tif(!ms || ms.length < 3) return;\r\n\t\tthis.type = ms[1].toLowerCase();\t\t\r\n\t\t\r\n\t\tconst ps = jmUtils.trim(ms[2]).split(/\\s+/);\r\n\t\t//线性渐变\r\n\t\tif(this.type == 'linear') {\r\n\t\t\tif(ps.length <= 2) {\r\n\t\t\t\tthis.x2 = ps[0];\r\n\t\t\t\tthis.y2 = ps[1]||0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.x1 = ps[0];\r\n\t\t\t\tthis.y1 = ps[1];\r\n\t\t\t\tthis.x2 = ps[2];\r\n\t\t\t\tthis.y2 = ps[3];\r\n\t\t\t}\r\n\t\t}\r\n\t\t//径向渐变\r\n\t\telse {\r\n\t\t\tif(ps.length <= 3) {\r\n\t\t\t\tthis.x2 = ps[0];\r\n\t\t\t\tthis.y2 = ps[1]||0;\r\n\t\t\t\tthis.r2 = ps[2]||0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.x1 = ps[0];\r\n\t\t\t\tthis.y1 = ps[1];\r\n\t\t\t\tthis.r1 = ps[2];\r\n\t\t\t\tthis.x2 = ps[3];\r\n\t\t\t\tthis.y2 = ps[3];\r\n\t\t\t\tthis.r2 = ps[3];\r\n\t\t\t}\r\n\t\t}\r\n\t\t//解析颜色偏移\r\n\t\t//color step\r\n\t\tconst pars = ms[3].match(/((rgb(a)?\\s*\\([\\d,\\.\\s]+\\))|(#[a-zA-Z\\d]+))\\s+([\\d\\.]+)/ig);\r\n\t\tif(pars && pars.length) {\r\n\t\t\tfor(let i=0;i<pars.length;i++) {\r\n\t\t\t\tconst par = jmUtils.trim(pars[i]);\r\n\t\t\t\tconst spindex = par.lastIndexOf(' ');\r\n\t\t\t\tif(spindex > -1) {\t\t\t\r\n\t\t\t\t\tconst offset = Number(par.substr(spindex + 1));\t\t\r\n\t\t\t\t\tconst color = jmUtils.trim(par.substr(0, spindex));\r\n\t\t\t\t\tif(!isNaN(offset) && color) {\r\n\t\t\t\t\t\tthis.addStop(offset, color);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 转换为渐变的字符串表达\r\n\t *\r\n\t * @method toString\r\n\t * @for jmGradient\r\n\t * @return {string} linear-gradient(x1 y1 x2 y2, color1 step, color2 step, ...);\t//radial-gradient(x1 y1 r1 x2 y2 r2, color1 step,color2 step, ...);\r\n\t */\r\n\ttoString() {\r\n\t\tlet str = this.type + '-gradient(';\r\n\t\tif(this.type == 'linear') {\r\n\t\t\tstr += this.x1 + ' ' + this.y1 + ' ' + this.x2 + ' ' + this.y2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstr += this.x1 + ' ' + this.y1 + ' ' + this.r1 + ' ' + this.x2 + ' ' + this.y2 + ' ' + this.r2;\r\n\t\t}\r\n\t\t//颜色渐变\r\n\t\tthis.stops.each(function(i,s) {\t\r\n\t\t\tstr += ',' + s.color + ' ' + s.offset;\r\n\t\t});\r\n\t\treturn str + ')';\r\n\t}\r\n}\r\n\r\nexport { jmGradient };\r\n\r\n\r\n\r\n","import {jmUtils} from \"./jmUtils.js\";\r\n/**\r\n * 事件模型\r\n *\r\n * @class jmEvents\r\n * @for jmGraph\r\n */\r\nexport default class jmEvents {\r\n\r\n\tconstructor(container, target) {\r\n\t\tthis.container = container;\r\n\t\tthis.target = target || container;\r\n\t\tthis.mouseHandler = new jmMouseEvent(this, container, target);\r\n\t\tthis.keyHandler = new jmKeyEvent(this, container, target);\r\n\t}\r\n\r\n\ttouchStart(evt) {\r\n\t\tevt = evt || window.event;\r\n\t\tevt.eventName = 'touchstart';\r\n\t\tthis.container.raiseEvent('touchstart',evt);\r\n\t\tlet t = evt.target || evt.srcElement;\r\n\t\tif(t == this.target) {\r\n\t\t\t//if(evt.preventDefault) evt.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\ttouchMove(evt) {\r\n\t\tevt = evt || window.event;\r\n\t\tevt.eventName = 'touchmove';\r\n\t\tthis.container.raiseEvent('touchmove',evt);\r\n\t\tlet t = evt.target || evt.srcElement;\r\n\t\tif(t == this.target) {\r\n\t\t\t//if(evt.preventDefault) evt.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\ttouchEnd(evt) {\r\n\t\tevt = evt || window.event;\r\n\t\tevt.eventName = 'touchend';\r\n\t\t\r\n\t\tthis.container.raiseEvent('touchend',evt);\r\n\t\tlet t = evt.target || evt.srcElement;\r\n\t\tif(t == this.target) {\r\n\t\t\t//if(evt.preventDefault) evt.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\ttouchCancel(evt) {\r\n\t\tevt = evt || window.event;\r\n\t\tevt.eventName = 'touchcancel';\r\n\t\t\r\n\t\tthis.container.raiseEvent('touchcancel',evt);\r\n\t\tlet t = evt.target || evt.srcElement;\r\n\t\tif(t == this.target) {\r\n\t\t\t//if(evt.preventDefault) evt.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\t// 销毁\r\n\tdestroy() {\r\n\t\tthis.mouseHandler.destroy();\r\n\t\tthis.keyHandler.destroy();\r\n\t}\r\n}\r\n\r\n/**\r\n * 鼠标事件处理对象，container 为事件主体，target为响应事件对象\r\n */\r\nclass jmMouseEvent {\r\n\tconstructor(instance, container, target) {\r\n\t\tthis.instance = instance;\r\n\t\tthis.container = container;\r\n\t\tthis.target = target || container;\r\n\r\n\t\tthis.eventEvents = {};// 所有绑定的事件\r\n\r\n\t\tthis.init(instance, container, target);\r\n\t}\r\n\t\r\n\tinit(instance, container, target) {\r\n\t\tlet canvas = this.target;\t\r\n\t\tlet doc = typeof document != 'undefined'? document: null;\r\n\t\t//禁用鼠标右健系统菜单\r\n\t\t//canvas.oncontextmenu = function() {\r\n\t\t//\treturn false;\r\n\t\t//};\r\n\r\n\t\tthis.eventEvents['mousedown'] = jmUtils.bindEvent(this.target,'mousedown',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tevt.eventName = 'mousedown';\r\n\t\t\tlet r = container.raiseEvent('mousedown',evt);\r\n\t\t\t//if(r === false) {\r\n\t\t\t\t//if(evt.preventDefault) evt.preventDefault();\r\n\t\t\t\t//return false;\r\n\t\t\t//}\t\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tthis.eventEvents['mousemove'] = jmUtils.bindEvent(this.target,'mousemove',function(evt) {\t\r\n\t\t\tevt = evt || window.event;\t\t\r\n\t\t\tevt.eventName = 'mousemove';\r\n\t\t\tlet target = evt.target || evt.srcElement;\r\n\t\t\tif(target == canvas) {\r\n\t\t\t\tlet r = container.raiseEvent('mousemove',evt);\r\n\t\t\t\t//if(r === false) {\r\n\t\t\t\t\tif(evt.preventDefault) evt.preventDefault();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t//}\t\t\r\n\t\t\t}\t\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tthis.eventEvents['mouseover'] = jmUtils.bindEvent(this.target,'mouseover',function(evt) {\r\n\t\t\tevt = evt || window.event;\t\r\n\t\t\tevt.eventName = 'mouseover';\r\n\t\t\tcontainer.raiseEvent('mouseover',evt);\r\n\t\t});\r\n\t\tthis.eventEvents['mouseleave'] = jmUtils.bindEvent(this.target,'mouseleave',function(evt) {\r\n\t\t\tevt = evt || window.event;\t\r\n\t\t\tevt.eventName = 'mouseleave';\r\n\t\t\tcontainer.raiseEvent('mouseleave',evt);\r\n\t\t});\t\t\t\r\n\t\tthis.eventEvents['mouseout'] = jmUtils.bindEvent(this.target,'mouseout',function(evt) {\r\n\t\t\tevt = evt || window.event;\t\r\n\t\t\tevt.eventName = 'mouseout';\r\n\t\t\tcontainer.raiseEvent('mouseout',evt);\r\n\t\t});\r\n\t\tdoc && (this.eventEvents['mouseup'] = jmUtils.bindEvent(doc,'mouseup',function(evt) {\r\n\t\t\tevt = evt || window.event;\t\r\n\t\t\tevt.eventName = 'mouseup';\r\n\t\t\t//let target = evt.target || evt.srcElement;\r\n\t\t\t//if(target == canvas) {\t\t\t\t\t\t\r\n\t\t\t\tlet r = container.raiseEvent('mouseup',evt);\r\n\t\t\t\tif(r === false) {\r\n\t\t\t\t\tif(evt.preventDefault) evt.preventDefault();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\t\t\r\n\t\t\t//}\r\n\t\t}));\r\n\t\t\r\n\t\tthis.eventEvents['dblclick'] = jmUtils.bindEvent(this.target,'dblclick',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tevt.eventName = 'dblclick';\r\n\t\t\tcontainer.raiseEvent('dblclick',evt);\r\n\t\t});\r\n\t\tthis.eventEvents['click'] = jmUtils.bindEvent(this.target,'click',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tevt.eventName = 'click';\r\n\t\t\tcontainer.raiseEvent('click',evt);\r\n\t\t});\r\n\r\n\t\tdoc && (this.eventEvents['resize'] = jmUtils.bindEvent(doc,'resize',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tevt.eventName = 'resize';\r\n\t\t\treturn container.raiseEvent('resize',evt);\r\n\t\t}));\r\n\r\n\t\t// passive: false 为了让浏览器不告警并且preventDefault有效\r\n\t\t// 另一种处理：touch-action: none; 这样任何触摸事件都不会产生默认行为，但是 touch 事件照样触发。\r\n\t\tthis.eventEvents['touchstart'] = jmUtils.bindEvent(this.target,'touchstart', function(evt) {\r\n\t\t\tevt.eventName = 'touchstart';\r\n\t\t\treturn instance.touchStart(evt);\r\n\t\t},{ passive: false });\r\n\r\n\t\tthis.eventEvents['touchmove'] = jmUtils.bindEvent(this.target,'touchmove', function(evt) {\r\n\t\t\tevt.eventName = 'touchmove';\r\n\t\t\treturn instance.touchMove(evt);\r\n\t\t},{ passive: false });\r\n\r\n\t\tdoc && (this.eventEvents['touchend'] = jmUtils.bindEvent(doc,'touchend', function(evt) {\r\n\t\t\tevt.eventName = 'touchend';\r\n\t\t\treturn instance.touchEnd(evt);\r\n\t\t},{ passive: false }));\r\n\r\n\t\tdoc && (this.eventEvents['touchcancel'] = jmUtils.bindEvent(doc,'touchcancel', function(evt) {\r\n\t\t\tevt.eventName = 'touchcancel';\r\n\t\t\treturn instance.touchCancel(evt);\r\n\t\t},{ passive: false }));\r\n\t}\r\n\r\n\t// 销毁所有事件\r\n\tdestroy() {\r\n\t\tfor(let name in this.eventEvents) {\r\n\t\t\tconst event = this.eventEvents[name];\r\n\t\t\tif(!event || !event.fun) continue;\r\n\t\t\tjmUtils.removeEvent(event.target, name, event.fun);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * 健盘事件处理对象，container 为事件主体，target为响应事件对象\r\n */\r\nclass jmKeyEvent {\r\n\tconstructor(instance, container,target) {\r\n\t\tthis.instance = instance;\r\n\t\tthis.container = container;\r\n\t\tthis.target = target || container;\r\n\r\n\t\tthis.eventEvents = {};// 所有绑定的事件\r\n\r\n\t\tthis.init(container, target);\r\n\t}\r\n\r\n\t/**\r\n\t * 初始化健盘事件\r\n\t */\r\n\tinit(container, target) {\r\n\t\tlet doc = typeof document != 'undefined'? document: null;\r\n\t\t/**\r\n\t\t * 检查是否触发健盘事件至画布\r\n\t\t * 如果触发对象为输入框等对象则不响应事件\r\n\t\t *  \r\n\t\t */\r\n\t\tlet checkKeyEvent = (evt) => {\r\n\t\t\tlet target = evt.srcElement || evt.target;\r\n\t\t\tif(target && (target.tagName == 'INPUT' \r\n\t\t\t\t|| target.tagName == 'TEXTAREA'\r\n\t\t\t\t|| target.tagName == 'ANCHOR' \r\n\t\t\t\t|| target.tagName == 'FORM' \r\n\t\t\t\t|| target.tagName == 'FILE'\r\n\t\t\t\t|| target.tagName == 'IMG'\r\n\t\t\t\t|| target.tagName == 'HIDDEN'\r\n\t\t\t\t|| target.tagName == 'RADIO'\r\n\t\t\t\t|| target.tagName == 'TEXT'\t)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tdoc && (this.eventEvents['keypress'] = jmUtils.bindEvent(doc,'keypress',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tif(!checkKeyEvent(evt)) return;//如果事件为其它输入框，则不响应\r\n\t\t\tlet r = container.raiseEvent('keypress',evt);\r\n\t\t\tif(r === false && evt.preventDefault) \r\n\t\t\t\tevt.preventDefault();\r\n\t\t\treturn r;\r\n\t\t}));\r\n\t\tdoc && (this.eventEvents['keydown'] = jmUtils.bindEvent(doc,'keydown',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tif(!checkKeyEvent(evt)) return;//如果事件为其它输入框，则不响应\r\n\t\t\tlet r = container.raiseEvent('keydown',evt);\r\n\t\t\tif(r === false && evt.preventDefault) \r\n\t\t\t\tevt.preventDefault();\r\n\t\t\treturn r;\r\n\t\t}));\r\n\t\tdoc && (this.eventEvents['keyup'] = jmUtils.bindEvent(doc,'keyup',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tif(!checkKeyEvent(evt)) return;//如果事件为其它输入框，则不响应\r\n\t\t\tlet r = container.raiseEvent('keyup',evt);\r\n\t\t\tif(r === false && evt.preventDefault) \r\n\t\t\t\tevt.preventDefault();\r\n\t\t\treturn r;\r\n\t\t}));\t\t\t\r\n\t}\r\n\r\n\t// 销毁所有事件\r\n\tdestroy() {\r\n\t\tfor(let name in this.eventEvents) {\r\n\t\t\tconst event = this.eventEvents[name];\r\n\t\t\tif(!event || !event.fun) continue;\r\n\t\t\tjmUtils.removeEvent(event.target, name, event.fun);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { jmEvents };\r\n","'use strict';\r\n\r\nexport default earcut;\r\n\r\nfunction earcut(data, holeIndices, dim) {\r\n\r\n    dim = dim || 2;\r\n\r\n    var hasHoles = holeIndices && holeIndices.length,\r\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\r\n        outerNode = linkedList(data, 0, outerLen, dim, true),\r\n        triangles = [];\r\n\r\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\r\n\r\n    var minX, minY, maxX, maxY, x, y, invSize;\r\n\r\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\r\n\r\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n    if (data.length > 80 * dim) {\r\n        minX = maxX = data[0];\r\n        minY = maxY = data[1];\r\n\r\n        for (var i = dim; i < outerLen; i += dim) {\r\n            x = data[i];\r\n            y = data[i + 1];\r\n            if (x < minX) minX = x;\r\n            if (y < minY) minY = y;\r\n            if (x > maxX) maxX = x;\r\n            if (y > maxY) maxY = y;\r\n        }\r\n\r\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n        invSize = Math.max(maxX - minX, maxY - minY);\r\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\r\n    }\r\n\r\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\r\n\r\n    return triangles;\r\n}\r\n\r\n// create a circular doubly linked list from polygon points in the specified winding order\r\nfunction linkedList(data, start, end, dim, clockwise) {\r\n    var i, last;\r\n\r\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\r\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\r\n    } else {\r\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\r\n    }\r\n\r\n    if (last && equals(last, last.next)) {\r\n        removeNode(last);\r\n        last = last.next;\r\n    }\r\n\r\n    return last;\r\n}\r\n\r\n// eliminate colinear or duplicate points\r\nfunction filterPoints(start, end) {\r\n    if (!start) return start;\r\n    if (!end) end = start;\r\n\r\n    var p = start,\r\n        again;\r\n    do {\r\n        again = false;\r\n\r\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\r\n            removeNode(p);\r\n            p = end = p.prev;\r\n            if (p === p.next) break;\r\n            again = true;\r\n\r\n        } else {\r\n            p = p.next;\r\n        }\r\n    } while (again || p !== end);\r\n\r\n    return end;\r\n}\r\n\r\n// main ear slicing loop which triangulates a polygon (given as a linked list)\r\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\r\n    if (!ear) return;\r\n\r\n    // interlink polygon nodes in z-order\r\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\r\n\r\n    var stop = ear,\r\n        prev, next;\r\n\r\n    // iterate through ears, slicing them one by one\r\n    while (ear.prev !== ear.next) {\r\n        prev = ear.prev;\r\n        next = ear.next;\r\n\r\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\r\n            // cut off the triangle\r\n            triangles.push(prev.i / dim | 0);\r\n            triangles.push(ear.i / dim | 0);\r\n            triangles.push(next.i / dim | 0);\r\n\r\n            removeNode(ear);\r\n\r\n            // skipping the next vertex leads to less sliver triangles\r\n            ear = next.next;\r\n            stop = next.next;\r\n\r\n            continue;\r\n        }\r\n\r\n        ear = next;\r\n\r\n        // if we looped through the whole remaining polygon and can't find any more ears\r\n        if (ear === stop) {\r\n            // try filtering points and slicing again\r\n            if (!pass) {\r\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\r\n\r\n            // if this didn't work, try curing all small self-intersections locally\r\n            } else if (pass === 1) {\r\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\r\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\r\n\r\n            // as a last resort, try splitting the remaining polygon into two\r\n            } else if (pass === 2) {\r\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n// check whether a polygon node forms a valid ear with adjacent nodes\r\nfunction isEar(ear) {\r\n    var a = ear.prev,\r\n        b = ear,\r\n        c = ear.next;\r\n\r\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n    // now make sure we don't have other points inside the potential ear\r\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\r\n\r\n    // triangle bbox; min & max are calculated like this for speed\r\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\r\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\r\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\r\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\r\n\r\n    var p = c.next;\r\n    while (p !== a) {\r\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\r\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\r\n            area(p.prev, p, p.next) >= 0) return false;\r\n        p = p.next;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction isEarHashed(ear, minX, minY, invSize) {\r\n    var a = ear.prev,\r\n        b = ear,\r\n        c = ear.next;\r\n\r\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\r\n\r\n    // triangle bbox; min & max are calculated like this for speed\r\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\r\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\r\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\r\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\r\n\r\n    // z-order range for the current triangle bbox;\r\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\r\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\r\n\r\n    var p = ear.prevZ,\r\n        n = ear.nextZ;\r\n\r\n    // look for points inside the triangle in both directions\r\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\r\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\r\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\r\n        p = p.prevZ;\r\n\r\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\r\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\r\n        n = n.nextZ;\r\n    }\r\n\r\n    // look for remaining points in decreasing z-order\r\n    while (p && p.z >= minZ) {\r\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\r\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\r\n        p = p.prevZ;\r\n    }\r\n\r\n    // look for remaining points in increasing z-order\r\n    while (n && n.z <= maxZ) {\r\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\r\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\r\n        n = n.nextZ;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// go through all polygon nodes and cure small local self-intersections\r\nfunction cureLocalIntersections(start, triangles, dim) {\r\n    var p = start;\r\n    do {\r\n        var a = p.prev,\r\n            b = p.next.next;\r\n\r\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\r\n\r\n            triangles.push(a.i / dim | 0);\r\n            triangles.push(p.i / dim | 0);\r\n            triangles.push(b.i / dim | 0);\r\n\r\n            // remove two nodes involved\r\n            removeNode(p);\r\n            removeNode(p.next);\r\n\r\n            p = start = b;\r\n        }\r\n        p = p.next;\r\n    } while (p !== start);\r\n\r\n    return filterPoints(p);\r\n}\r\n\r\n// try splitting polygon into two and triangulate them independently\r\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\r\n    // look for a valid diagonal that divides the polygon into two\r\n    var a = start;\r\n    do {\r\n        var b = a.next.next;\r\n        while (b !== a.prev) {\r\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\r\n                // split the polygon in two by the diagonal\r\n                var c = splitPolygon(a, b);\r\n\r\n                // filter colinear points around the cuts\r\n                a = filterPoints(a, a.next);\r\n                c = filterPoints(c, c.next);\r\n\r\n                // run earcut on each half\r\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\r\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\r\n                return;\r\n            }\r\n            b = b.next;\r\n        }\r\n        a = a.next;\r\n    } while (a !== start);\r\n}\r\n\r\n// link every hole into the outer loop, producing a single-ring polygon without holes\r\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\r\n    var queue = [],\r\n        i, len, start, end, list;\r\n\r\n    for (i = 0, len = holeIndices.length; i < len; i++) {\r\n        start = holeIndices[i] * dim;\r\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n        list = linkedList(data, start, end, dim, false);\r\n        if (list === list.next) list.steiner = true;\r\n        queue.push(getLeftmost(list));\r\n    }\r\n\r\n    queue.sort(compareX);\r\n\r\n    // process holes from left to right\r\n    for (i = 0; i < queue.length; i++) {\r\n        outerNode = eliminateHole(queue[i], outerNode);\r\n    }\r\n\r\n    return outerNode;\r\n}\r\n\r\nfunction compareX(a, b) {\r\n    return a.x - b.x;\r\n}\r\n\r\n// find a bridge between vertices that connects hole with an outer ring and and link it\r\nfunction eliminateHole(hole, outerNode) {\r\n    var bridge = findHoleBridge(hole, outerNode);\r\n    if (!bridge) {\r\n        return outerNode;\r\n    }\r\n\r\n    var bridgeReverse = splitPolygon(bridge, hole);\r\n\r\n    // filter collinear points around the cuts\r\n    filterPoints(bridgeReverse, bridgeReverse.next);\r\n    return filterPoints(bridge, bridge.next);\r\n}\r\n\r\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\r\nfunction findHoleBridge(hole, outerNode) {\r\n    var p = outerNode,\r\n        hx = hole.x,\r\n        hy = hole.y,\r\n        qx = -Infinity,\r\n        m;\r\n\r\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n    // segment's endpoint with lesser x will be potential connection point\r\n    do {\r\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\r\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\r\n            if (x <= hx && x > qx) {\r\n                qx = x;\r\n                m = p.x < p.next.x ? p : p.next;\r\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\r\n            }\r\n        }\r\n        p = p.next;\r\n    } while (p !== outerNode);\r\n\r\n    if (!m) return null;\r\n\r\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\r\n    // if there are no points found, we have a valid connection;\r\n    // otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n    var stop = m,\r\n        mx = m.x,\r\n        my = m.y,\r\n        tanMin = Infinity,\r\n        tan;\r\n\r\n    p = m;\r\n\r\n    do {\r\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\r\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\r\n\r\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\r\n\r\n            if (locallyInside(p, hole) &&\r\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\r\n                m = p;\r\n                tanMin = tan;\r\n            }\r\n        }\r\n\r\n        p = p.next;\r\n    } while (p !== stop);\r\n\r\n    return m;\r\n}\r\n\r\n// whether sector in vertex m contains sector in vertex p in the same coordinates\r\nfunction sectorContainsSector(m, p) {\r\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\r\n}\r\n\r\n// interlink polygon nodes in z-order\r\nfunction indexCurve(start, minX, minY, invSize) {\r\n    var p = start;\r\n    do {\r\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\r\n        p.prevZ = p.prev;\r\n        p.nextZ = p.next;\r\n        p = p.next;\r\n    } while (p !== start);\r\n\r\n    p.prevZ.nextZ = null;\r\n    p.prevZ = null;\r\n\r\n    sortLinked(p);\r\n}\r\n\r\n// Simon Tatham's linked list merge sort algorithm\r\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\nfunction sortLinked(list) {\r\n    var i, p, q, e, tail, numMerges, pSize, qSize,\r\n        inSize = 1;\r\n\r\n    do {\r\n        p = list;\r\n        list = null;\r\n        tail = null;\r\n        numMerges = 0;\r\n\r\n        while (p) {\r\n            numMerges++;\r\n            q = p;\r\n            pSize = 0;\r\n            for (i = 0; i < inSize; i++) {\r\n                pSize++;\r\n                q = q.nextZ;\r\n                if (!q) break;\r\n            }\r\n            qSize = inSize;\r\n\r\n            while (pSize > 0 || (qSize > 0 && q)) {\r\n\r\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\r\n                    e = p;\r\n                    p = p.nextZ;\r\n                    pSize--;\r\n                } else {\r\n                    e = q;\r\n                    q = q.nextZ;\r\n                    qSize--;\r\n                }\r\n\r\n                if (tail) tail.nextZ = e;\r\n                else list = e;\r\n\r\n                e.prevZ = tail;\r\n                tail = e;\r\n            }\r\n\r\n            p = q;\r\n        }\r\n\r\n        tail.nextZ = null;\r\n        inSize *= 2;\r\n\r\n    } while (numMerges > 1);\r\n\r\n    return list;\r\n}\r\n\r\n// z-order of a point given coords and inverse of the longer side of data bbox\r\nfunction zOrder(x, y, minX, minY, invSize) {\r\n    // coords are transformed into non-negative 15-bit integer range\r\n    x = (x - minX) * invSize | 0;\r\n    y = (y - minY) * invSize | 0;\r\n\r\n    x = (x | (x << 8)) & 0x00FF00FF;\r\n    x = (x | (x << 4)) & 0x0F0F0F0F;\r\n    x = (x | (x << 2)) & 0x33333333;\r\n    x = (x | (x << 1)) & 0x55555555;\r\n\r\n    y = (y | (y << 8)) & 0x00FF00FF;\r\n    y = (y | (y << 4)) & 0x0F0F0F0F;\r\n    y = (y | (y << 2)) & 0x33333333;\r\n    y = (y | (y << 1)) & 0x55555555;\r\n\r\n    return x | (y << 1);\r\n}\r\n\r\n// find the leftmost node of a polygon ring\r\nfunction getLeftmost(start) {\r\n    var p = start,\r\n        leftmost = start;\r\n    do {\r\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\r\n        p = p.next;\r\n    } while (p !== start);\r\n\r\n    return leftmost;\r\n}\r\n\r\n// check if a point lies within a convex triangle\r\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\r\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\r\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\r\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\r\n}\r\n\r\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\nfunction isValidDiagonal(a, b) {\r\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\r\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\r\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\r\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\r\n}\r\n\r\n// signed area of a triangle\r\nfunction area(p, q, r) {\r\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\r\n}\r\n\r\n// check if two points are equal\r\nfunction equals(p1, p2) {\r\n    return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n// check if two segments intersect\r\nfunction intersects(p1, q1, p2, q2) {\r\n    var o1 = sign(area(p1, q1, p2));\r\n    var o2 = sign(area(p1, q1, q2));\r\n    var o3 = sign(area(p2, q2, p1));\r\n    var o4 = sign(area(p2, q2, q1));\r\n\r\n    if (o1 !== o2 && o3 !== o4) return true; // general case\r\n\r\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\r\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\r\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\r\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\r\n\r\n    return false;\r\n}\r\n\r\n// for collinear points p, q, r, check if point q lies on segment pr\r\nfunction onSegment(p, q, r) {\r\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\r\n}\r\n\r\nfunction sign(num) {\r\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\r\n}\r\n\r\n// check if a polygon diagonal intersects any polygon segments\r\nfunction intersectsPolygon(a, b) {\r\n    var p = a;\r\n    do {\r\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n                intersects(p, p.next, a, b)) return true;\r\n        p = p.next;\r\n    } while (p !== a);\r\n\r\n    return false;\r\n}\r\n\r\n// check if a polygon diagonal is locally inside the polygon\r\nfunction locallyInside(a, b) {\r\n    return area(a.prev, a, a.next) < 0 ?\r\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\r\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\r\n}\r\n\r\n// check if the middle point of a polygon diagonal is inside the polygon\r\nfunction middleInside(a, b) {\r\n    var p = a,\r\n        inside = false,\r\n        px = (a.x + b.x) / 2,\r\n        py = (a.y + b.y) / 2;\r\n    do {\r\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\r\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\r\n            inside = !inside;\r\n        p = p.next;\r\n    } while (p !== a);\r\n\r\n    return inside;\r\n}\r\n\r\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\nfunction splitPolygon(a, b) {\r\n    var a2 = new Node(a.i, a.x, a.y),\r\n        b2 = new Node(b.i, b.x, b.y),\r\n        an = a.next,\r\n        bp = b.prev;\r\n\r\n    a.next = b;\r\n    b.prev = a;\r\n\r\n    a2.next = an;\r\n    an.prev = a2;\r\n\r\n    b2.next = a2;\r\n    a2.prev = b2;\r\n\r\n    bp.next = b2;\r\n    b2.prev = bp;\r\n\r\n    return b2;\r\n}\r\n\r\n// create a node and optionally link it with previous one (in a circular doubly linked list)\r\nfunction insertNode(i, x, y, last) {\r\n    var p = new Node(i, x, y);\r\n\r\n    if (!last) {\r\n        p.prev = p;\r\n        p.next = p;\r\n\r\n    } else {\r\n        p.next = last.next;\r\n        p.prev = last;\r\n        last.next.prev = p;\r\n        last.next = p;\r\n    }\r\n    return p;\r\n}\r\n\r\nfunction removeNode(p) {\r\n    p.next.prev = p.prev;\r\n    p.prev.next = p.next;\r\n\r\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\r\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\r\n}\r\n\r\nfunction Node(i, x, y) {\r\n    // vertex index in coordinates array\r\n    this.i = i;\r\n\r\n    // vertex coordinates\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    // previous and next vertex nodes in a polygon ring\r\n    this.prev = null;\r\n    this.next = null;\r\n\r\n    // z-order curve value\r\n    this.z = 0;\r\n\r\n    // previous and next nodes in z-order\r\n    this.prevZ = null;\r\n    this.nextZ = null;\r\n\r\n    // indicates whether this is a steiner point\r\n    this.steiner = false;\r\n}\r\n\r\n// return a percentage difference between the polygon area and its triangulation area;\r\n// used to verify correctness of triangulation\r\nearcut.deviation = function (data, holeIndices, dim, triangles) {\r\n    var hasHoles = holeIndices && holeIndices.length;\r\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\r\n\r\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\r\n    if (hasHoles) {\r\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\r\n            var start = holeIndices[i] * dim;\r\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\r\n        }\r\n    }\r\n\r\n    var trianglesArea = 0;\r\n    for (i = 0; i < triangles.length; i += 3) {\r\n        var a = triangles[i] * dim;\r\n        var b = triangles[i + 1] * dim;\r\n        var c = triangles[i + 2] * dim;\r\n        trianglesArea += Math.abs(\r\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\r\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\r\n    }\r\n\r\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\r\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\r\n};\r\n\r\nfunction signedArea(data, start, end, dim) {\r\n    var sum = 0;\r\n    for (var i = start, j = end - dim; i < end; i += dim) {\r\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\r\n        j = i;\r\n    }\r\n    return sum;\r\n}\r\n\r\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\r\nearcut.flatten = function (data) {\r\n    var dim = data[0][0].length,\r\n        result = {vertices: [], holes: [], dimensions: dim},\r\n        holeIndex = 0;\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        for (var j = 0; j < data[i].length; j++) {\r\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\r\n        }\r\n        if (i > 0) {\r\n            holeIndex += data[i - 1].length;\r\n            result.holes.push(holeIndex);\r\n        }\r\n    }\r\n    return result;\r\n};\r\n","const WebglGradientTextureCache = {};\r\n// 渐变\r\nclass WebglGradient {\r\n    // type:[linear= 线性渐变,radial=放射性渐变] \r\n    constructor(type='linear', params={}) {\r\n        this.type = type || 'linear';\r\n\r\n        this.x1 = params.x1 || 0;\r\n        this.y1 = params.y1 || 0;\r\n        this.r1 = params.r1 || 0;\r\n        this.x2 = params.x2 || 0;\r\n        this.y2 = params.y2 || 0;\r\n        this.r2 = params.r2 || 0;\r\n\r\n        this.bounds = params.bounds || {\r\n            left: 0,\r\n            top: 0,\r\n            width: 0,\r\n            height: 0\r\n        }\r\n\r\n        this.control = params.control;\r\n\r\n        this.stops = [];\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        const dx = this.x2 - this.x1;\r\n        const dy = this.y2 - this.y1;\r\n\r\n        if(this.type === 'radial') {\r\n            this.length = this.r2 - this.r1;\r\n        }\r\n        else if(dx === 0 && dy === 0) {\r\n            this.length = 0;\r\n        }\r\n        else {\r\n            // 渐变中心的距离\r\n            this.length = Math.sqrt(Math.pow(dx, 2), Math.pow(dy, 2));\r\n            this.sin = dy / this.length;\r\n            this.cos = dx / this.length;\r\n        }\r\n    }\r\n\r\n    // 渐变颜色\r\n    addColorStop(offset, color) {\r\n        this.stops.push({\r\n            offset,\r\n            color\r\n        });\r\n    }\r\n\r\n    // 转为渐变为纹理\r\n    toImageData(control, bounds, points=null) {\r\n        //const key = this.key || this.toString();\r\n        //if(WebglGradientTextureCache[key]) return WebglGradientTextureCache[key];\r\n        if(!control.textureContext) {\r\n            return null;\r\n        }\r\n        let gradient = null;\r\n        if(this.type === 'linear') {\r\n            gradient = control.textureContext.createLinearGradient(this.x1, this.y1, this.x2, this.y2);\r\n        }\r\n        else {\r\n            gradient = control.textureContext.createRadialGradient(this.x1, this.y1, this.r1, this.x2, this.y2, this.r2);\r\n        }\r\n        this.stops.forEach(function(s, i) {\t\r\n            const c = control.graph.utils.toColor(s.color);\r\n            gradient && gradient.addColorStop(s.offset, c);\t\t\r\n        });\r\n        \r\n        const data = control.toFillTexture(gradient, bounds, points);\r\n\r\n        //WebglGradientTextureCache[key] = data;\r\n\r\n        return data;\r\n    }\r\n\r\n    // 根据绘制图形的坐标计算出对应点的颜色\r\n    /*\r\n    toPointColors(points) {\r\n        const stops = this.getStops();\r\n        const colors = [];\r\n        for(let i=0; i<points.length; i+=2) {\r\n            const p = {\r\n                x: points[i],\r\n                y: points[i+1]\r\n            }\r\n            if(this.type === 'radial') {\r\n                const dx = p.x - this.x1;\r\n                const dy = p.y - this.y1;\r\n                const len = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\r\n                const rang = this.getStopRange(len, stops);\r\n                if(!rang.start && rang.end) {\r\n                    colors.push(rang.end.color);\r\n                }\r\n                else if(!rang.end && rang.start) {\r\n                    colors.push(rang.start.color);\r\n                }\r\n                else {\r\n                    const rangLength = rang.end.length - rang.start.length;\r\n                    const offlen = len - rang.start.length;\r\n                    const per = offlen / rangLength;\r\n                    const color = {\r\n                        r: rang.start.color.r + (rang.end.color.r - rang.start.color.r) * per,\r\n                        g: rang.start.color.g + (rang.end.color.g - rang.start.color.g) * per,\r\n                        b: rang.start.color.b + (rang.end.color.b - rang.start.color.b) * per,\r\n                        a: rang.start.color.a + (rang.end.color.a - rang.start.color.a) * per,\r\n                    };\r\n                    colors.push(color);\r\n                }\r\n            }\r\n        }\r\n        return colors;\r\n    }\r\n*/\r\n    // 根据起点距离获取边界stop\r\n    /*\r\n    getStopRange(len, stops) {\r\n        const res = {};\r\n        for(const s of stops) {\r\n            if(s.length <= len) {\r\n                res.start = s;\r\n            }\r\n            else {\r\n                res.end = s;\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    // 根据stop计算offset长度\r\n    getStops() {\r\n        const stops = this.stops.sort((p1, p2) => p1.offset - p2.offset); // 渐变色排序从小于大\r\n        for(const s of stops) {\r\n            \r\n            const color = typeof s.color === 'string'? this.control.graph.utils.hexToRGBA(s.color) : s.color;\r\n            console.log(s, color);\r\n            s.color = this.control.graph.utils.rgbToDecimal(color);\r\n            s.length = s.offset * this.length;\r\n        }\r\n        return stops;\r\n    }\r\n*/\r\n    /**\r\n\t * 转换为渐变的字符串表达\r\n\t *\r\n\t * @method toString\r\n\t * @for jmGradient\r\n\t * @return {string} linear-gradient(x1 y1 x2 y2, color1 step, color2 step, ...);\t//radial-gradient(x1 y1 r1 x2 y2 r2, color1 step,color2 step, ...);\r\n\t */\r\n\ttoString() {\r\n\t\tlet str = this.type + '-gradient(';\r\n\t\tif(this.type == 'linear') {\r\n\t\t\tstr += this.x1 + ' ' + this.y1 + ' ' + this.x2 + ' ' + this.y2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstr += this.x1 + ' ' + this.y1 + ' ' + this.r1 + ' ' + this.x2 + ' ' + this.y2 + ' ' + this.r2;\r\n\t\t}\r\n\t\t//颜色渐变\r\n\t\tthis.stops.forEach(function(s) {\t\r\n\t\t\tstr += ',' + s.color + ' ' + s.offset;\r\n\t\t});\r\n\t\treturn str + ')';\r\n\t}\r\n}\r\n\r\nexport default WebglGradient;","// 生成着色器\r\n// type: gl.VERTEX_SHADER 顶点着色器  , gl.FRAGMENT_SHADER  片段着色器\r\n// src: 着色器代码\r\nfunction createShader(gl, type, src) {\r\n    const shader = gl.createShader(type) // 创建一个顶点着色器\r\n    gl.shaderSource(shader, src); // 编写顶点着色器代码\r\n    gl.compileShader(shader); // 编译着色器\r\n\r\n    return shader;\r\n}\r\n\r\nexport  {\r\n    createShader\r\n}","\r\nconst GLSL_TO_SIZE = {\r\n    'float':    1,\r\n    'vec2':     2,\r\n    'vec3':     3,\r\n    'vec4':     4,\r\n\r\n    'int':      1,\r\n    'ivec2':    2,\r\n    'ivec3':    3,\r\n    'ivec4':    4,\r\n\r\n    'bool':     1,\r\n    'bvec2':    2,\r\n    'bvec3':    3,\r\n    'bvec4':    4,\r\n\r\n    'mat2':     4,\r\n    'mat3':     9,\r\n    'mat4':     16,\r\n\r\n    'sampler2D':  1\r\n};\r\n\r\n/**\r\n * @class\r\n * @memberof PIXI.glCore.shader\r\n * @param type {String}\r\n * @return {Number}\r\n */\r\nconst mapSize = function(type) { \r\n    return GLSL_TO_SIZE[type];\r\n};\r\n\r\n\r\n\r\n\r\nexport {\r\n    mapSize\r\n}\r\n","\r\nvar GL_TABLE = null;\r\n\r\nconst GL_TO_GLSL_TYPES = {\r\n  'FLOAT':       'float',\r\n  'FLOAT_VEC2':  'vec2',\r\n  'FLOAT_VEC3':  'vec3',\r\n  'FLOAT_VEC4':  'vec4',\r\n\r\n  'INT':         'int',\r\n  'INT_VEC2':    'ivec2',\r\n  'INT_VEC3':    'ivec3',\r\n  'INT_VEC4':    'ivec4',\r\n  \r\n  'BOOL':        'bool',\r\n  'BOOL_VEC2':   'bvec2',\r\n  'BOOL_VEC3':   'bvec3',\r\n  'BOOL_VEC4':   'bvec4',\r\n  \r\n  'FLOAT_MAT2':  'mat2',\r\n  'FLOAT_MAT3':  'mat3',\r\n  'FLOAT_MAT4':  'mat4',\r\n  \r\n  'SAMPLER_2D':  'sampler2D'  \r\n};\r\n\r\nconst mapType = function(gl, type) {\r\n    if(!GL_TABLE) {\r\n        const typeNames = Object.keys(GL_TO_GLSL_TYPES);\r\n        GL_TABLE = {};\r\n        for(let i = 0; i < typeNames.length; ++i) {\r\n            const tn = typeNames[i];\r\n            GL_TABLE[ gl[tn] ] = GL_TO_GLSL_TYPES[tn];\r\n        }\r\n    }\r\n\r\n  return GL_TABLE[type];\r\n};\r\n\r\n\r\nexport {\r\n  mapType\r\n}\r\n","import {\r\n    createShader\r\n} from './shader.js';\r\nimport {\r\n    mapSize\r\n} from './mapSize.js';\r\nimport {\r\n    mapType\r\n} from './mapType.js';\r\n\r\n// 创建程序\r\nfunction createProgram(gl, vertexSrc, fragmentSrc) {\r\n    // 创建顶点着色器\r\n    const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSrc);\r\n    // 创建片段着色器\r\n    const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSrc);\r\n\r\n    const program = gl.createProgram() // 创建一个程序\r\n    gl.attachShader(program, vertexShader) // 添加顶点着色器\r\n    gl.attachShader(program, fragmentShader) // 添加片元着色器\r\n    gl.linkProgram(program) // 连接 program 中的着色器\r\n\r\n    // 检查程序链接状态\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        console.error('PError: Could not initialize shader.');\r\n        console.error('gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS));\r\n        console.error('gl.getError()', gl.getError());\r\n\r\n        // if there is a program info log, log it\r\n        if (gl.getProgramInfoLog(program) !== '') {\r\n            console.warn('Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(program));\r\n        }\r\n\r\n        gl.deleteProgram(program);\r\n    }\r\n\r\n    useProgram(gl, program);\r\n\r\n    // clean up some shaders\r\n    gl.deleteShader(vertexShader);\r\n    gl.deleteShader(fragmentShader);\r\n\r\n    const attrs = extractAttributes(gl, program);\r\n    const uniforms = extractUniforms(gl, program);\r\n    \r\n    return {\r\n        program,\r\n        attrs,\r\n        uniforms\r\n    };\r\n}\r\n\r\n// 采用program\r\nfunction useProgram(gl, program) {\r\n    return gl.useProgram(program); // 告诉 webgl 用这个 program 进行渲染\r\n}\r\n\r\nfunction extractAttributes(gl, program) {\r\n    const attributes = {};\r\n\r\n    const count = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n\r\n    for (let i = 0; i < count; i++){\r\n        const attribData = gl.getActiveAttrib(program, i);\r\n        const type = mapType(gl, attribData.type);\r\n        attributes[attribData.name] = {\r\n            attribData,\r\n            size: mapSize(type),\r\n            type,\r\n            location: gl.getAttribLocation(program, attribData.name),            \r\n        };\r\n    }\r\n\r\n    return attributes;\r\n}\r\n\r\nfunction extractUniforms(gl, program) {\r\n\tconst uniforms = {};\r\n\r\n    const count = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n\r\n    for (let i = 0; i < count; i++) {\r\n    \tconst uniformData = gl.getActiveUniform(program, i);\r\n    \tconst name = uniformData.name.replace(/\\[.*?\\]/, \"\");\r\n        const type = mapType(gl, uniformData.type );\r\n\r\n    \tuniforms[name] = {\r\n            uniformData,\r\n    \t\ttype: type,\r\n    \t\tsize: uniformData.size,\r\n    \t\tlocation: gl.getUniformLocation(program, name),\r\n    \t};\r\n    }\r\n\r\n\treturn uniforms;\r\n};\r\n\r\n\r\n// 把缓冲区的值写入变量\r\n// size: 组成数量，必须是1，2，3或4.  每个单元由多少个数组成\r\n// strip: 步长 数组中一行长度，0 表示数据是紧密的没有空隙，让OpenGL决定具体步长\r\n// offset: 字节偏移量，必须是类型的字节长度的倍数。\r\n// dataType: 每个元素的数据类型\r\nfunction writeVertexAttrib(gl, buffer, attr, size=2, strip=0, offset=0, dataType=gl.FLOAT) {\r\n    gl.bindBuffer(buffer.type, buffer.buffer);\r\n    gl.vertexAttribPointer( // 告诉 OpenGL 如何从 Buffer 中获取数据\r\n            attr.location, // 顶点属性的索引\r\n            size, // 组成数量，必须是1，2，3或4。我们只提供了 x 和 y\r\n            dataType,\r\n            false, // 是否归一化到特定的范围，对 FLOAT 类型数据设置无效\r\n            strip * buffer.unitSize,\r\n            offset\r\n        );\r\n    gl.enableVertexAttribArray(attr.location);\r\n    return buffer;\r\n}\r\n\r\nfunction disableVertexAttribArray(gl, attr) {\r\n    return gl.disableVertexAttribArray(attr.location);\r\n}\r\n\r\nfunction getAttribLocation(gl, program, name) {\r\n    return gl.getAttribLocation(program, name);\r\n}\r\n\r\nfunction getUniformLocation(gl, program, name) {\r\n    return gl.getUniformLocation(program, name);\r\n}\r\n\r\nexport {\r\n    createProgram,\r\n    useProgram,\r\n    getAttribLocation,\r\n    getUniformLocation,\r\n    extractAttributes,\r\n    extractUniforms,\r\n    writeVertexAttrib,\r\n    disableVertexAttribArray\r\n}","\r\n// 创建缓冲区\r\nfunction createBuffer(gl, data, type=gl.ARRAY_BUFFER, drawType=gl.STATIC_DRAW) {\r\n    //先创建一个缓存对象\r\n    const buffer = gl.createBuffer();\r\n    if(!buffer) {\r\n        throw Error('创建缓冲区对象失败');\r\n    }\r\n    //说明缓存对象保存的类型\r\n    gl.bindBuffer(type, buffer);\r\n    //写入坐标数据\r\n    // 因为会将数据发送到 GPU，为了省去数据解析，这里使用 Float32Array 直接传送数据\r\n    // data.buffer这里要使用data.buffer，否则在edge下可能导至数据发生较大的改变\r\n    gl.bufferData(type, data.buffer || data, drawType); // 表示缓冲区的内容不会经常更改\r\n    return {\r\n        type,\r\n        drawType,\r\n        buffer,\r\n        // 获取到数组中单个元素的字节数\r\n        unitSize: data.BYTES_PER_ELEMENT\r\n    };\r\n}\r\n\r\n// 创建float32的buffer\r\nfunction createFloat32Buffer(gl, data, type=gl.ARRAY_BUFFER, drawType=gl.STATIC_DRAW) {\r\n    const vertices = new Float32Array(data);\r\n    const buffer = createBuffer(gl, vertices, type, drawType);\r\n    return buffer;\r\n}\r\n\r\n// 创建uint16的bugger\r\nfunction createUint16Buffer(gl, data, type=gl.ARRAY_BUFFER, drawType=gl.STATIC_DRAW) {\r\n    const vertices = new Uint16Array(data);\r\n    const buffer = createBuffer(gl, vertices, type, drawType);\r\n    return buffer;\r\n}\r\n\r\n// 释放\r\nfunction deleteBuffer(gl, buffer) {\r\n    gl.deleteBuffer(buffer.buffer || buffer);\r\n}\r\n\r\n\r\nexport {\r\n    createBuffer,\r\n    createUint16Buffer,\r\n    createFloat32Buffer,\r\n    deleteBuffer,\r\n}","\r\n// 生成纹理\r\nfunction create2DTexture(gl) {\r\n    const texture = gl.createTexture();\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1); // 图像反转Y轴\r\n    gl.activeTexture(gl.TEXTURE0); // 激活纹理单元\r\n    gl.bindTexture(gl.TEXTURE_2D, texture); // 绑定纹理对象\r\n    \r\n    //gl.generateMipmap(gl.TEXTURE_2D);\r\n    gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST); // 放大处理方式  // LINEAR  / NEAREST\r\n    gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST); // 缩小处理方式\r\n    gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE); // 水平平铺方式\r\n    gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE); // 竖直平铺方式\r\n\r\n    \r\n    return texture;\r\n}\r\n\r\n// 创建图片纹理\r\nfunction createImgTexture(gl, img) {\r\n    const texture = create2DTexture(gl);\r\n\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img) // 配置纹理图像\r\n    return {\r\n        texture\r\n    };\r\n}\r\n\r\n// 用像素值来绘制纹理\r\nfunction createDataTexture(gl, pixels) {\r\n    const data = new Uint8Array(pixels.data || pixels);\r\n\r\n    const texture = create2DTexture(gl);\r\n\r\n    gl.texImage2D(\r\n        gl.TEXTURE_2D, // 纹理目标\r\n        0, // 细节级别,指定详细级别。0 级是基本图像等级，n 级是第 n 个金字塔简化级。\r\n        gl.RGBA, // 纹理内部格式\r\n        pixels.width || 1, // 指定纹理的宽度\r\n        pixels.height || 1, // 指定纹理的高度\r\n        0, // 指定纹理的边框宽度。必须为 0。\r\n        gl.RGBA, // 源图像数据格式\r\n        gl.UNSIGNED_BYTE, // 纹理数据类型\r\n        data // 数据\r\n      );\r\n    return {\r\n        texture\r\n    };\r\n}\r\n\r\n// 删除纹理\r\nfunction deleteTexture(gl, texture) {\r\n    return gl.deleteTexture(texture);\r\n}\r\n\r\nexport {\r\n    create2DTexture,\r\n    createImgTexture,\r\n    createDataTexture,\r\n    deleteTexture\r\n}","\r\nimport earcut from '../earcut.js';\r\nimport webglGradient from './gradient.js';\r\nimport {\r\n    createProgram,\r\n    useProgram,\r\n    writeVertexAttrib,\r\n    disableVertexAttribArray\r\n} from './core/program.js';\r\n\r\nimport {\r\n    createFloat32Buffer,\r\n    createUint16Buffer,\r\n    deleteBuffer,\r\n} from './core/buffer.js';\r\n\r\nimport {\r\n    create2DTexture,\r\n    createImgTexture,\r\n    createDataTexture,\r\n    deleteTexture\r\n} from './core/texture.js';\r\n\r\n// 把canvas坐标转为webgl坐标系\r\nconst convertPointSource = `\r\n    vec4 translatePosition(vec4 point, float x, float y) {\r\n        point.x = (point.x-x)/x;\r\n        point.y = (y-point.y)/y;\r\n        return point;\r\n    }`;\r\n// 把纹理的canvas坐标转为纹理的坐标系\r\nconst convertTexturePosition = `\r\n    vec2 translateTexturePosition(in vec2 point, vec4 bounds) {\r\n        point.x = (point.x-bounds.x)/bounds.z; // 离左上角位置的X长比上纹理宽 0-1\r\n        point.y = 1.0-(point.y-bounds.y)/bounds.w; // 离左上角位置的Y长比上高，因为纹理坐标是左下角起，所以要用1-\r\n        return point;\r\n    }`;\r\n\r\n// path顶点着色器源码\r\nconst pathVertexSource = `\r\n    attribute vec4 a_position;\r\n    attribute vec4 a_color;\r\n    attribute vec2 a_text_coord;\r\n    uniform vec2 a_center_point; // 当前canvas的中心位置\r\n    uniform float a_point_size; // 点的大小\r\n    uniform int a_type;\r\n    varying vec4 v_color;\r\n    varying vec2 v_text_coord;\r\n    varying float v_type;\r\n\r\n    ${convertPointSource}\r\n\r\n    void main() {\r\n        gl_PointSize = a_point_size == 0.0? 1.0 : a_point_size;\r\n        v_type = float(a_type);\r\n        vec4 pos = translatePosition(a_position, a_center_point.x, a_center_point.y);\r\n        gl_Position = pos;\r\n        v_color = a_color;\r\n        if(a_type == 2) {\r\n            v_text_coord = a_text_coord;\r\n        }\r\n    }\r\n`;\r\n// path 片段着色器源码\r\nconst pathFragmentSource = `\r\n    precision mediump float;\r\n    uniform sampler2D u_sample;\r\n    uniform vec4 v_texture_bounds; // 纹理的左上坐标和大小 x,y,z,w\r\n    uniform vec4 v_single_color;\r\n    varying float v_type;\r\n    varying vec4 v_color;\r\n    varying vec2 v_text_coord;\r\n\r\n    ${convertTexturePosition}\r\n\r\n    void main() {\r\n        // 如果是fill，则直接填充颜色\r\n        if(v_type == 1.0) {\r\n            gl_FragColor = v_single_color;\r\n        }\r\n        // 渐变色\r\n        else if(v_type == 3.0) {\r\n            gl_FragColor = v_color;\r\n        }\r\n        else if(v_type == 2.0) {\r\n            vec2 pos = translateTexturePosition(v_text_coord, v_texture_bounds);\r\n            gl_FragColor = texture2D(u_sample, pos);\r\n        }\r\n        else {\r\n            float r = distance(gl_PointCoord, vec2(0.5, 0.5));\r\n            //根据距离设置片元\r\n            if(r <= 0.5){\r\n                // 方形区域片元距离几何中心半径小于0.5，像素颜色设置红色\r\n                gl_FragColor = v_single_color;\r\n            }else {\r\n                // 方形区域距离几何中心半径不小于0.5的片元剪裁舍弃掉：\r\n                discard;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass WeblBase {\r\n    constructor(graph, option) {\r\n        this.graph = graph;\r\n        this.option = option || {};\r\n        this.style = {\r\n            globalAlpha: 1\r\n        };\r\n    }\r\n\r\n    get context() {\r\n        if(this.graph) return this.graph.context;\r\n    }\r\n\r\n    // 纹理绘制canvas\r\n    get textureCanvas() {\r\n        let canvas = this.graph.textureCanvas;\r\n        if(!canvas) {\r\n            if(typeof document === 'undefined') return null;\r\n            canvas = this.graph.textureCanvas = document.createElement('canvas');\r\n        }\r\n        return canvas;\r\n    }\r\n    // 纹理绘制canvas ctx\r\n    get textureContext() {\r\n        const ctx = this.textureCanvas.ctx || (this.textureCanvas.ctx = this.textureCanvas.getContext('2d', {\r\n            willReadFrequently: true\r\n        }));\r\n        return ctx;\r\n    }\r\n\r\n    // i当前程序\r\n    get program() {\r\n        // 默认所有path用同一个编译好的program\r\n        return this.graph.context.pathProgram || (this.graph.context.pathProgram=this.createProgram(pathVertexSource, pathFragmentSource));\r\n    }\r\n\r\n    // 设置样式\r\n    setStyle(style = this.style, value = '') {\r\n\r\n        if(typeof style === 'string') {\r\n            const obj = {};\r\n            obj[style] = value;\r\n            style = obj;\r\n        }\r\n       /*\r\n        // 设置线条颜色或填充色\r\n        if(style.strokeStyle) {\r\n            let color = style.strokeStyle;\r\n            if(typeof color === 'string') color = this.graph.utils.hexToRGBA(color);\r\n            this.style.strokeStyle = this.graph.utils.rgbToDecimal(color);\r\n            delete style.strokeStyle;\r\n        }\r\n        else if(style.fillStyle) {\r\n            let color = style.fillStyle;\r\n            if(this.isGradient(color)) {\r\n                this.style.fillStyle = color;\r\n            }\r\n            else {\r\n                if(typeof color === 'string') color = this.graph.utils.hexToRGBA(color);\r\n                this.style.fillStyle =  this.graph.utils.rgbToDecimal(color);\r\n            }\r\n            delete style.fillStyle;\r\n        } */       \r\n\r\n        this.style = {\r\n            ...this.style,\r\n            ...style\r\n        }\r\n    }\r\n\r\n    // 把传统颜色转为webgl识别的\r\n    convertColor(color) {\r\n        if(this.isGradient(color)) return color;\r\n        if(typeof color === 'string') color = this.graph.utils.hexToRGBA(color);\r\n        return this.graph.utils.rgbToDecimal(color);\r\n    }\r\n\r\n    setTextureStyle(style, value='') {\r\n        \r\n        if(typeof style === 'string') {\r\n            if(['fillStyle', 'strokeStyle', 'shadowColor'].indexOf(style) > -1) {\r\n                value = this.graph.utils.toColor(value);\r\n            }\r\n            this.textureContext[style] = value;\r\n        }\r\n        else {\r\n            for(const name in style) {\r\n                if(name === 'constructor') continue;\r\n                this.setTextureStyle(name, style[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 创建程序\r\n    createProgram(vertexSrc, fragmentSrc) {        \r\n        this.context.lineWidth(1);\r\n        return createProgram(this.context, vertexSrc, fragmentSrc);\r\n    }\r\n\r\n    // 指定使用某个程序\r\n    useProgram(program=this.program) {\r\n        program = program.program || program;\r\n        if(this.context.__curent_program === program) return program;\r\n        useProgram(this.context, program.program || program);\r\n        this.context.__curent_program = program;\r\n        return program;\r\n    }\r\n\r\n    getAttribLocation(name) {\r\n        return this.context.getAttribLocation(this.program.program, name);\r\n    }\r\n    \r\n    getUniformLocation(name) {\r\n        return this.context.getUniformLocation(this.program.program, name);\r\n    }\r\n\r\n    // 把缓冲区的值写入变量\r\n    // buffer: 缓冲区\r\n    // size: 组成数量，必须是1，2，3或4.  每个单元由多少个数组成\r\n    // strip: 步长 数组中一行长度，0 表示数据是紧密的没有空隙，让OpenGL决定具体步长\r\n    // offset: 字节偏移量，必须是类型的字节长度的倍数。\r\n    // dataType: 每个元素的数据类型\r\n    writeVertexAttrib(buffer, attr, size=2, strip=0, offset=0, dataType=this.context.FLOAT) {\r\n        buffer.attr = attr;\r\n        return writeVertexAttrib(this.context, buffer, attr, size, strip, offset, dataType);\r\n    }\r\n\r\n    // 禁用attri\r\n    disableVertexAttribArray(attr) {\r\n        try{\r\n            if(!attr) return attr;\r\n            return disableVertexAttribArray(this.context, attr);\r\n        }\r\n        catch(e) {\r\n            console.error(e);\r\n        }\r\n        return attr;\r\n    }\r\n\r\n    // 创建float32的buffer\r\n    createFloat32Buffer(data, type=this.context.ARRAY_BUFFER, drawType=this.context.STATIC_DRAW) {\r\n        const buffer = createFloat32Buffer(this.context, data, type, drawType);\r\n        return {\r\n            data,\r\n            ...buffer\r\n        };\r\n    }\r\n\r\n    createUint16Buffer(data, type=this.context.ARRAY_BUFFER, drawType=this.context.STATIC_DRAW) {\r\n        const buffer = createUint16Buffer(this.context, data, type, drawType);\r\n        return {\r\n            data,\r\n            ...buffer\r\n        };\r\n    }\r\n\r\n    // 释放\r\n    deleteBuffer(buffer) {\r\n        try {\r\n            if(!buffer) return;\r\n            const bufferHandler = buffer.buffer || buffer;\r\n            if(bufferHandler) return deleteBuffer(this.context, bufferHandler);\r\n        }\r\n        catch(e) {\r\n            console.log(buffer);\r\n            console.error(e);\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n    // 生成纹理\r\n    create2DTexture() { \r\n        return create2DTexture(this.context);\r\n    }\r\n\r\n    // 创建图片纹理\r\n    createImgTexture(img) {\r\n        return createImgTexture(this.context, img);\r\n    }\r\n\r\n    // 根根像素值生成纹理\r\n    createDataTexture(data) {\r\n        return createDataTexture(this.context, data);\r\n    }\r\n\r\n    // 删除纹理\r\n    deleteTexture(texture) {\r\n        try {\r\n            return deleteTexture(this.context, texture.texture || texture);\r\n        }\r\n        catch(e) {\r\n            console.error(e);\r\n        }\r\n        return texture;\r\n    }\r\n\r\n    // 多边切割, 得到三角形顶点索引数组\r\n    // polygonIndices 顶点索引，\r\n    earCutPoints(points) {\r\n        const arr = this.pointsToArray(points);\r\n        const ps = earcut(arr);// 切割得到3角色顶点索引，\r\n        return ps;\r\n    }\r\n\r\n    // 多边切割, 得到三角形顶点\r\n    // polygonIndices 顶点索引，\r\n    earCutPointsToTriangles(points) {\r\n        const ps = this.earCutPoints(points);// 切割得到3角色顶点索引，\r\n        const triangles = [];\r\n        // 用顶点索引再组合成坐标数组\r\n        for(let i=0;i<ps.length; i+=3) {\r\n            const p1 = points[ps[i]];\r\n            const p2 = points[ps[i+1]];\r\n            const p3 = points[ps[i+2]];\r\n\r\n            triangles.push([p1, p2, p3]);// 每三个顶点构成一个三角\r\n        }\r\n        return triangles;\r\n    }\r\n\r\n    // 点坐标数组转为一维数组\r\n    pointsToArray(points) {\r\n        return [].concat(...points.map(p=>[p.x,p.y]));// 把x,y转为数组元素\r\n    }\r\n    // 每2位表示坐标x,y转为坐标点对象\r\n    arrayToPoints(arr) {\r\n        const points = [];\r\n        for(let i=0;i<arr.length; i+=2) {\r\n            points.push({\r\n                x: arr[i],\r\n                y: arr[i+1]\r\n            });\r\n        }\r\n        return points;\r\n    }\r\n\r\n    // 创建线性渐变\r\n    createLinearGradient(x1, y1, x2, y2, bounds) {\r\n        return new webglGradient('linear', {\r\n            x1, y1, x2, y2, bounds,\r\n            control: this\r\n        });\r\n    }\r\n    // 创建放射性渐变\r\n    createRadialGradient(x1, y1, r1, x2, y2, r2, bounds) {\r\n        return new webglGradient('radial', {\r\n            x1, y1, r1,\r\n            x2, y2, r2,\r\n            bounds,\r\n            control: this\r\n        });\r\n    }\r\n    // 判断是否是一个渐变对象\r\n    isGradient(obj) {\r\n        return obj && obj instanceof webglGradient;\r\n    }\r\n\r\n    /**\r\n\t * 测试获取文本所占大小\r\n\t *\r\n\t * @method testSize\r\n\t * @return {object} 含文本大小的对象\r\n\t */\r\n\ttestSize(text, style=this.style) {\r\n\t\t\r\n\t\tthis.textureContext.save && this.textureContext.save();\r\n\t\t// 修改字体，用来计算\r\n\t\tif(style.font || style.fontSize) this.textureContext.font = style.font || (style.fontSize + 'px ' + style.fontFamily);\r\n\t\t\r\n\t\t//计算宽度\r\n\t\tconst size = this.textureContext.measureText?\r\n                        this.textureContext.measureText(text):\r\n\t\t\t\t\t\t\t{width:15};\r\n        this.textureContext.restore &&this.textureContext.restore();\r\n\t\tsize.height = this.style.fontSize? this.style.fontSize: 15;\r\n\t\treturn size;\r\n\t}\r\n\r\n    // 使用纹理canvas生成图，\r\n    // 填充可以是颜色或渐变对象\r\n    // 如果指定了points，则表明要绘制不规则的图形\r\n    toFillTexture(fillStyle, bounds, points=null) {\r\n        const canvas = this.textureCanvas;\r\n        if(!canvas) {\r\n            return fillStyle;\r\n        }\r\n        canvas.width = bounds.width;\r\n        canvas.height = bounds.height;\r\n\r\n        if(!canvas.width || !canvas.height) {\r\n            return fillStyle;\r\n        }\r\n\r\n        this.textureContext.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        this.textureContext.fillStyle = fillStyle;\r\n\r\n        this.textureContext.beginPath();\r\n        if(!points || !points.length) {\r\n            points = [];\r\n            points.push({\r\n                x: bounds.left,\r\n                y: bounds.top\r\n            });\r\n            points.push({\r\n                x: bounds.left + bounds.width,\r\n                y: bounds.top\r\n            });\r\n            points.push({\r\n                x: bounds.left + bounds.width,\r\n                y: bounds.top + bounds.height\r\n            });\r\n            points.push({\r\n                x: bounds.left,\r\n                y: bounds.top + bounds.height\r\n            });\r\n            points.push({\r\n                x: bounds.left,\r\n                y: bounds.top\r\n            });\r\n        }\r\n        if(points && points.length) {\r\n            for(const p of points) {\r\n                //移至当前坐标\r\n                if(p.m) {\r\n                    this.textureContext.moveTo(p.x - bounds.left, p.y - bounds.top);\r\n                }\r\n                else {\r\n                    this.textureContext.lineTo(p.x - bounds.left, p.y - bounds.top);\r\n                }\t\t\t\r\n            }\t\r\n        }\r\n        else {\r\n            this.textureContext.moveTo(0, 0);\r\n            this.textureContext.lineTo(bounds.width, 0);\r\n            this.textureContext.lineTo(bounds.width, bounds.height);\r\n            this.textureContext.lineTo(0, bounds.height);\r\n            this.textureContext.lineTo(0, 0);\r\n        }\r\n        this.textureContext.closePath();\r\n        this.textureContext.fill();\r\n\r\n        const data = this.textureContext.getImageData(0, 0, canvas.width, canvas.height);\r\n        return {\r\n            data,\r\n            points\r\n        };\r\n    }\r\n}\r\n\r\nexport default WeblBase;","import WebglBase from './base.js';\r\n\r\n// path 绘制类\r\nclass WebglPath extends WebglBase {\r\n    constructor(graph, option) {\r\n        super(graph, option);\r\n        // 是否是规则的，不规则的处理方式更为复杂和耗性能\r\n        this.isRegular = option.isRegular || false;\r\n        this.needCut = option.needCut || false;\r\n        this.control = option.control;\r\n        this.points = [];\r\n    }\r\n\r\n    setParentBounds(parentBounds = this.parentAbsoluteBounds) {\r\n\r\n        //this.useProgram();\r\n\r\n        if(parentBounds) this.parentAbsoluteBounds = parentBounds;\r\n        // 写入当前canvas大小\r\n        this.context.uniform2f(this.program.uniforms.a_center_point.location, this.graph.width / 2, this.graph.height / 2);\r\n    }\r\n\r\n    setFragColor(color) {\r\n        \r\n        if(!Array.isArray(color)) {\r\n            color = this.convertColor(color);\r\n            if(typeof color.a === 'undefined') color.a = 1;\r\n            this.context.uniform4f(this.program.uniforms.v_single_color.location, color.r, color.g, color.b, color.a * this.style.globalAlpha);\r\n            return null;\r\n        }\r\n\r\n        const colorData = [];\r\n        for(let c of color) {\r\n            c = this.convertColor(c);\r\n            if(typeof c.a === 'undefined') c.a = 1;\r\n            colorData.push(c.r, c.g, c.b, c.a * this.style.globalAlpha);\r\n        }\r\n        \r\n        const colorBuffer = this.createFloat32Buffer(colorData); \r\n        this.writeVertexAttrib(colorBuffer, this.program.attrs.a_color, 4, 0, 0);\r\n        colorBuffer.attr = this.program.attrs.a_color;\r\n        return colorBuffer;\r\n    }\r\n\r\n    beginDraw() {\r\n        this.useProgram();\r\n    }\r\n\r\n    // 开始绘制\r\n    draw(points, parentBounds = this.parentAbsoluteBounds) {\r\n        //this.useProgram();\r\n\r\n        this.setParentBounds(parentBounds);\r\n        \r\n        this.points = points;\r\n    }\r\n\r\n    endDraw() {\r\n        if(this.points) delete this.points;\r\n        if(this.pathPoints) delete this.pathPoints;\r\n    }\r\n\r\n    // 图形封闭\r\n    closePath() {\r\n        if(this.points && this.points.length > 2 && this.points[0] !== this.points[this.points.length-1]) {\r\n            const start = this.points[0];\r\n            const end = this.points[this.points.length-1];\r\n            if(start != end && !(start.x === end.x && start.y === end.y)) this.points.push(start);\r\n        }\r\n    }\r\n\r\n    // 绘制点数组\r\n    writePoints(points, attr = this.program.attrs.a_position) {\r\n       \r\n        const fixedPoints = [];\r\n        for(const p of points) {\r\n            fixedPoints.push(\r\n                p.x + this.parentAbsoluteBounds.left,\r\n                p.y + this.parentAbsoluteBounds.top\r\n            );\r\n        }\r\n        const vertexBuffer = this.createFloat32Buffer(fixedPoints); \r\n        this.writeVertexAttrib(vertexBuffer, attr, 2, 0, 0);\r\n        vertexBuffer.attr = attr;\r\n        return vertexBuffer;\r\n    }\r\n\r\n    // 连接二个点\r\n    genLinePoints(start, end) {\r\n        const points = [start];\r\n        const dx = end.x - start.x;\r\n        const dy = end.y - start.y;\r\n        if(dx !== 0 || dy !== 0) {\r\n            const len = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\r\n            const cos = dx / len;\r\n            const sin = dy / len;\r\n            const step = 0.5;\r\n            for(let l=step; l<len; l+=step) {\r\n                const x = start.x + cos * l;\r\n                const y = start.y + sin * l;\r\n                points.push({\r\n                    x, \r\n                    y\r\n                });\r\n            }\r\n        }\r\n        points.push(end);\r\n        return points;\r\n    }\r\n\r\n    // 把path坐标集合分解成一个个点，并且处理moveTo线段能力\r\n    pathToPoints(points=this.points) {\r\n        let start = null;\r\n        const res = [];\r\n        for(let i=0; i<points.length; i++) {\r\n            const p = points[i];\r\n            if(start && !p.m) {\r\n                const linePoints = this.genLinePoints(start, p);\r\n                res.push(...linePoints);\r\n            }\r\n            else if(start && !res.includes(start)) {\r\n                res.push(start);\r\n            }\r\n            start = p;\r\n        }\r\n        if(!res.includes(start)) res.push(start);\r\n        return res;\r\n    }\r\n    // 二点是否重合\r\n    equalPoint(p1, p2) {\r\n        return p1.x === p2.x && p1.y === p2.y;\r\n    }\r\n    // 把path坐标集合转为线段集\r\n    pathToLines(points) {\r\n        let start = null;\r\n        const res = [];\r\n        for(let i=0; i<points.length; i++) {\r\n            const p = points[i];\r\n            // 不重合的二个点，组成线段\r\n            if(start && !p.m && !(start.x == p.x && start.y == p.y)) {\r\n                const line = {\r\n                    start,\r\n                    end: p,\r\n                };\r\n                res.push(line);\r\n            }\r\n            start = p;\r\n        }\r\n        return res;\r\n    }\r\n\r\n    // 裁剪线段，如果二段线段有交点，则分割成四段， 端头相交的线段不用分割\r\n    cutLines(lines, index1=0, index2=0) {\r\n        if(lines && lines.length < 3) return lines;\r\n        \r\n        index2 = Math.max(index1 + 1, index2); //如果指定了比下一个更大的索引，则用更大的，说明前面的已经处理过了，不需要重复\r\n\r\n        // 找出线段相交的点，并切割线段\r\n        while(index1 < lines.length) {\r\n            const line1 = lines[index1];\r\n\r\n            while(index2 < lines.length) {\r\n                const line2 = lines[index2];\r\n                // 如果二条线顶点有重合，则不用处理\r\n                if(this.equalPoint(line1.start, line2.start) || this.equalPoint(line1.end, line2.end) || \r\n                this.equalPoint(line1.start, line2.end) || this.equalPoint(line1.end, line2.start)) {\r\n                    index2++;\r\n                    continue;\r\n                }\r\n                let cuted = false;\r\n                const intersection = this.getIntersection(line1, line2);// 计算交点\r\n                if(intersection) {\r\n                    // 如果交点不是线段的端点，则分割成二条线段\r\n                    if(!this.equalPoint(line1.start, intersection) && !this.equalPoint(line1.end, intersection)) {\r\n                        const sub1 = {\r\n                            start: line1.start,\r\n                            end: intersection\r\n                        };\r\n                        const sub2 = {\r\n                            start: intersection,\r\n                            end: line1.end\r\n                        };\r\n                        // 从原数组中删除当前线段，替换成新的线段\r\n                        lines.splice(index1, 1, sub1, sub2);\r\n                        // 当前线段被重新替换，需要重新从它开始处理\r\n                        cuted = true;\r\n                        index2 ++;// 因为多加入了一个线段，则对比线索引需要加1\r\n                    }\r\n                    // 如果交点不是线段的端点，则分割成二条线段\r\n                    if(!this.equalPoint(line2.start, intersection) && !this.equalPoint(line2.end, intersection)) {\r\n                        const sub1 = {\r\n                            start: line2.start,\r\n                            end: intersection\r\n                        };\r\n                        const sub2 = {\r\n                            start: intersection,\r\n                            end: line2.end\r\n                        };\r\n                        // 从原数组中删除当前线段，替换成新的线段\r\n                        lines.splice(index2, 1, sub1, sub2);\r\n                        index2 ++; // 线段2也切成了二段，对比索引要继续加1\r\n                    }\r\n                }\r\n                index2++;\r\n                // 如果已经分割了起始线段，则第一个子线段开始，重新对比后面还未对比完的。直接所有对比完成返回\r\n                if(cuted) return this.cutLines(lines, index1, index2);\r\n            }\r\n            index1++;\r\n            index2 = index1 + 1;\r\n        }\r\n        return lines;\r\n    }\r\n\r\n    // 计算二个线段的交点\r\n    getIntersection(line1, line2) {\r\n        // 如果首尾相接，也认为是有交点\r\n        if(this.equalPoint(line1.start, line2.start) || this.equalPoint(line1.start, line2.end)) return line1.start;\r\n        if(this.equalPoint(line1.end, line2.start) || this.equalPoint(line1.end, line2.end)) return line1.end;\r\n\r\n        // 三角形abc 面积的2倍\r\n        const area_abc = (line1.start.x - line2.start.x) * (line1.end.y - line2.start.y) - (line1.start.y - line2.start.y) * (line1.end.x - line2.start.x);\r\n        \r\n        // 三角形abd 面积的2倍\r\n        const area_abd = (line1.start.x - line2.end.x) * (line1.end.y - line2.end.y) - (line1.start.y - line2.end.y) * (line1.end.x - line2.end.x);\r\n        \r\n        // 面积符号相同则两点在线段同侧,不相交 (=0表示在线段顶点上);\r\n        if (area_abc * area_abd > 0) {\r\n            return null;\r\n        }\r\n        \r\n        // 三角形cda 面积的2倍\r\n        const area_cda = (line2.start.x - line1.start.x) * (line2.end.y - line1.start.y) - (line2.start.y - line1.start.y) * (line2.end.x - line1.start.x);\r\n        // 三角形cdb 面积的2倍\r\n        // 注意: 这里有一个小优化.不需要再用公式计算面积,而是通过已知的三个面积加减得出.\r\n        const area_cdb = area_cda + area_abc - area_abd ;\r\n        if(area_cda * area_cdb > 0) {\r\n            return null ;\r\n        }\r\n        if(area_abd === area_abc) return null;\r\n\r\n        //计算交点坐标\r\n        const t = area_cda / (area_abd - area_abc);\r\n        const dx= t * (line1.end.x - line1.start.x);\r\n        const dy= t * (line1.end.y - line1.start.y);\r\n\r\n        return { \r\n            x: line1.start.x + dx, \r\n            y: line1.start.y + dy\r\n        };\r\n    }\r\n\r\n    // 找出跟当前线段尾部相交的所有线段\r\n    getIntersectionLines(line, lines, index, point=line.end, points=[], root=null) {\r\n        const res = {\r\n            line,\r\n            polygons: []\r\n        };\r\n        \r\n        points.push(point);\r\n        \r\n        if(root && this.equalPoint(root.line.start, point)) {\r\n            points.unshift(root.line.start); // 把起始地址加入进去\r\n            root.polygons.push(points);\r\n            return res;\r\n        }\r\n\r\n        for(;index<lines.length; index++) {\r\n            const l = lines[index];\r\n            if(this.equalPoint(point, l.start)) {      \r\n                if(points.includes(l.end)) continue;          \r\n                this.getIntersectionLines(l, lines, index+1, l.end, [...points], root||res);\r\n            }\r\n            else if(this.equalPoint(point, l.end)) {\r\n                if(points.includes(l.start)) continue;     \r\n                this.getIntersectionLines(l, lines, index+1, l.start, [...points], root||res);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    // 根据路径点坐标，切割出封闭的多边形\r\n    getPolygon(points) {\r\n        let polygons = [];\r\n        let lines = this.pathToLines(points); // 分解得到线段\r\n        if(lines && lines.length > 2) {\r\n            lines = this.cutLines(lines); // 把所有相交点切割线段找出来\r\n            for(let i=0; i<lines.length-1; i++) {\r\n                const line1 = lines[i];\r\n                let polygon = [];// 当前图形\r\n\r\n                const treeLine = this.getIntersectionLines(line1, lines, i+1);\r\n                \r\n                if(treeLine.polygons.length) polygons.push(...treeLine.polygons);\r\n                continue;\r\n                let lastLine = line1; // 下一个还在连接状态的线\r\n                for(let j=i+1; j<lines.length; j++) {\r\n                    const line2 = lines[j];\r\n                    // 如果跟下一条线相接，则表示还在形成图形中\r\n                    if(this.equalPoint(lastLine.end, line2.start)) {\r\n                        polygon.push(lastLine.end);\r\n                        lastLine = line2;\r\n                        if(i === j+1) continue; //下一条相连 则不需要处理相交情况\r\n                    }\r\n                    else {\r\n                        polygon = [];\r\n                    }  \r\n                    // 因为前面进行了分割线段，则里只有处理端点相连的情况\r\n                    const intersection = this.equalPoint(line1.start, line2.end)? line1.start: null;//this.getIntersection(line1, line2);// 计算交点\r\n                    if(intersection) {\r\n                        polygon.push(intersection);// 交叉点为图形顶点\r\n                        // 如果上一个连接线不是当前交叉线，则表示重新开始闭合\r\n                        // 如果上一个连接线是当前交叉线，形成了封闭的图形\r\n                        if(lastLine === line2 && polygon.length > 1) {\r\n                            polygons.push(polygon);\r\n                            \r\n                            // 封闭后，下一个起始线条就是从交点开始计算起\r\n                            /*lastLine = {\r\n                                start: intersection,\r\n                                end: line2.end\r\n                            };*/\r\n                            polygon = [];// 重新开始新一轮找图形\r\n\r\n                            /*\r\n                            // 如果交点是上一条线的终点，则新图形为空\r\n                            if(this.equalPoint(line2.end, intersection)) {\r\n                                polygon = [];// 重新开始新一轮找图形\r\n                            }\r\n                            else {\r\n                                // 同时交点也要加到上一个图形中第一个点，形成封闭\r\n                                polygon.unshift(intersection);\r\n\r\n                                polygon = [ intersection ];// 重新开始新一轮找图形\r\n                            }*/\r\n                        }\r\n                        else {\r\n                            lastLine = line2;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        // 当有多个封闭图形时，再弟归一下，里面是不是有封闭图形内还有子封闭图形\r\n        /*if(polygons.length > 1) {\r\n            const newPolygons = [];\r\n            for(const polygon of polygons) {\r\n                // 只有大于4才有可能有子封闭图形\r\n                if(polygon.length > 4) {\r\n                    const childPolygons = this.getPolygon(polygon);\r\n                    // 当有多个子图形时，表示它不是最终封闭图形，跳过，\r\n                    // 因为它的子图形之前有加入的，不需要重复加入\r\n                    if(childPolygons.length > 1) {\r\n                        //newPolygons.push(...childPolygons);\r\n                        continue;\r\n                    }\r\n                }\r\n                newPolygons.push(polygon);\r\n            }\r\n            polygons = newPolygons;\r\n        }*/\r\n        return polygons;\r\n    }\r\n\r\n    // 分割成一个个规则的三角形，不规则的多边形不全割的话纹理就会没法正确覆盖\r\n    getTriangles(points) {\r\n        \r\n        //this.trianglesCache = this.trianglesCache||(this.trianglesCache={});\r\n        //const key = JSON.stringify(points);\r\n        //if(this.trianglesCache[key]) return this.trianglesCache[key];\r\n\r\n        const res = [];\r\n        const polygons = this.getPolygon(points);                \r\n        if(polygons.length) {            \r\n            for(const polygon of polygons) {\r\n                // 需要分割三角形，不然填充会有问题\r\n                const triangles = this.earCutPointsToTriangles(polygon);\r\n                res.push(...triangles);\r\n            }   \r\n        }\r\n        //this.trianglesCache[key] = res;\r\n        return res;\r\n    }\r\n\r\n    // 画线条\r\n    stroke(points = this.points, color = this.style.strokeStyle, lineWidth = this.style.lineWidth) {\r\n        if(!points || !points.length) return;\r\n       // this.useProgram();\r\n\r\n        let colorBuffer = null;\r\n        if(color) {\r\n            colorBuffer = this.setFragColor(color);\r\n        }\r\n        // 线宽\r\n        if(lineWidth) {\r\n            this.context.uniform1f(this.program.uniforms.a_point_size.location, lineWidth);// * this.graph.devicePixelRatio\r\n        }\r\n        // 标注为stroke\r\n        if(this.program.uniforms.a_type) {\r\n            // 4表示单画一个圆点，1表示方块形成的线条\r\n            this.context.uniform1i(this.program.uniforms.a_type.location, points.length === 1? 4 :1);\r\n        }\r\n        if(points && points.length) {\r\n            const regular = lineWidth <= 1.2;\r\n            points = regular? points : this.pathToPoints(points);\r\n            const buffer = this.writePoints(points);\r\n            this.context.drawArrays(regular? this.context.LINE_LOOP: this.context.POINTS, 0, points.length);\r\n            this.deleteBuffer(buffer);\r\n        }\r\n        colorBuffer && this.deleteBuffer(colorBuffer);\r\n        colorBuffer && this.disableVertexAttribArray(colorBuffer.attr);\r\n    }\r\n\r\n    // 填充图形\r\n    fill(bounds = {left: 0, top: 0, width: 0, height: 0}, type = 1) {\r\n       \r\n        if(this.points && this.points.length) {            \r\n            // 如果是颜色rgba\r\n            if(this.style.fillStyle) {            \r\n                this.fillColor(this.style.fillStyle, this.points, bounds, type);\r\n            }\r\n            if(this.style.fillImage) {            \r\n                this.fillImage(this.style.fillImage, this.points, bounds, type); \r\n            }\r\n        }\r\n    }\r\n\r\n    fillColor(color, points, bounds, type=1) {\r\n        \r\n        // 如果是渐变色，则需要计算偏移量的颜色\r\n        if(this.isGradient(color)) {\r\n            const imgData = color.toImageData(this, bounds, points);\r\n            return this.fillImage(imgData.data, imgData.points, bounds);\r\n        }\r\n        \r\n        // 标注为fill\r\n        this.context.uniform1i(this.program.uniforms.a_type.location, type);\r\n        const colorBuffer = this.setFragColor(color);\r\n\r\n        this.fillPolygons(points);                \r\n\r\n        colorBuffer && this.deleteBuffer(colorBuffer);\r\n        colorBuffer && this.disableVertexAttribArray(colorBuffer.attr);\r\n\r\n    }\r\n\r\n    // 区域填充图片\r\n    // points绘制的图形顶点\r\n    // 图片整体绘制区域\r\n    fillImage(img, points, bounds) {\r\n        if(!img) return;\r\n\r\n        // 设置纹理\r\n        const texture = img instanceof ImageData? this.createDataTexture(img) : this.createImgTexture(img);\r\n        this.context.uniform1i(this.program.uniforms.u_sample.location, 0); // 纹理单元传递给着色器\r\n\r\n        // 指定纹理区域尺寸\r\n        this.context.uniform4f(this.program.uniforms.v_texture_bounds.location, \r\n            bounds.left + this.parentAbsoluteBounds.left,\r\n            bounds.top + this.parentAbsoluteBounds.top,\r\n            bounds.width,\r\n            bounds.height,\r\n        ); // 纹理单元传递给着色器\r\n\r\n        this.fillTexture(points);\r\n        \r\n        this.deleteTexture(texture);\r\n    }\r\n\r\n    fillTexture(points) {        \r\n        if(points && points.length) {  // 标注为纹理对象\r\n            this.context.uniform1i(this.program.uniforms.a_type.location, 2);  \r\n            // 纹理坐标\r\n            //const coordBuffer = this.writePoints(points, this.program.attrs.a_text_coord);\r\n            this.fillPolygons(points, true);\r\n            //this.deleteBuffer(coordBuffer);  \r\n            this.disableVertexAttribArray(this.program.attrs.a_text_coord);   \r\n        } \r\n    }\r\n\r\n    // 进行多边形填充\r\n    fillPolygons(points, isTexture = false) {   \r\n        //const indexBuffer = this.createUint16Buffer(triangles, this.context.ELEMENT_ARRAY_BUFFER);\r\n        //this.context.drawElements(this.context.TRIANGLES, triangles.length, this.context.UNSIGMED_SHORT, 0);\r\n        //this.deleteBuffer(indexBuffer);\r\n        /*if(points.length > 3 && (!regular || this.needCut)) {\r\n            const triangles = regular && this.needCut? this.earCutPointsToTriangles(points): this.getTriangles(points);                \r\n            if(triangles.length) {   \r\n                for(const triangle of triangles) {\r\n                    this.fillPolygons(triangle, isTexture);// 这里就变成了规则的图形了\r\n                }\r\n            }\r\n        }\r\n        else {*/\r\n            const buffer = this.writePoints(points);\r\n            // 纹理坐标\r\n            const coordBuffer = isTexture? this.writePoints(points, this.program.attrs.a_text_coord): null;\r\n\r\n            this.context.drawArrays(this.context.TRIANGLE_FAN, 0, points.length);\r\n            this.deleteBuffer(buffer);\r\n            coordBuffer && this.deleteBuffer(coordBuffer);    \r\n        //}\r\n    }\r\n\r\n    // 填充图形\r\n    drawImage(img, left=0, top=0, width=img.width, height=img.height) {\r\n        width = width || img.width;\r\n        height = height || img.height;\r\n\r\n        this.fillImage(img, this.points, {\r\n            left,\r\n            top,\r\n            width, \r\n            height\r\n        });\r\n    }\r\n\r\n    drawText(text, x, y, bounds) {\r\n        let canvas = this.textureCanvas;\r\n        if(!canvas) {\r\n            return null;\r\n        }\r\n        canvas.width = bounds.width;\r\n        canvas.height = bounds.height;\r\n\r\n        if(!canvas.width || !canvas.height) {\r\n            return null;\r\n        }\r\n\r\n        this.textureContext.clearRect(0, 0, canvas.width, canvas.height);\r\n        // 修改字体\r\n\t\tthis.textureContext.font = this.style.font || (this.style.fontSize + 'px ' + this.style.fontFamily);\r\n\r\n        x -= bounds.left;\r\n        y -= bounds.top;\r\n\r\n        this.setTextureStyle(this.style);\r\n\r\n        if(this.style.fillStyle && this.textureContext.fillText) {\r\n\r\n            if(this.style.maxWidth) {\r\n                this.textureContext.fillText(text, x, y, this.style.maxWidth);\r\n            }\r\n            else {\r\n                this.textureContext.fillText(text, x, y);\r\n            }\r\n        }\r\n        if(this.textureContext.strokeText) {\r\n\r\n            if(this.style.maxWidth) {\r\n                this.textureContext.strokeText(text, x, y, this.style.maxWidth);\r\n            }\r\n            else {\r\n                this.textureContext.strokeText(text, x, y);\r\n            }\r\n        }\r\n        // 用纹理图片代替文字\r\n        const data = this.textureContext.getImageData(0, 0, canvas.width, canvas.height);\r\n        this.fillImage(data, this.points, bounds);\r\n    }\r\n}\r\n\r\nexport default WebglPath;","\r\nimport {jmUtils} from \"./jmUtils.js\";\r\nimport {jmList} from \"./jmList.js\";\r\nimport {jmGradient} from \"./jmGradient.js\";\r\nimport {jmShadow} from \"./jmShadow.js\";\r\nimport {jmProperty} from \"./jmProperty.js\";\r\nimport WebglPath from \"../lib/webgl/path.js\";\r\n\r\n//样式名称，也当做白名单使用\t\t\r\nconst jmStyleMap = {\r\n\t'fill':'fillStyle',\r\n\t'fillImage':'fillImage',\r\n\t'stroke':'strokeStyle',\r\n\t'shadow.blur':'shadowBlur',\r\n\t'shadow.x':'shadowOffsetX',\r\n\t'shadow.y':'shadowOffsetY',\r\n\t'shadow.color':'shadowColor',\r\n\t'lineWidth' : 'lineWidth',\r\n\t'miterLimit': 'miterLimit',\r\n\t'fillStyle' : 'fillStyle',\r\n\t'strokeStyle' : 'strokeStyle',\r\n\t'font' : 'font',\r\n\t'opacity' : 'globalAlpha',\r\n\t'textAlign' : 'textAlign',\r\n\t'textBaseline' : 'textBaseline',\r\n\t'shadowBlur' : 'shadowBlur',\r\n\t'shadowOffsetX' : 'shadowOffsetX',\r\n\t'shadowOffsetY' : 'shadowOffsetY',\r\n\t'shadowColor' : 'shadowColor',\r\n\t'lineJoin': 'lineJoin',//线交汇处的形状,miter(默认，尖角),bevel(斜角),round（圆角）\r\n\t'lineCap':'lineCap' //线条终端点,butt(默认，平),round(圆),square（方）\r\n};\r\n\r\n/**\r\n * 控件基础对象\r\n * 控件的基础属性和方法\r\n *\r\n * @class jmControl\r\n * @extends jmProperty\r\n */\t\r\nexport default class jmControl extends jmProperty {\t\r\n\r\n\tconstructor(params, t) {\r\n\t\tparams = params||{};\r\n\t\tsuper(params);\r\n\t\tthis.property('type', t || new.target.name);\r\n\t\tthis.style = params && params.style ? params.style : {};\r\n\t\t//this.position = params.position || {x:0,y:0};\r\n\t\tthis.width = params.width || 0;\r\n\t\tthis.height = params.height  || 0;\r\n\r\n\t\tif(params.position) {\r\n\t\t\tthis.position = params.position;\r\n\t\t}\r\n\r\n\t\tthis.graph = params.graph || null;\r\n\t\tthis.zIndex = params.zIndex || 0;\r\n\t\tthis.interactive = typeof params.interactive == 'undefined'? false : params.interactive;\r\n\r\n\t\t// webgl模式\r\n\t\tif(this.mode === 'webgl') {\r\n\t\t\tthis.webglControl = new WebglPath(this.graph, {\r\n\t\t\t\tstyle: this.style,\r\n\t\t\t\tcontrol: this,\r\n\t\t\t\tisRegular: params.isRegular,\r\n\t\t\t\tneedCut: params.needCut\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.initializing();\t\r\n\t\t\r\n\t\tthis.on = this.bind;\r\n\t\t\r\n\t\tthis.option = params;\r\n\t}\r\n\r\n\t//# region 定义属性\r\n\t/**\r\n\t * 当前对象类型名jmRect\r\n\t *\r\n\t * @property type\r\n\t * @type string\r\n\t */\r\n\tget type() {\r\n\t\treturn this.property('type');\r\n\t}\r\n\r\n\t/**\r\n\t * 当前canvas的context\r\n\t * @property context\r\n\t * @type {object}\r\n\t */\r\n\tget context() {\r\n\t\tlet s = this.property('context');\r\n\t\tif(s) return s;\r\n\t\telse if(this.is('jmGraph') && this.canvas && this.canvas.getContext) {\r\n\t\t\treturn this.context = this.canvas.getContext(this.mode || '2d');\r\n\t\t}\r\n\t\tconst g = this.graph;\r\n\t\tif(g) return g.context;\r\n\t\treturn g.canvas.getContext(this.mode || '2d');\r\n\t}\r\n\tset context(v) {\r\n\t\treturn this.property('context', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 样式\r\n\t * @property style\r\n\t * @type {object}\r\n\t */\r\n\tget style() {\r\n\t\tlet s = this.property('style');\r\n\t\tif(!s) s = this.property('style', {});\r\n\t\treturn s;\r\n\t}\r\n\tset style(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.property('style', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 当前控件是否可见\r\n\t * @property visible\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tget visible() {\r\n\t\tlet s = this.property('visible');\r\n\t\tif(typeof s == 'undefined') s = this.property('visible', true);\r\n\t\treturn s;\r\n\t}\r\n\tset visible(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.property('visible', v);\r\n\t}\t\r\n\r\n\t/**\r\n\t * 当前控件是否是交互式的，如果是则会响应鼠标或touch事件。\r\n\t * 如果false则不会主动响应，但冒泡的事件依然会得到回调\r\n\t * @property interactive\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tget interactive() {\r\n\t\tconst s = this.property('interactive');\r\n\t\treturn s;\r\n\t}\r\n\tset interactive(v) {\r\n\t\treturn this.property('interactive', v);\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * 当前控件的子控件集合\r\n\t * @property children\r\n\t * @type {list}\r\n\t */\r\n\tget children() {\r\n\t\tlet s = this.property('children');\r\n\t\tif(!s) s = this.property('children', new jmList());\r\n\t\treturn s;\r\n\t}\r\n\tset children(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.property('children', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 宽度\r\n\t * @property width\r\n\t * @type {number}\r\n\t */\r\n\tget width() {\r\n\t\tlet s = this.property('width');\r\n\t\tif(typeof s == 'undefined') s = this.property('width', 0);\r\n\t\treturn s;\r\n\t}\r\n\tset width(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.property('width', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 高度\r\n\t * @property height\r\n\t * @type {number}\r\n\t */\r\n\tget height() {\r\n\t\tlet s = this.property('height');\r\n\t\tif(typeof s == 'undefined') s = this.property('height', 0);\r\n\t\treturn s;\r\n\t}\r\n\tset height(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.property('height', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 控件层级关系，发生改变时，需要重新调整排序\r\n\t * @property zIndex\r\n\t * @type {number}\r\n\t */\r\n\tget zIndex() {\r\n\t\tlet s = this.property('zIndex');\r\n\t\tif(!s) s = this.property('zIndex', 0);\r\n\t\treturn s;\r\n\t}\r\n\tset zIndex(v) {\r\n\t\tthis.property('zIndex', v);\r\n\t\tthis.children.sort();//层级发生改变，需要重新排序\r\n\t\tthis.needUpdate = true;\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * 设置鼠标指针\r\n\t * css鼠标指针标识,例如:pointer,move等\r\n\t * \r\n\t * @property cursor\r\n\t * @type {string}\r\n\t */\r\n\tset cursor(cur) {\t\r\n\t\tvar graph = this.graph ;\r\n\t\tif(graph) {\t\t\r\n\t\t\tgraph.css('cursor',cur);\t\t\r\n\t\t}\r\n\t}\r\n\tget cursor() {\r\n\t\tvar graph = this.graph ;\r\n\t\tif(graph) {\t\t\r\n\t\t\treturn graph.css('cursor');\t\t\r\n\t\t}\r\n\t}\r\n\r\n\t//# end region\r\n\r\n\t/**\r\n\t * 初始化对象，设定样式，初始化子控件对象\r\n\t * 此方法为所有控件需调用的方法\r\n\t *\r\n\t * @method initializing\r\n\t * @for jmControl\r\n\t */\r\n\tinitializing() {\r\n\r\n\t\tconst self = this;\r\n\t\t//定义子元素集合\r\n\t\tthis.children = this.children || new jmList();\r\n\t\tconst oadd = this.children.add;\r\n\t\t//当把对象添加到当前控件中时，设定其父节点\r\n\t\tthis.children.add = function(obj) {\r\n\t\t\tif(typeof obj === 'object') {\r\n\t\t\t\tif(obj.parent && obj.parent != self && obj.parent.children) {\r\n\t\t\t\t\tobj.parent.children.remove(obj);//如果有父节点则从其父节点中移除\r\n\t\t\t\t}\r\n\t\t\t\tobj.parent = self;\r\n\t\t\t\t//如果存在先移除\r\n\t\t\t\tif(this.contain(obj)) {\r\n\t\t\t\t\tthis.oremove(obj);\r\n\t\t\t\t}\r\n\t\t\t\toadd.call(this, obj);\r\n\t\t\t\tobj.emit('add', obj);\r\n\r\n\t\t\t\tself.needUpdate = true;\r\n\t\t\t\tif(self.graph) obj.graph = self.graph;\r\n\t\t\t\tthis.sort();//先排序\r\n\t\t\t\t//self.emit('addChild', obj);\r\n\t\t\t\treturn obj;\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.children.oremove= this.children.remove;\r\n\t\t//当把对象从此控件中移除时，把其父节点置为空\r\n\t\tthis.children.remove = function(obj) {\r\n\t\t\tif(typeof obj === 'object') {\t\t\t\t\r\n\t\t\t\tobj.parent = null;\r\n\t\t\t\tobj.graph = null;\r\n\t\t\t\tobj.remove(true);\r\n\t\t\t\tthis.oremove(obj);\r\n\t\t\t\tself.needUpdate = true;\r\n\t\t\t\t//self.emit('removeChild', obj, index);\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * 根据控件zIndex排序，越大的越高\r\n\t\t */\r\n\t\t//const osort = this.children.sort;\r\n\t\tthis.children.sort = function() {\r\n\t\t\tconst levelItems = {};\r\n\t\t\t//提取zindex大于0的元素\r\n\t\t\t//为了保证0的层级不改变，只能把大于0的提出来。\r\n\t\t\tthis.each(function(i, obj) {\r\n\t\t\t\tif(!obj) return;\r\n\t\t\t\tlet zindex = obj.zIndex;\r\n\t\t\t\tif(!zindex && obj.style && obj.style.zIndex) {\r\n\t\t\t\t\tzindex = Number(obj.style.zIndex);\r\n\t\t\t\t\tif(isNaN(zindex)) zindex=obj.style.zIndex||0;\r\n\t\t\t\t}\r\n\t\t\t\tlet items = levelItems[zindex] || (levelItems[zindex] = []);\r\n\t\t\t\titems.push(obj);\r\n\t\t\t});\r\n\r\n\t\t\tthis.splice(0, this.length);\r\n\t\t\t\r\n\t\t\tfor(let index in levelItems) {\r\n\t\t\t\toadd.call(this, levelItems[index]);\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\tosort.call(this, (c1, c2) => {\r\n\t\t\t\tlet zindex1 = c1.zIndex || c1.style.zIndex || 0;\r\n\t\t\t\tlet zindex2 = c2.zIndex || c2.style.zIndex || 0;\r\n\t\t\t\treturn zindex1 - zindex2;\r\n\t\t\t});*/\r\n\t\t}\r\n\t\tthis.children.clear = function() {\r\n\t\t\tthis.each(function(i,obj) {\r\n\t\t\t\tthis.remove(obj);\r\n\t\t\t},true);\r\n\t\t}\r\n\t\tthis.needUpdate = true;\r\n\t} \r\n\r\n\t/**\r\n\t * 设定样式到context\r\n\t * 处理样式映射，转换渐变和阴影对象为标准canvas属性\r\n\t * 样式一览\r\n\t\t| 简化名称 | 原生名称 | 说明\r\n\t\t| :- | :- | :- | \r\n\t\t| fill | fillStyle | 用于填充绘画的颜色、渐变或模式\r\n\t\t| stroke | strokeStyle | 用于笔触的颜色、渐变或模式\r\n\t\t| shadow | 没有对应的 | 最终会解析成以下几个属性，格式：'0,0,10,#fff'或g.createShadow(0,0,20,'#000');\r\n\t\t| shadow.blur | shadowBlur | 用于阴影的模糊级别\r\n\t\t| shadow.x | shadowOffsetX | 阴影距形状的水平距离\r\n\t\t| shadow.y | shadowOffsetY | 阴影距形状的垂直距离\r\n\t\t| shadow.color | shadowColor | 阴影颜色，格式：'#000'、'#46BF86'、'rgb(255,255,255)'或'rgba(39,72,188,0.5)'\r\n\t\t| lineWidth | lineWidth | 当前的线条宽度\r\n\t\t| miterLimit | miterLimit | 最大斜接长度\r\n\t\t| font | font | 请使用下面的 fontSize 和 fontFamily\r\n\t\t| fontSize | font | 字体大小\r\n\t\t| fontFamily | font | 字体\r\n\t\t| opacity | globalAlpha | 绘图的当前 alpha 或透明值\r\n\t\t| textAlign | textAlign | 文本内容的当前对齐方式\r\n\t\t| textBaseline | textBaseline | 在绘制文本时使用的当前文本基线\r\n\t\t| lineJoin | lineJoin | 两条线相交时，所创建的拐角类型：miter(默认，尖角),bevel(斜角),round（圆角）\r\n\t\t| lineCap | lineCap | 线条的结束端点样式：butt(默认，平),round(圆),square（方）\r\n\t * \r\n\t * @method setStyle\r\n\t * @for jmControl\r\n\t * @private\r\n\t * @param {style} style 样式对象，如:{fill:'black',stroke:'red'}\r\n\t */\r\n\tsetStyle(style) {\r\n\t\tstyle = style || jmUtils.clone(this.style, true);\r\n\t\tif(!style) return;\r\n\r\n\t\t/**\r\n\t\t * 样式设定\r\n\t\t * \r\n\t\t * @method __setStyle\r\n\t\t * @private\r\n\t\t * @param {jmControl} control 当前样式对应的控件对象\r\n\t\t * @param {style} style 样式\r\n\t\t * @param {string} name 样式名称\r\n\t\t * @param {string} mpkey 样式名称在映射中的key(例如：shadow.blur为模糊值)\r\n\t\t */\r\n\t\tconst __setStyle = (style, name, mpkey) => {\r\n\t\t\t\r\n\t\t\tif(style) {\t\t\r\n\t\t\t\tlet styleValue = style;\t\t\r\n\t\t\t\tif(typeof styleValue === 'function') {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tstyleValue = styleValue.call(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(e) {\r\n\t\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet t = typeof styleValue;\t\r\n\t\t\t\tlet mpname = jmStyleMap[mpkey || name];\r\n\r\n\t\t\t\t//如果为渐变对象\r\n\t\t\t\tif((styleValue instanceof jmGradient) || (t == 'string' && styleValue.indexOf('-gradient') > -1)) {\r\n\t\t\t\t\t//如果是渐变，则需要转换\r\n\t\t\t\t\tif(t == 'string' && styleValue.indexOf('-gradient') > -1) {\r\n\t\t\t\t\t\tstyleValue = new jmGradient(styleValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t__setStyle(styleValue.toGradient(this), mpname||name);\t\r\n\t\t\t\t}\r\n\t\t\t\telse if(mpname) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.webglControl) {\r\n\r\n\t\t\t\t\t\tthis.webglControl.setStyle(mpname, styleValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t//只有存在白名单中才处理\r\n\t\t\t\t\t\t//颜色转换\r\n\t\t\t\t\t\tif(t == 'string' && ['fillStyle', 'strokeStyle', 'shadowColor'].indexOf(mpname) > -1) {\r\n\t\t\t\t\t\t\tstyleValue = jmUtils.toColor(styleValue);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.context[mpname] = styleValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t\telse {\r\n\t\t\t\t\tswitch(name) {\r\n\t\t\t\t\t\t//阴影样式\r\n\t\t\t\t\t\tcase 'shadow' : {\r\n\t\t\t\t\t\t\tif(t == 'string') {\r\n\t\t\t\t\t\t\t\t__setStyle(new jmShadow(styleValue), name);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor(let k in styleValue) {\r\n\t\t\t\t\t\t\t\t__setStyle(styleValue[k], k, name + '.' + k);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//平移\r\n\t\t\t\t\t\tcase 'translate' : {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//旋转\r\n\t\t\t\t\t\tcase 'rotation' : {\t\r\n\t\t\t\t\t\t\tif(typeof styleValue.angle === 'undefined' || isNaN(styleValue.angle)) break;\t\r\n\t\t\t\t\t\t\tstyleValue = this.getRotation(styleValue);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.__translateAbsolutePosition = this.toAbsolutePoint({\r\n\t\t\t\t\t\t\t\tx: styleValue.x,\r\n\t\t\t\t\t\t\t\ty: styleValue.y\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t//旋转，则移位，如果有中心位则按中心旋转，否则按左上角旋转\r\n\t\t\t\t\t\t\t//这里只有style中的旋转才能生效，不然会导至子控件多次旋转\r\n\t\t\t\t\t\t\tthis.context.translate && this.context.translate(this.__translateAbsolutePosition.x, this.__translateAbsolutePosition.y);\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.context.rotate && this.context.rotate(styleValue.angle);\r\n\t\t\t\t\t\t\tthis.context.translate && this.context.translate(-this.__translateAbsolutePosition.x, -this.__translateAbsolutePosition.y);\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase 'transform' : {\r\n\t\t\t\t\t\t\tif(!this.context.transform) break;\r\n\t\t\t\t\t\t\tif(Array.isArray(styleValue)) {\r\n\t\t\t\t\t\t\t\tthis.context.transform.apply(this.context, styleValue);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if(typeof styleValue == 'object') {\r\n\t\t\t\t\t\t\t\tthis.context.transform(\r\n\t\t\t\t\t\t\t\t\tstyleValue.scaleX || 1,//水平缩放\r\n\t\t\t\t\t\t\t\t\tstyleValue.skewX || 0,//水平倾斜\r\n\t\t\t\t\t\t\t\t\tstyleValue.skewY || 0,//垂直倾斜\r\n\t\t\t\t\t\t\t\t\tstyleValue.scaleY || 1,//垂直缩放\r\n\t\t\t\t\t\t\t\t\tstyleValue.offsetX || 0,//水平位移\r\n\t\t\t\t\t\t\t\t\tstyleValue.offsetY || 0//垂直位移\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//鼠标指针\r\n\t\t\t\t\t\tcase 'cursor' : {\r\n\t\t\t\t\t\t\tthis.cursor = styleValue;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\r\n\t\t//一些特殊属性要先设置，否则会导致顺序不对出现错误的效果\r\n\t\tif(this.translate) {\r\n\t\t\t__setStyle(this.translate, 'translate');\r\n\t\t}\r\n\t\tif(this.transform) {\r\n\t\t\t__setStyle(this.transform, 'transform');\r\n\t\t}\r\n\t\t//设置样式\r\n\t\tfor(let k in style) {\r\n\t\t\tif(k === 'constructor') continue;\r\n\t\t\tlet t = typeof style[k];\r\n\t\t\t//先处理部分样式，以免每次都需要初始化解析\r\n\t\t\tif(t == 'string' && style[k].indexOf('-gradient') > -1) {\r\n\t\t\t\tstyle[k] = new jmGradient(style[k]);\r\n\t\t\t}\r\n\t\t\telse if(t == 'string' && k == 'shadow') {\r\n\t\t\t\tstyle[k] = new jmShadow(style[k]);\r\n\t\t\t}\r\n\t\t\t__setStyle(style[k], k);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前控件的边界\r\n\t * 通过分析控件的描点或位置加宽高得到为方形的边界\r\n\t *\r\n\t * @method getBounds\r\n\t * @for jmControl\r\n\t * @param {boolean} [isReset=false] 是否强制重新计算\r\n\t * @return {object} 控件的边界描述对象(left,top,right,bottom,width,height)\r\n\t */\r\n\tgetBounds(isReset) {\r\n\t\t//如果当次计算过，则不重复计算\r\n\t\tif(this.bounds && !isReset) return this.bounds;\r\n\r\n\t\tconst rect = {}; // left top\r\n\t\t//jmGraph，特殊处理\r\n\t\tif(this.type == 'jmGraph' && this.canvas) {\r\n\t\t\tif(typeof this.canvas.width === 'function') {\r\n\t\t\t\trect.right = this.canvas.width(); \r\n\t\t\t}\r\n\t\t\telse if(this.width) {\r\n\t\t\t\trect.right = this.width;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(typeof this.canvas.height === 'function') {\r\n\t\t\t\trect.bottom = this.canvas.height(); \r\n\t\t\t}\r\n\t\t\telse if(this.height) {\r\n\t\t\t\trect.bottom = this.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.points && this.points.length > 0) {\t\t\r\n\t\t\tfor(const p of this.points) {\r\n\t\t\t\tif(typeof rect.left === 'undefined' || rect.left > p.x) {\r\n\t\t\t\t\trect.left = p.x;\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof rect.top === 'undefined'  || rect.top > p.y) {\r\n\t\t\t\t\trect.top = p.y;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof rect.right === 'undefined'  || rect.right < p.x) {\r\n\t\t\t\t\trect.right = p.x;\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof rect.bottom === 'undefined' || rect.bottom < p.y) {\r\n\t\t\t\t\trect.bottom = p.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.getLocation) {\r\n\t\t\tlet p = this.getLocation();\r\n\t\t\tif(p) {\r\n\t\t\t\trect.left = p.left;\r\n\t\t\t\trect.top = p.top;\r\n\t\t\t\trect.right = p.left + p.width;\r\n\t\t\t\trect.bottom = p.top + p.height;\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\tif(!rect.left) rect.left = 0; \r\n\t\tif(!rect.top) rect.top = 0; \r\n\t\tif(!rect.right) rect.right = 0; \r\n\t\tif(!rect.bottom) rect.bottom = 0; \r\n\t\trect.width = rect.right - rect.left;\r\n\t\trect.height = rect.bottom - rect.top;\r\n\t\t\r\n\t\treturn this.bounds=rect;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取被旋转后的边界\r\n\t */\r\n\tgetRotationBounds(rotation=null) {\r\n\t\trotation = rotation || this.getRotation();\r\n\t\tconst bounds = this.getBounds();\r\n\t\tif(!rotation || !rotation.angle) return bounds;\r\n\r\n\t\tconst rect = {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 0,\r\n\t\t\toldBounds: bounds\r\n\t\t}; // left top\r\n\t\tlet points = [];\r\n\t\tif(this.points && this.points.length > 0) {\t\r\n\t\t\tpoints = jmUtils.clone(this.points, true); // 深度拷贝\t\t\t\r\n\t\t}\r\n\t\telse if(this.getLocation) {\r\n\t\t\tconst local = this.getLocation();\r\n\t\t\tif(local) {\r\n\t\t\t\tpoints.push({\r\n\t\t\t\t\tx: local.left,\r\n\t\t\t\t\ty: local.top\r\n\t\t\t\t},{\r\n\t\t\t\t\tx: local.left + local.width,\r\n\t\t\t\t\ty: local.top\r\n\t\t\t\t},{\r\n\t\t\t\t\tx: local.left + local.width,\r\n\t\t\t\t\ty: local.top + local.height\r\n\t\t\t\t},{\r\n\t\t\t\t\tx: local.left,\r\n\t\t\t\t\ty: local.top + local.height\r\n\t\t\t\t});\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\tpoints = jmUtils.rotatePoints(points, {\r\n\t\t\tx: rotation.x + bounds.left,\r\n\t\t\ty: rotation.y + bounds.top\r\n\t\t}, rotation.angle);// 对现在点进行旋转\r\n\r\n\t\tfor(const p of points) {\r\n\t\t\tif(typeof rect.left === 'undefined' || rect.left > p.x) {\r\n\t\t\t\trect.left = p.x;\r\n\t\t\t}\r\n\t\t\tif(typeof rect.top === 'undefined'  || rect.top > p.y) {\r\n\t\t\t\trect.top = p.y;\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof rect.right === 'undefined'  || rect.right < p.x) {\r\n\t\t\t\trect.right = p.x;\r\n\t\t\t}\r\n\t\t\tif(typeof rect.bottom === 'undefined' || rect.bottom < p.y) {\r\n\t\t\t\trect.bottom = p.y;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!rect.left) rect.left = 0; \r\n\t\tif(!rect.top) rect.top = 0; \r\n\t\tif(!rect.right) rect.right = 0; \r\n\t\tif(!rect.bottom) rect.bottom = 0; \r\n\r\n\t\trect.width = rect.right - rect.left;\r\n\t\trect.height = rect.bottom - rect.top;\r\n\r\n\t\treturn rect;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前控件的位置相关参数\r\n\t * 解析百分比和margin参数\r\n\t *\r\n\t * @method getLocation\r\n\t * @return {object} 当前控件位置参数，包括中心点坐标，右上角坐标，宽高\r\n\t */\r\n\tgetLocation(clone=true) {\r\n\t\t//如果已经计算过则直接返回\r\n\t\t//在开画之前会清空此对象\r\n\t\t//if(reset !== true && this.location) return this.location;\r\n\r\n\t\tlet local = this.location = {left: 0,top: 0,width: 0,height: 0};\r\n\t\tlocal.position = typeof this.position == 'function'? this.position(): jmUtils.clone(this.position);\t\r\n\t\tlocal.center = this.center && typeof this.center === 'function'?this.center(): jmUtils.clone(this.center);//中心\r\n\t\tlocal.start = this.start && typeof this.start === 'function'?this.start(): jmUtils.clone(this.start);//起点\r\n\t\tlocal.end = this.end && typeof this.end === 'function'?this.end(): jmUtils.clone(this.end);//起点\r\n\t\tlocal.radius = this.radius;//半径\r\n\t\tlocal.width = this.width;\r\n\t\tlocal.height = this.height;\r\n\r\n\t\tconst margin = jmUtils.clone(this.style.margin, {});\r\n\t\tmargin.left = (margin.left || 0);\r\n\t\tmargin.top = (margin.top || 0);\r\n\t\tmargin.right = (margin.right || 0);\r\n\t\tmargin.bottom = (margin.bottom || 0);\r\n\t\t\r\n\t\t//如果没有指定位置，但指定了margin。则位置取margin偏移量\r\n\t\tif(local.position) {\r\n\t\t\tlocal.left = local.position.x;\r\n\t\t\tlocal.top = local.position.y;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlocal.left = margin.left;\r\n\t\t\tlocal.top = margin.top;\r\n\t\t}\r\n\r\n\t\tif(this.parent) {\r\n\t\t\tconst parentBounds = this.parent.getBounds();\t\r\n\r\n\t\t\t//处理百分比参数\r\n\t\t\tif(jmUtils.checkPercent(local.left)) {\r\n\t\t\t\tlocal.left = jmUtils.percentToNumber(local.left) * parentBounds.width;\r\n\t\t\t}\r\n\t\t\tif(jmUtils.checkPercent(local.top)) {\r\n\t\t\t\tlocal.top = jmUtils.percentToNumber(local.top) * parentBounds.height;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//如果没有指定宽度或高度，则按百分之百计算其父宽度或高度\r\n\t\t\tif(jmUtils.checkPercent(local.width)) {\r\n\t\t\t\tlocal.width = jmUtils.percentToNumber(local.width) * parentBounds.width;\r\n\t\t\t}\r\n\t\t\tif(jmUtils.checkPercent(local.height)) {\r\n\t\t\t\tlocal.height = jmUtils.percentToNumber(local.height) * parentBounds.height;\r\n\t\t\t}\r\n\t\t\t//处理中心点\r\n\t\t\tif(local.center) {\r\n\t\t\t\t//处理百分比参数\r\n\t\t\t\tif(jmUtils.checkPercent(local.center.x)) {\r\n\t\t\t\t\tlocal.center.x = jmUtils.percentToNumber(local.center.x) * parentBounds.width;\r\n\t\t\t\t}\r\n\t\t\t\tif(jmUtils.checkPercent(local.center.y)) {\r\n\t\t\t\t\tlocal.center.y = jmUtils.percentToNumber(local.center.y) * parentBounds.height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(local.radius) {\r\n\t\t\t\t//处理百分比参数\r\n\t\t\t\tif(jmUtils.checkPercent(local.radius)) {\r\n\t\t\t\t\tlocal.radius = jmUtils.percentToNumber(local.radius) * Math.min(parentBounds.width, parentBounds.height);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn local;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前控制的旋转信息\r\n\t * @returns {object} 旋转中心和角度\r\n\t */\r\n\tgetRotation(rotation, bounds = null) {\r\n\t\trotation = rotation || jmUtils.clone(this.style.rotation);\r\n\r\n\t\tif(!rotation) {\r\n\t\t\t//如果本身没有，则可以继承父级的\r\n\t\t\trotation = this.parent && this.parent.getRotation?this.parent.getRotation():null;\r\n\t\t\t//如果父级有旋转，则把坐标转换为当前控件区域\r\n\t\t\tif(rotation) {\r\n\t\t\t\tbounds = bounds || this.getBounds();\r\n\t\t\t\trotation.x -= bounds.left;\r\n\t\t\t\trotation.y -= bounds.top;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbounds = bounds || this.getBounds();\r\n\t\t\tif(typeof rotation.x === 'undefined') rotation.x = '50%';\r\n\t\t\tif(typeof rotation.y === 'undefined') rotation.y = '50%';\r\n\t\t\tif(jmUtils.checkPercent(rotation.x)) {\r\n\t\t\t\trotation.x  = jmUtils.percentToNumber(rotation.x) * bounds.width;\r\n\t\t\t}\r\n\t\t\tif(jmUtils.checkPercent(rotation.y)) {\r\n\t\t\t\trotation.y  = jmUtils.percentToNumber(rotation.y) * bounds.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t...rotation,\r\n\t\t\tbounds\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// 计算位移偏移量\r\n\tgetTranslate(translate, bounds = null) {\r\n\t\ttranslate = translate || this.style.translate;\r\n\t\tif(!translate) return {x: 0, y: 0};\r\n\t\tconst result = {\r\n\t\t\tx: translate.x || 0,\r\n\t\t\ty: translate.y || 0\r\n\t\t}\r\n\t\t\r\n\t\tif(jmUtils.checkPercent(result.x)) {\r\n\t\t\tif(!bounds && this.parent) bounds = this.parent.getBounds();\r\n\t\t\tresult.x  = jmUtils.percentToNumber(result.x) * bounds.width;\r\n\t\t}\r\n\t\tif(jmUtils.checkPercent(result.y)) {\r\n\t\t\tif(!bounds && this.parent) bounds = this.parent.getBounds();\r\n\t\t\tresult.y  = jmUtils.percentToNumber(result.y) * bounds.height;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * 移除当前控件\r\n\t * 如果是VML元素，则调用其删除元素\r\n\t *\r\n\t * @method remove \r\n\t */\r\n\tremove() {\t\r\n\t\tif(this.parent) {\r\n\t\t\tthis.parent.children.remove(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 对控件进行平移\r\n\t * 遍历控件所有描点或位置，设置其偏移量。\r\n\t *\r\n\t * @method offset\r\n\t * @param {number} x x轴偏移量\r\n\t * @param {number} y y轴偏移量\r\n\t * @param {boolean} [trans] 是否传递,监听者可以通过此属性是否决定是否响应移动事件,默认=true\r\n\t * @param {object} [evt] 如果是事件触发，则传递move事件参数\r\n\t */\r\n\toffset(x, y, trans, evt) {\r\n\t\ttrans = trans === false?false:true;\t\r\n\t\tlet local = this.getLocation(true);\t\t\r\n\t\tlet offseted = false;\r\n\t\t\r\n\t\tif(local.position) {\r\n\t\t\tlocal.left += x;\r\n\t\t\tlocal.top += y;\r\n\t\t\t// 由于local是clone出来的对象，为了保留位移，则要修改原属性\r\n\t\t\tthis.position.x = local.left;\r\n\t\t\tthis.position.y = local.top;\r\n\t\t\toffseted = true;\r\n\t\t}\r\n\r\n\t\tif(local.center) {\t\t\r\n\t\t\tthis.center.x = local.center.x + x;\r\n\t\t\tthis.center.y = local.center.y + y;\r\n\t\t\toffseted = true;\r\n\t\t}\r\n\r\n\t\tif(local.start && typeof local.start == 'object') {\t\r\n\t\t\tthis.start.x = local.start.x + x;\r\n\t\t\tthis.start.y = local.start.y + y;\r\n\t\t\toffseted = true;\r\n\t\t}\r\n\r\n\t\tif(local.end && typeof local.end == 'object') {\t\t\r\n\t\t\tthis.end.x = local.end.x + x;\r\n\t\t\tthis.end.y = local.end.y + y;\r\n\t\t\toffseted = true;\r\n\t\t}\r\n\r\n\r\n\t\tif(offseted == false && this.cpoints) {\r\n\t\t\tlet p = typeof this.cpoints == 'function'?this.cpoints:this.cpoints;\r\n\t\t\tif(p) {\t\t\t\r\n\t\t\t\tlet len = p.length;\r\n\t\t\t\tfor(let i=0; i < len;i++) {\r\n\t\t\t\t\tp[i].x += x;\r\n\t\t\t\t\tp[i].y += y;\r\n\t\t\t\t}\t\t\r\n\t\t\t\toffseted = true;\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif(offseted == false && this.points) {\r\n\t\t\tlet len = this.points.length;\r\n\t\t\tfor(let i=0; i < len;i++) {\r\n\t\t\t\tthis.points[i].x += x;\r\n\t\t\t\tthis.points[i].y += y;\r\n\t\t\t}\r\n\t\t\toffseted = true;\r\n\t\t}\r\n\t\t\r\n\t\t//触发控件移动事件\t\r\n\t\tthis.emit('move',{\r\n\t\t\toffsetX: x,\r\n\t\t\toffsetY: y,\r\n\t\t\ttrans: trans,\r\n\t\t\tevt: evt\r\n\t\t});\r\n\r\n\t\tthis.needUpdate = true;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取控件相对于画布的绝对边界，\r\n\t * 与getBounds不同的是：getBounds获取的是相对于父容器的边界.\r\n\t *\r\n\t * @method getAbsoluteBounds\r\n\t * @return {object} 边界对象(left,top,right,bottom,width,height)\r\n\t */\r\n\tgetAbsoluteBounds() {\r\n\t\t//当前控件的边界，\r\n\t\tlet rec = this.getBounds();\r\n\t\tif(this.parent && this.parent.absoluteBounds) {\r\n\t\t\t//父容器的绝对边界\r\n\t\t\tlet prec = this.parent.absoluteBounds || this.parent.getAbsoluteBounds();\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\tleft : prec.left + rec.left,\r\n\t\t\t\ttop : prec.top + rec.top,\r\n\t\t\t\tright : prec.left + rec.right,\r\n\t\t\t\tbottom : prec.top + rec.bottom,\r\n\t\t\t\twidth : rec.width,\r\n\t\t\t\theight : rec.height\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn rec;\r\n\t}\r\n\r\n\t/**\r\n\t * 把当前控制内部坐标转为canvas绝对定位坐标\r\n\t * \r\n\t * @method toAbsolutePoint\r\n\t * @param {x: number, y: number} 内部坐标\r\n\t */\r\n\ttoAbsolutePoint(point) {\r\n\t\tif(point.x || point.y) {\r\n\t\t\tconst bounds = this.absoluteBounds?this.absoluteBounds:this.getAbsoluteBounds();\r\n\t\t\t\r\n\t\t\tpoint.x = (point.x||0) + bounds.left;\r\n\t\t\tpoint.y = (point.y||0) + bounds.top;\t\r\n\t\t}\r\n\t\treturn point;\r\n\t}\r\n\r\n\t/**\r\n\t * 把绝对定位坐标转为当前控件坐标系内\r\n\t * @param {*} point \r\n\t */\r\n\ttoLocalPosition(point) {\r\n\t\t\r\n\t\tconst bounds = this.absoluteBounds?this.absoluteBounds:this.getAbsoluteBounds();\r\n\t\tif(!bounds) return false;\t\r\n\t\treturn { \r\n\t\t\tx: point.x - bounds.left,\r\n\t\t\ty: point.y - bounds.top\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * 画控件前初始化\r\n\t * 执行beginPath开始控件的绘制\r\n\t * \r\n\t * @method beginDraw\r\n\t */\r\n\tbeginDraw() {\t\r\n\t\tthis.getLocation(true);//重置位置信息\r\n\t\tthis.context.beginPath && this.context.beginPath();\t\t\r\n\t\tif(this.webglControl && this.webglControl.beginDraw) this.webglControl.beginDraw();\r\n\t}\r\n\r\n\t/**\r\n\t * 结束控件绘制\r\n\t *\r\n\t * @method endDraw\r\n\t */\r\n\tendDraw() {\r\n\t\t//如果当前为封闭路径\r\n\t\tif(this.style.close) {\r\n\t\t\tif(this.webglControl) this.webglControl.closePath();\r\n\t\t\tthis.context.closePath && this.context.closePath();\r\n\t\t}\r\n\t\t\r\n\t\tconst fill = this.style['fill'] || this.style['fillStyle'];\r\n\t\tif(fill) {\r\n\t\t\tif(this.webglControl) {\r\n\t\t\t\tconst bounds = this.getBounds();\r\n\t\t\t\tthis.webglControl.fill(bounds);\r\n\t\t\t}\r\n\t\t\tthis.context.fill && this.context.fill();\r\n\t\t}\r\n\t\tif(this.style['stroke'] || (!fill && !this.is('jmGraph'))) {\r\n\t\t\tif(this.webglControl) this.webglControl.stroke();\r\n\t\t\tthis.context.stroke && this.context.stroke();\r\n\t\t}\r\n\r\n\t\tif(this.webglControl && this.webglControl.endDraw) this.webglControl.endDraw();\r\n\r\n\t\tthis.needUpdate = false;\r\n\t}\r\n\r\n\t/**\r\n\t * 绘制控件\r\n\t * 在画布上描点\r\n\t * \r\n\t * @method draw\r\n\t */\r\n\tdraw() {\t\r\n\t\tif(this.points && this.points.length > 0) {\r\n\t\t\t//获取当前控件的绝对位置\r\n\t\t\tconst bounds = this.parent && this.parent.absoluteBounds?this.parent.absoluteBounds:this.absoluteBounds;\r\n\t\t\tif(this.webglControl) {\r\n\t\t\t\tthis.webglControl.setParentBounds(bounds);\r\n\t\t\t\tthis.webglControl.draw([\r\n\t\t\t\t\t...this.points\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t\telse if(this.context && this.context.moveTo) {\r\n\t\t\t\tthis.context.moveTo(this.points[0].x + bounds.left,this.points[0].y + bounds.top);\r\n\t\t\t\tlet len = this.points.length;\t\t\t\r\n\t\t\t\tfor(let i=1; i < len;i++) {\r\n\t\t\t\t\tlet p = this.points[i];\r\n\t\t\t\t\t//移至当前坐标\r\n\t\t\t\t\tif(p.m) {\r\n\t\t\t\t\t\tthis.context.moveTo(p.x + bounds.left,p.y + bounds.top);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.context.lineTo(p.x+ bounds.left,p.y + bounds.top);\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t}\t\r\n\t\t\t}\t\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * 绘制当前控件\r\n\t * 协调控件的绘制，先从其子控件开始绘制，再往上冒。\r\n\t *\r\n\t * @method paint\r\n\t */\r\n\tpaint(v) {\r\n\t\tif(v !== false && this.visible !== false) {\t\t\r\n\t\t\tif(this.initPoints) this.initPoints();\r\n\t\t\t//计算当前边界\r\n\t\t\tthis.bounds = null;\r\n\t\t\tthis.absoluteBounds = this.getAbsoluteBounds();\r\n\t\t\tlet needDraw = true;//是否需要绘制\r\n\t\t\tif(!this.is('jmGraph') && this.graph) {\r\n\t\t\t\tif(this.absoluteBounds.left >= this.graph.width) needDraw = false;\r\n\t\t\t\telse if(this.absoluteBounds.top >= this.graph.height) needDraw = false;\r\n\t\t\t\telse if(this.absoluteBounds.right <= 0) needDraw = false;\r\n\t\t\t\telse if(this.absoluteBounds.bottom <= 0) needDraw = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.context.save && this.context.save();\r\n\r\n\t\t\tthis.emit('beginDraw', this);\r\n\t\t\t\r\n\t\t\tthis.setStyle();//设定样式\r\n\r\n\t\t\tif(needDraw && this.beginDraw) this.beginDraw();\r\n\t\t\tif(needDraw && this.draw) this.draw();\t\r\n\t\t\tif(needDraw && this.endDraw) this.endDraw();\r\n\r\n\t\t\tif(this.children) {\r\n\t\t\t\tthis.children.each(function(i,item) {\r\n\t\t\t\t\tif(item && item.paint) item.paint();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.emit('endDraw',this);\t\r\n\t\t\tthis.context.restore && this.context.restore();\r\n\t\t\t\r\n\t\t\tthis.needUpdate = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取指定事件的集合\r\n\t * 比如mousedown,mouseup等\r\n\t *\r\n\t * @method getEvent\r\n\t * @param {string} name 事件名称\r\n\t * @return {list} 事件委托的集合\r\n\t */\r\n\tgetEvent(name) {\t\t\r\n\t\treturn this.__events?this.__events[name]:null;\r\n\t}\r\n\r\n\t/**\r\n\t * 绑定控件的事件\r\n\t *\r\n\t * @method bind\r\n\t * @param {string} name 事件名称\r\n\t * @param {function} handle 事件委托\r\n\t */\r\n\tbind(name, handle) {\t\r\n\t\tif(name && name.indexOf(' ') > -1) {\r\n\t\t\tname = name.split(' ');\r\n\t\t\tfor(let n of name) {\r\n\t\t\t\tn && this.bind(n, handle);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\t\r\n\t\t/**\r\n\t\t * 添加事件的集合\r\n\t\t *\r\n\t\t * @method _setEvent\r\n\t\t * @private\r\n\t\t */\r\n\t\tfunction _setEvent(name, events) {\r\n\t\t\tif(!this.__events) this.__events = {};\r\n\t\t\treturn this.__events[name] = events;\r\n\t\t}\r\n\t\tlet eventCollection = this.getEvent(name) || _setEvent.call(this, name, new jmList());\r\n\t\tif(!eventCollection.contain(handle)) {\r\n\t\t\teventCollection.add(handle);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 移除控件的事件\r\n\t *\r\n\t * @method unbind \r\n\t * @param {string} name 事件名称\r\n\t * @param {function} handle 从控件中移除事件的委托\r\n\t */\r\n\tunbind(name, handle) {\t\r\n\t\tif(name && name.indexOf(' ') > -1) {\r\n\t\t\tname = name.split(' ');\r\n\t\t\tfor(let n of name) {\r\n\t\t\t\tn && this.unbind(n, handle);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\t\r\n\t\tlet eventCollection = this.getEvent(name) ;\t\t\r\n\t\tif(eventCollection) {\r\n\t\t\tif(handle) eventCollection.remove(handle);\r\n\t\t\telse eventCollection.clear();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 执行监听回调\r\n\t * \r\n\t * @method emit\r\n\t * @for jmControl\r\n\t * @param {string} name 触发事件的名称\r\n\t * @param {array} args 事件参数数组\r\n\t */\r\n\temit(...args) {\t\t\t\r\n\t\tthis.runEventHandle(args[0], args.slice(1));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * 独立执行事件委托\r\n\t *\r\n\t * @method runEventHandle\r\n\t * @param {string} 将执行的事件名称\r\n\t * @param {object} 事件执行的参数，包括触发事件的对象和位置\r\n\t */\r\n\trunEventHandle(name, args) {\r\n\t\tlet events = this.getEvent(name);\t\t\r\n\t\tif(events) {\r\n\t\t\tvar self = this;\r\n\t\t\tif(!Array.isArray(args)) args = [args];\t\r\n\t\t\tevents.each(function(i, handle) {\r\n\t\t\t\t//只要有一个事件被阻止，则不再处理同级事件，并设置冒泡被阻断\r\n\t\t\t\tif(false === handle.apply(self, args)) {\r\n\t\t\t\t\targs.cancel = true;\r\n\t\t\t\t}\r\n\t\t\t});\t\t\r\n\t\t}\t\r\n\t\treturn args.cancel;\r\n\t}\r\n\r\n\t/**\r\n\t * 检 查坐标是否落在当前控件区域中..true=在区域内\r\n\t *\r\n\t * @method checkPoint\r\n\t * @param {point} p 位置参数\r\n\t * @param {number} [pad] 可选参数，表示线条多远内都算在线上\r\n\t * @return {boolean} 当前位置如果在区域内则为true,否则为false。\r\n\t */\r\n\tcheckPoint(p, pad) {\r\n\t\t//jmGraph 需要判断dom位置\r\n\t\tif(this.type == 'jmGraph') {\r\n\t\t\t//获取dom位置\r\n\t\t\tlet position = this.getPosition();\r\n\t\t\t// 由于高清屏会有放大坐标，所以这里用pagex就只能用真实的canvas大小\r\n\t\t\tconst right = position.left + this.width;\r\n\t\t\tconst bottom = position.top + this.height;\r\n\t\t\tif(p.pageX > right || p.pageX < position.left) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(p.pageY > bottom || p.pageY < position.top) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\t\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\tconst bounds = this.getBounds();\t\r\n\t\t\r\n\t\tlet ps = this.points;\r\n\t\t//如果不是路径组成，则采用边界做为顶点\r\n\t\tif(!ps || !ps.length) {\r\n\t\t\tps = [];\r\n\t\t\tps.push({x: bounds.left, y: bounds.top}); //左上角\r\n\t\t\tps.push({x: bounds.right, y: bounds.top});//右上角\r\n\t\t\tps.push({x: bounds.right, y: bounds.bottom});//右下角\r\n\t\t\tps.push({x: bounds.left, y: bounds.bottom}); //左下\r\n\t\t\tps.push({x: bounds.left, y: bounds.top}); //左上角   //闭合\r\n\t\t}\r\n\t\t//如果有指定padding 表示接受区域加宽，命中更易\r\n\t\tpad = Number(pad || this.style['touchPadding'] || this.style['lineWidth'] || 1);\r\n\t\tif(ps && ps.length) {\r\n\t\t\tconst rotation = this.getRotation(null, bounds);//获取当前旋转参数\r\n\t\t\t//如果有旋转参数，则需要转换坐标再处理\r\n\t\t\tif(rotation && rotation.angle) {\r\n\t\t\t\tps = jmUtils.clone(ps, true);//拷贝一份数据\r\n\t\t\t\t//rotateX ,rotateY 是相对当前控件的位置\r\n\t\t\t\tps = jmUtils.rotatePoints(ps, {\r\n\t\t\t\t\tx: rotation.x + bounds.left,\r\n\t\t\t\t\ty: rotation.y + bounds.top\r\n\t\t\t\t}, rotation.angle || 0);\r\n\t\t\t}\r\n\t\t\t//如果当前路径不是实心的\r\n\t\t\t//就只用判断点是否在边上即可\t\r\n\t\t\tif(ps.length > 2 && (!this.style['fill'] || this.style['stroke'])) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tconst count = ps.length;\r\n\t\t\t\tfor(let j = i+1; j <= count; j = (++i + 1)) {\r\n\t\t\t\t\t//如果j超出最后一个\r\n\t\t\t\t\t//则当为封闭图形时跟第一点连线处理.否则直接返回false\r\n\t\t\t\t\tif(j == count) {\r\n\t\t\t\t\t\tif(this.style.close) {\r\n\t\t\t\t\t\t\tconst r = jmUtils.pointInPolygon(p,[ps[i],ps[0]], pad);\r\n\t\t\t\t\t\t\tif(r) return true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} \r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t//判断是否在点i,j连成的线上\r\n\t\t\t\t\t\tconst s = jmUtils.pointInPolygon(p,[ps[i],ps[j]], pad);\r\n\t\t\t\t\t\tif(s) return true;\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t//不是封闭的图形，则直接返回\r\n\t\t\t\tif(!this.style['fill']) return false;\r\n\t\t\t}\r\n\r\n\t\t\tconst r = jmUtils.pointInPolygon(p,ps, pad);\t\t\r\n\t\t\treturn r;\r\n\t\t}\r\n\r\n\t\tif(p.x > bounds.right || p.x < bounds.left) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(p.y > bounds.bottom || p.y < bounds.top) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 触发控件事件，组合参数并按控件层级关系执行事件冒泡。\r\n\t *\r\n\t * @method raiseEvent\r\n\t * @param {string} name 事件名称\r\n\t * @param {object} args 事件执行参数\r\n\t * @return {boolean} 如果事件被组止冒泡则返回false,否则返回true\r\n\t */\r\n\traiseEvent(name, args) {\r\n\t\tif(this.visible === false) return ;//如果不显示则不响应事件\t\r\n\t\tif(!args.position) {\t\t\r\n\t\t\tconst graph = this.graph;\r\n\t\t\targs.isWXMiniApp = graph.isWXMiniApp;\r\n\r\n\t\t\tconst srcElement = args.srcElement || args.target;\t\t\t\r\n\t\t\t\r\n\t\t\tconst position = jmUtils.getEventPosition(args);//初始化事件位置\r\n\t\t\r\n\t\t\targs = {\r\n\t\t\t\tposition: position,\r\n\t\t\t\tbutton: args.button == 0 || position.isTouch? 1: args.button,\r\n\t\t\t\tkeyCode: args.keyCode || args.charCode || args.which,\r\n\t\t\t\tctrlKey: args.ctrlKey,\r\n\t\t\t\tcancel : false,\r\n\t\t\t\tevent: args, // 原生事件\r\n\t\t\t\tsrcElement : srcElement,\r\n\t\t\t\tisWXMiniApp: graph.isWXMiniApp,\r\n\t\t\t};\t\t\r\n\t\t}\r\n\t\targs.path = args.path||[]; //事件冒泡路径\r\n\r\n\t\t//先执行子元素事件，如果事件没有被阻断，则向上冒泡\r\n\t\tlet stoped = false;\r\n\t\tif(this.children) {\r\n\t\t\tthis.children.each(function(j, el) {\r\n\t\t\t\t//未被阻止才执行\t\t\t\r\n\t\t\t\tif(args.cancel !== true) {\r\n\t\t\t\t\t//如果被阻止冒泡，\r\n\t\t\t\t\tstoped = el.raiseEvent(name, args) === false? true: stoped;\r\n\t\t\t\t\t// 不再响应其它元素\r\n\t\t\t\t\tif(stoped) return false;\r\n\t\t\t\t}\r\n\t\t\t}, true);//按逆序处理\r\n\t\t}\r\n\t\t// 如果已被阻止，不再响应上级事件\r\n\t\tif(stoped) return false;\r\n\t\t\r\n\t\t//获取当前对象的父元素绝对位置\r\n\t\t//生成当前坐标对应的父级元素的相对位置\r\n\t\tlet abounds = this.parent && this.parent.absoluteBounds?this.parent.absoluteBounds : this.absoluteBounds;\r\n\t\tif(!abounds) return false;\t\r\n\t\t//args = jmUtils.clone(args);//参数副本\r\n\t\targs.position.x = args.position.offsetX - abounds.left;\r\n\t\targs.position.y = args.position.offsetY - abounds.top;\r\n\r\n\t\t// 是否在当前控件内操作\r\n\t\tconst inpos = this.interactive !== false && this.checkPoint(args.position);\r\n\t\t\r\n\t\t//事件发生在边界内或健盘事件发生在画布中才触发\r\n\t\tif(inpos) {\r\n\t\t\t//如果没有指定触发对象，则认为当前为第一触发对象\r\n\t\t\tif(!args.target) {\r\n\t\t\t\targs.target = this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.runEventAndPopEvent(name, args);\r\n\r\n\t\t\tif(!this.focused && (name === 'mousemove' || name === 'touchmove')) {\r\n\t\t\t\tthis.focused = true;//表明当前焦点在此控件中\r\n\t\t\t\tthis.raiseEvent(name === 'mousemove'? 'mouseover': 'touchover', args);\r\n\t\t\t}\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//如果焦点不在，且原焦点在，则触发mouseleave事件\r\n\t\t\tif(this.interactive !== false && !inpos &&\r\n\t\t\t\tthis.focused && \r\n\t\t\t\t(name === 'mousemove' || name === 'touchmove')) {\r\n\r\n\t\t\t\tthis.focused = false;//表明当前焦点离开\r\n\t\t\t\tthis.runEventHandle(name === 'mousemove'? 'mouseleave' : 'touchleave', args);//执行事件\t\r\n\t\t\t}\t\r\n\t\t}\r\n\t\t\t\r\n\t\treturn args.cancel === false;//如果被阻止则返回false,否则返回true\r\n\t}\r\n\r\n\t/**\r\n\t * 执行事件，并进行冒泡\r\n\t * @param {string} name 事件名称 \r\n\t * @param {object} args 事件参数\r\n\t */\r\n\trunEventAndPopEvent(name, args) {\t\r\n\r\n\t\tif(args.cancel !== true) {\r\n\t\t\t// 添加到触发路径\r\n\t\t\targs.path.push(this);\r\n\r\n\t\t\t//如果返回true则阻断冒泡\r\n\t\t\tthis.runEventHandle(name, args);//执行事件\r\n\r\n\t\t\t// // 向父节点冒泡事件\t\t\r\n\t\t\t// if(args.cancel !== true && this.parent && this.parent.runEventAndPopEvent) {\r\n\t\t\t// \t// 相对位置需要改为父节点的\r\n\t\t\t// \tif(args.position) {\r\n\t\t\t// \t\tlet bounds = this.parent.getBounds();\r\n\t\t\t// \t\targs.position.x += bounds.left;\r\n\t\t\t// \t\targs.position.y += bounds.top;\r\n\t\t\t// \t}\r\n\t\t\t// \tthis.parent.runEventAndPopEvent(name, args);\r\n\t\t\t// }\t\t\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 清空控件指定事件\r\n\t *\r\n\t * @method clearEvents\r\n\t * @param {string} name 需要清除的事件名称\r\n\t */\r\n\tclearEvents(name) {\r\n\t\tvar eventCollection = this.getEvent(name) ;\t\t\r\n\t\tif(eventCollection) {\r\n\t\t\teventCollection.clear;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 查找其父级类型为type的元素，直到找到指定的对象或到最顶级控件后返回空。\r\n\t *\r\n\t * @method findParent \r\n\t * @param {object} 类型名称或类型对象\r\n\t * @return {object} 指定类型的实例\r\n\t */\r\n\tfindParent(type) {\r\n\t\t//如果为类型名称，则返回名称相同的类型对象\r\n\t\tif(typeof type === 'string') {\r\n\t\t\tif(this.type == type)\r\n\t\t\t\treturn this;\r\n\t\t}\r\n\t\telse if(this.is(type)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif(this.parent) {\r\n\t\t\treturn this.parent.findParent(type);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * 设定是否可以移动\r\n\t * 此方法需指定jmgraph或在控件添加到jmgraph后再调用才能生效。\r\n\t *\r\n\t * @method canMove\r\n\t * @param {boolean} m true=可以移动，false=不可移动或清除移动。\r\n\t * @param {jmGraph} [graph] 当前画布，如果为空的话必需是已加入画布的控件，否则得指定画布。\r\n\t */\r\n\tcanMove(m, graph) {\r\n\t\tif(!this.__mvMonitor) {\r\n\t\t\t/**\r\n\t\t\t * 控制控件移动对象\r\n\t\t\t * \r\n\t\t\t * @property __mvMonitor\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis.__mvMonitor = {};\r\n\t\t\tthis.__mvMonitor.mouseDown = false;\r\n\t\t\tthis.__mvMonitor.curposition={x:0,y:0};\r\n\t\t\tvar self = this;\r\n\t\t\t/**\r\n\t\t\t * 控件移动鼠标事件\r\n\t\t\t *\r\n\t\t\t * @method mv\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis.__mvMonitor.mv = function(evt) {\r\n\t\t\t\tlet _this = self;\r\n\t\t\t\t//如果鼠标经过当前可移动控件，则显示可移动指针\r\n\t\t\t\t//if(evt.path && evt.path.indexOf(_this)>-1) {\r\n\t\t\t\t//\t_this.cursor('move');\t\r\n\t\t\t\t//}\r\n\r\n\t\t\t\tif(_this.__mvMonitor.mouseDown) {\r\n\t\t\t\t\t_this.parent.bounds = null;\r\n\t\t\t\t\tlet parentbounds = _this.parent.getAbsoluteBounds();\t\t\r\n\t\t\t\t\tlet offsetx = evt.position.offsetX - _this.__mvMonitor.curposition.x;\r\n\t\t\t\t\tlet offsety = evt.position.offsetY - _this.__mvMonitor.curposition.y;\t\t\t\t\r\n\t\t\t\t\t//console.log(offsetx + ',' + offsety);\r\n\t\t\t\t\t//如果锁定边界\r\n\t\t\t\t\tif(_this.lockSide) {\r\n\t\t\t\t\t\tlet thisbounds = _this.bounds || _this.getAbsoluteBounds();\t\t\t\t\t\r\n\t\t\t\t\t\t//检查边界出界\r\n\t\t\t\t\t\tlet outside = jmUtils.checkOutSide(parentbounds,thisbounds,{x:offsetx,y:offsety});\r\n\t\t\t\t\t\tif(outside.left < 0) {\r\n\t\t\t\t\t\t\tif(_this.lockSide.left) offsetx -= outside.left;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(outside.right > 0) {\r\n\t\t\t\t\t\t\tif(_this.lockSide.right) offsetx -= outside.right;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(outside.top < 0) {\r\n\t\t\t\t\t\t\tif(_this.lockSide.top) offsety -= outside.top;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(outside.bottom > 0) {\r\n\t\t\t\t\t\t\tif(_this.lockSide.bottom) offsety -= outside.bottom;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(offsetx || offsety) {\r\n\t\t\t\t\t\t_this.offset(offsetx, offsety, true, evt);\r\n\t\t\t\t\t\t_this.__mvMonitor.curposition.x = evt.position.offsetX;\r\n\t\t\t\t\t\t_this.__mvMonitor.curposition.y = evt.position.offsetY;\t\r\n\t\t\t\t\t\t//console.log(offsetx + '.' + offsety);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 控件移动鼠标松开事件\r\n\t\t\t *\r\n\t\t\t * @method mu\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis.__mvMonitor.mu = function(evt) {\r\n\t\t\t\tlet _this = self;\r\n\t\t\t\tif(_this.__mvMonitor.mouseDown) {\r\n\t\t\t\t\t_this.__mvMonitor.mouseDown = false;\r\n\t\t\t\t\t//_this.cursor('default');\r\n\t\t\t\t\t_this.emit('moveend',{position:_this.__mvMonitor.curposition});\t\r\n\t\t\t\t\t//return false;\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 控件移动鼠标离开事件\r\n\t\t\t *\r\n\t\t\t * @method ml\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis.__mvMonitor.ml = function() {\r\n\t\t\t\tlet _this = self;\r\n\t\t\t\tif(_this.__mvMonitor.mouseDown) {\r\n\t\t\t\t\t_this.__mvMonitor.mouseDown = false;\r\n\t\t\t\t\t//_this.cursor('default');\t\r\n\t\t\t\t\t_this.emit('moveend',{position:_this.__mvMonitor.curposition});\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 控件移动鼠标按下事件\r\n\t\t\t *\r\n\t\t\t * @method md\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis.__mvMonitor.md = function(evt) {\r\n\t\t\t\t\r\n\t\t\t\tif(this.__mvMonitor.mouseDown) return;\r\n\t\t\t\tif(evt.button == 0 || evt.button == 1) {\r\n\t\t\t\t\tthis.__mvMonitor.mouseDown = true;\r\n\t\t\t\t\t//this.cursor('move');\r\n\t\t\t\t\t//var parentbounds = this.parent.absoluteBounds || this.parent.getAbsoluteBounds();\t\r\n\t\t\t\t\tthis.__mvMonitor.curposition.x = evt.position.offsetX;//evt.position.x + parentbounds.left;\r\n\t\t\t\t\tthis.__mvMonitor.curposition.y = evt.position.offsetY;//evt.position.y + parentbounds.top;\r\n\t\t\t\t\t//触发控件移动事件\r\n\t\t\t\t\tthis.emit('movestart',{position:this.__mvMonitor.curposition});\r\n\t\t\t\t\t\r\n\t\t\t\t\tevt.cancel = true;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tgraph = graph || this.graph ;//获取最顶级元素画布\r\n\t\t\r\n\t\tif(m !== false) {\t\t\t\r\n\t\t\tgraph.bind('mousemove',this.__mvMonitor.mv);\r\n\t\t\tgraph.bind('mouseup',this.__mvMonitor.mu);\r\n\t\t\tgraph.bind('mouseleave',this.__mvMonitor.ml);\r\n\t\t\tthis.bind('mousedown',this.__mvMonitor.md);\r\n\t\t\tgraph.bind('touchmove',this.__mvMonitor.mv);\r\n\t\t\tgraph.bind('touchend',this.__mvMonitor.mu);\r\n\t\t\tthis.bind('touchstart',this.__mvMonitor.md);\r\n\t\t}\r\n\t\telse {\t\t\t\r\n\t\t\tgraph.unbind('mousemove',this.__mvMonitor.mv);\r\n\t\t\tgraph.unbind('mouseup',this.__mvMonitor.mu);\r\n\t\t\tgraph.unbind('mouseleave',this.__mvMonitor.ml);\r\n\t\t\tthis.unbind('mousedown',this.__mvMonitor.md);\r\n\t\t\tgraph.unbind('touchmove',this.__mvMonitor.mv);\r\n\t\t\tgraph.unbind('touchend',this.__mvMonitor.mu);\r\n\t\t\tthis.unbind('touchstart',this.__mvMonitor.md);\t\r\n\t\t}\r\n\r\n\t\tthis.interactive = true;// 如果可以移动，则响应事件\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\nexport { jmControl };","import {jmControl} from \"./jmControl.js\";\r\n/**\r\n * 基础路径,大部分图型的基类\r\n * 指定一系列点，画出图形\r\n *\r\n * @class jmPath\r\n * @extends jmControl\r\n * @param {object} params 路径参数 points=所有描点\r\n */\r\n\r\nexport default class jmPath extends jmControl {\t\r\n\r\n\tconstructor(params, t='jmPath') {\r\n\t\tsuper(params, t);\t\t\r\n\t\tthis.points = params && params.points ? params.points : [];\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * 描点集合\r\n\t * point格式：{x:0,y:0,m:true}\r\n\t * @property points\r\n\t * @type {array}\r\n\t */\r\n\tget points() {\r\n\t\tlet s = this.property('points');\r\n\t\treturn s;\r\n\t}\r\n\tset points(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.property('points', v);\r\n\t}\t\r\n\t\r\n}\r\n\r\nexport { jmPath };\r\n","import {jmUtils} from \"./jmUtils.js\";\r\nimport {jmList} from \"./jmList.js\";\r\nimport {jmProperty} from './jmProperty.js';\r\nimport {jmShadow} from \"./jmShadow.js\";\r\nimport {jmGradient} from \"./jmGradient.js\";\r\nimport {jmEvents} from \"./jmEvents.js\";\r\nimport {jmControl} from \"./jmControl.js\";\r\nimport {jmPath} from \"./jmPath.js\";\r\n\r\n/**\r\n * jmGraph画图类库\r\n * 对canvas画图api进行二次封装，使其更易调用，省去很多重复的工作。\r\n *\r\n * @module jmGraph\r\n * @class jmGraph\r\n * @extends jmControl\r\n * @param {element} canvas 标签canvas\r\n * @param {object} option 参数：{width:宽,height:高}\r\n * @param {function} callback 初始化后的回调\r\n */\r\nexport default class jmGraph extends jmControl {\r\n\r\n\tconstructor(canvas, option, callback) {\r\n\t\tif(typeof option == 'function') {\r\n\t\t\tcallback = option;\r\n\t\t\toption = {};\r\n\t\t}\r\n\t\r\n\t\toption = option || {};\r\n\t\t//option.mode = '2d'; // webgl | 2d 暂不支持webgl\r\n\t\toption.interactive = true;\r\n\t\toption.isRegular = true;// 规则的\r\n\r\n\t\tsuper(option, 'jmGraph');\r\n\r\n\t\tthis.option = option || {};\r\n\t\t\r\n\t\tthis.devicePixelRatio = 1; // 根据屏幕的缩放倍数\r\n\r\n\t\t/**\r\n\t\t * 工具类\r\n\t\t * @property utils/util\r\n\t\t * @type {jmUtils}\r\n\t\t */\r\n\t\tthis.util = this.utils = jmUtils;\t\r\n\t\t// 模式 webgl | 2d\r\n\t\tthis.mode = option.mode || '2d';\r\n\r\n\t\t//如果是小程序\r\n\t\tif(typeof wx != 'undefined' && wx.canIUse && wx.canIUse('canvas')) {\t\t\t\r\n\t\t\tif(typeof canvas === 'string') canvas = wx.createSelectorQuery().select('#' + canvas);\r\n\t\t\tthis.isWXMiniApp = true;// 微信小程序平台\r\n\t\t\tthis.container = canvas;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif(typeof canvas === 'string' && typeof document != 'undefined') {\r\n\t\t\t\tcanvas = document.getElementById(canvas);\r\n\t\t\t}\r\n\t\t\telse if(canvas.length) {\r\n\t\t\t\tcanvas = canvas[0];\r\n\t\t\t}\r\n\r\n\t\t\tif(!canvas.getContext && typeof document != 'undefined') {\r\n\t\t\t\tthis.container = canvas;\r\n\t\t\t\tlet cn = document.createElement('canvas');\r\n\t\t\t\tcanvas.appendChild(cn);\r\n\t\t\t\tcn.width = canvas.offsetWidth||canvas.clientWidth;\r\n\t\t\t\tcn.height = canvas.offsetHeight||canvas.clientHeight;\r\n\t\t\t\tcanvas = cn;\r\n\t\t\t}\t\r\n\t\t\telse {\r\n\t\t\t\tthis.container = canvas.parentElement;\r\n\t\t\t}\r\n\t\t}\t\r\n\t\tthis.canvas = canvas;\t\r\n\t\tthis.context = canvas.getContext(this.mode);\r\n\r\n\t\tthis.textureCanvas = option.textureCanvas || null;\r\n\t\t\r\n\t\t// webgl模式\r\n\t\tif(this.mode === 'webgl') {\r\n\r\n\t\t\tthis.context.enable(this.context.BLEND);// 开启混合功能：（注意，它不可和gl.DEPTH_TEST一起使用）\r\n\t\t\tthis.context.blendFunc(this.context.SRC_ALPHA, this.context.ONE_MINUS_SRC_ALPHA); // 指定混合函数：\r\n\t\t\t// webglcontextlost webglcontextrestored\r\n\t\t\tjmUtils.bindEvent(canvas, 'webglcontextlost', (e)=> {\r\n\t\t\t\tconsole.log('canvas webglcontextlost', e);\r\n\t\t\t\tthis.emit('webglcontextlost', e);\r\n\t\t\t});\r\n\t\t\tjmUtils.bindEvent(canvas, 'webglcontextrestored', (e)=> {\r\n\t\t\t\tconsole.log('canvas webglcontextrestored', e);\r\n\t\t\t\tthis.emit('webglcontextrestored', e);\r\n\t\t\t});\r\n\t\t} \r\n\t\tthis.__init(callback);\r\n\t}\r\n\r\n\t/**\r\n\t * 初始化画布\r\n\t * @method init\r\n\t */\r\n\t__init(callback) {\r\n\t\t/**\r\n\t\t * 当前所有图形类型\r\n\t\t * @property shapes\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis.shapes = Object.assign({\r\n\t\t\t\"path\": jmPath,\r\n\t\t}, this.option.shapes);\r\n\t\t\r\n\t\t/**\r\n\t\t * 画控件前初始化\r\n\t\t * 为了解决一像素线条问题\r\n\t\t */\r\n\t\tthis.on('beginDraw', function() {\t\r\n\t\t\tthis.context.translate && this.context.translate(0.5, 0.5);\r\n\t\t});\r\n\t\t/**\r\n\t\t * 结束控件绘制 为了解决一像素线条问题\r\n\t\t */\r\n\t\tthis.on('endDraw', function() {\t\r\n\t\t\tthis.context.translate && this.context.translate(-0.5, -0.5);\t\t\r\n\t\t});\r\n\r\n\t\t// devicePixelRatio初始化\r\n\t\tlet dpr = typeof window != 'undefined' && window.devicePixelRatio > 1? window.devicePixelRatio : 1;\r\n\t\tif(this.isWXMiniApp) {\r\n\t\t\tdpr = wx.getWindowInfo().pixelRatio || 1;\r\n\t\t}\t\t\r\n\t\tthis.devicePixelRatio = dpr;\r\n\t\t// 为了解决锯齿问题，先放大canvas再缩放\r\n\t\tthis.dprScaleSize = this.devicePixelRatio > 1? this.devicePixelRatio : 2;\r\n\t\t\r\n\t\tif(this.option.width > 0) this.width = this.option.width;\r\n\t\tif(this.option.height > 0) this.height = this.option.height;\t\r\n\t\tthis.resize();\t\t\r\n\r\n\t\t//绑定事件\r\n\t\tthis.eventHandler = new jmEvents(this, this.canvas.canvas || this.canvas);\t\r\n\r\n\t\t//如果指定了自动刷新\r\n\t\tif(this.option.autoRefresh) {\r\n\t\t\tthis.autoRefresh();\r\n\t\t}\r\n\r\n\t\tif(callback) callback(this);\t\t\r\n\t}\r\n\r\n\t//  重置canvas大小，并判断高清屏，画图先放大二倍\r\n\tresize(w, h) {\r\n\t\tif(!this.canvas) return;\r\n\r\n\t\tthis.__normalSize = this.__normalSize || { width: 0, height: 0};\r\n\t\tw = w || this.__normalSize.width || this.width, h = h || this.__normalSize.height || this.height;\r\n\r\n\t\tif(w) this.__normalSize.width = w;\r\n\t\tif(h) this.__normalSize.height = h;\r\n\t\r\n\t\tthis.css('width', w + \"px\");\r\n\t\tthis.css('height', h + \"px\");\r\n\t\tif(this.mode === '2d') {\r\n\t\t\tthis.canvas.height = h * this.dprScaleSize;\r\n\t\t\tthis.canvas.width = w * this.dprScaleSize;\r\n\t\t\tif(this.dprScaleSize !== 1) this.context.scale && this.context.scale(this.dprScaleSize, this.dprScaleSize);\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.canvas.width = w;\r\n\t\t\tthis.canvas.height = h;\r\n\t\t}\r\n\r\n\t\tthis.context.viewport && this.context.viewport(0, 0, w, h);\r\n\t\tthis.needUpdate = true;\r\n\t}\r\n\r\n\t/**\r\n\t * 宽度\r\n\t * @property width\r\n\t * @type {number}\r\n\t */\r\n\tget width() {\r\n\t\tif(this.__normalSize && this.__normalSize.width) return this.__normalSize.width;\r\n\t\tif(this.canvas) return this.canvas.width;\r\n\t\treturn 0;\r\n\t}\r\n\tset width(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\tif(this.canvas) {\r\n\t\t\tthis.resize(v);\r\n\t\t}\t\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * 高度\r\n\t * @property height\r\n\t * @type {number}\r\n\t */\r\n\tget height() {\r\n\t\tif(this.__normalSize && this.__normalSize.height) return this.__normalSize.height;\r\n\t\tif(this.canvas) return this.canvas.height;\r\n\t\treturn 0;\r\n\t}\r\n\tset height(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\tif(this.canvas) {\r\n\t\t\tthis.resize(0, v);\r\n\t\t}\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * 创建jmGraph的静态对象\r\n\t *\r\n\t * @method create\r\n\t * @return {jmGraph} jmGraph实例对象\r\n\t */\r\n\tstatic create(...args) {\r\n\t\treturn new jmGraph(...args);\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前画布在浏览器中的绝对定位\r\n\t *\r\n\t * @method getPosition\r\n\t * @return {postion} 返回定位坐标\r\n\t */\r\n\tgetPosition() {\r\n\t\tconst p = jmUtils.getElementPosition(this.canvas.canvas || this.canvas);\r\n\t\tp.width = this.width;\r\n\t\tp.height = this.height;\r\n\t\tp.right = p.left + p.width;\r\n\t\tp.bottom = p.top + p.height;\r\n\t\treturn p;\r\n\t}\r\n\r\n\t/**\r\n\t * 注册图形类型,图形类型必需有统一的构造函数。参数为画布句柄和参数对象。\r\n\t *\r\n\t * @method registerShape \r\n\t * @param {string} name 控件图形名称\r\n\t * @param {class} shape 图形控件类型\r\n\t */\r\n\tregisterShape(name, shape) {\r\n\t\tthis.shapes[name] = shape;\r\n\t}\r\n\r\n\t/**\r\n\t * 从已注册的图形类创建图形\r\n\t * 简单直观创建对象\r\n\t *\r\n\t * @method createShape \r\n\t * @param {string} shape 注册控件的名称 也可以直接是控件类型\r\n\t * @param {object} args 实例化控件的参数\r\n\t * @return {object} 已实例化控件的对象\r\n\t */\r\n\tcreateShape(shape, args) {\r\n\t\tif(typeof shape === 'string') {\r\n\t\t\tshape = this.shapes[shape];\r\n\t\t}\r\n\t\tif(shape) {\r\n\t\t\tif(!args) args = {};\r\n\t\t\targs.graph = this;\r\n\t\t\tlet obj = new shape(args);\r\n\t\t\treturn obj;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 生成阴影对象\r\n\t *\r\n\t * @method createShadow\r\n\t * @param {number} x x偏移量\r\n\t * @param {number} y y偏移量\r\n\t * @param {number} blur 模糊值\r\n\t * @param {string} color 颜色\r\n\t * @return {jmShadow} 阴影对象\r\n\t */\r\n\tcreateShadow(x, y, blur, color) {\r\n\t\tconst sh = new jmShadow(x, y, blur, color);\r\n\t\treturn sh;\r\n\t}\r\n\r\n\t/**\r\n\t * 生成线性渐变对象\r\n\t *\r\n\t * @method createLinearGradient\r\n\t * @param {number} x1 线性渐变起始点X坐标\r\n\t * @param {number} y1 线性渐变起始点Y坐标\r\n\t * @param {number} x2 线性渐变结束点X坐标\r\n\t * @param {number} y2 线性渐变结束点Y坐标\r\n\t * @return {jmGradient} 线性渐变对象\r\n\t */\r\n\tcreateLinearGradient(x1, y1, x2, y2, stops=[]) {\r\n\t\tconst gradient = new jmGradient({\r\n\t\t\ttype:'linear',\r\n\t\t\tx1: x1,\r\n\t\t\ty1: y1,\r\n\t\t\tx2: x2,\r\n\t\t\ty2: y2,\r\n\t\t\tstops\r\n\t\t});\r\n\t\treturn gradient;\r\n\t}\r\n\r\n\t/**\r\n\t * 生成放射渐变对象\r\n\t *\r\n\t * @method createRadialGradient\r\n\t * @param {number} x1 放射渐变小圆中心X坐标\r\n\t * @param {number} y1 放射渐变小圆中心Y坐标\r\n\t * @param {number} r1 放射渐变小圆半径\r\n\t * @param {number} x2 放射渐变大圆中心X坐标\r\n\t * @param {number} y2 放射渐变大圆中心Y坐标\r\n\t * @param {number} r2 放射渐变大圆半径\r\n\t * @return {jmGradient} 放射渐变对象\r\n\t */\r\n\tcreateRadialGradient(x1, y1, r1, x2, y2, r2, stops=[]) {\t\r\n\t\tconst gradient = new jmGradient({\r\n\t\t\ttype:'radial',\r\n\t\t\tx1: x1,\r\n\t\t\ty1: y1,\r\n\t\t\tr1: r1,\r\n\t\t\tx2: x2,\r\n\t\t\ty2: y2,\r\n\t\t\tr2: r2,\r\n\t\t\tstops\r\n\t\t});\r\n\t\treturn gradient;\r\n\t}\r\n\r\n\t/**\r\n\t * 重新刷新整个画板\r\n\t * 以加入动画事件触发延时10毫秒刷新，保存最尽的调用只刷新一次，加强性能的效果。\r\n\t *\r\n\t * @method refresh\r\n\t */\r\n\trefresh() {\t\r\n\t\t//加入动画，触发redraw，会导致多次refresh只redraw一次\r\n\t\t/*this.animate(function() {\r\n\t\t\treturn false;\r\n\t\t},100,'jmgraph_refresh');*/\r\n\t\tthis.redraw();\r\n\t}\r\n\r\n\t/**\r\n\t * 重新刷新整个画板\r\n\t * 此方法直接重画，与refresh效果类似\r\n\t *\r\n\t * @method redraw\r\n\t * @param {number} [w] 清除画布的宽度\r\n\t * @param {number} [h] 清除画布的高度\r\n\t */\r\n\tredraw(w, h) {\t\r\n\t\tthis.clear(w||this.width, h||this.height);\r\n\t\tthis.paint();\r\n\t}\r\n\r\n\t/**\r\n\t * 清除画布\r\n\t * \r\n\t * @method clear\r\n\t * @param {number} [w] 清除画布的宽度\r\n\t * @param {number} [h] 清除画布的高度\r\n\t */\r\n\tclear(w, h) {\r\n\t\tif(!w || !h) {\r\n\t\t\tw = this.width;\r\n\t\t\th = this.height;\r\n\t\t\t/*if(this.scaleSize) {\r\n\t\t\t\tw = w / this.scaleSize.x;\r\n\t\t\t\th = h / this.scaleSize.y;\r\n\t\t\t}*/\r\n\t\t}\r\n\t\t\r\n\t\tif(this.context.clearRect) {\r\n\t\t\tif(this.style && this.style.fill) {\r\n\t\t\t\tthis.points = [\r\n\t\t\t\t\t{x:0, y:0},\r\n\t\t\t\t\t{x:w, y:0},\r\n\t\t\t\t\t{x:w, y:h},\r\n\t\t\t\t\t{x:0, y:h}\r\n\t\t\t\t];\r\n\t\t\t\tthis.style.close = true;// 封闭填充\r\n\t\t\t}\r\n\r\n\t\t\tthis.context.clearRect(0, 0, w, h);\r\n\t\t}\r\n\t\telse if(this.mode === 'webgl' && this.context.clear) {\r\n\t\t\tconst color = this.style && this.style.fill? this.utils.hexToRGBA(this.style.fill): {\r\n\t\t\t\tr: 0,\r\n\t\t\t\tg: 0,\r\n\t\t\t\tb: 0,\r\n\t\t\t\ta: 0\r\n\t\t\t};\r\n\t\t\tthis.context.clearColor(color.r, color.g, color.b, color.a); // 设置清空颜色缓冲时的颜色值\r\n        \tthis.context.clear(this.context.COLOR_BUFFER_BIT); // 清空颜色缓冲区，也就是清空画布\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t* 设置画布样式，此处只是设置其css样式\r\n\t*\r\n\t* @method css\r\n\t* @param {string} name 样式名\r\n\t* @param {string} value 样式值\r\n\t*/\r\n\tcss(name, value) {\r\n\t\tif(this.canvas && this.canvas.style) {\r\n\t\t\tif(typeof value != 'undefined') this.canvas.style[name] = value;\r\n\t\t\treturn this.canvas.style[name];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 生成路径对象\r\n\t *\r\n\t * @method createPath\r\n\t * @param {array} points 路径中的描点集合\r\n\t * @param {style} style 当前路径的样式\r\n\t * @return {jmPath} 路径对象jmPath\r\n\t */\r\n\tcreatePath(points, style, option={}) {\r\n\t\tconst path = this.createShape('path',{\r\n\t\t\tpoints: points,\r\n\t\t\tstyle: style,\r\n\t\t\t...option\r\n\t\t});\r\n\t\treturn path;\r\n\t}\r\n\r\n\t/**\r\n\t * 生成直线\r\n\t * \r\n\t * @method createLine\r\n\t * @param {point} start 直线的起点\r\n\t * @param {point} end 直线的终点\r\n\t * @param {style} 直线的样式\r\n\t * @return {jmLine} 直线对象\r\n\t */\r\n\tcreateLine(start, end, style) {\r\n\t\tconst line = this.createShape('line', {\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\t\t\tstyle: style\r\n\t\t});\r\n\t\treturn line;\r\n\t}\r\n\r\n\t/**\r\n\t * 缩小整个画布按比例0.9\r\n\t * \r\n\t * @method zoomOut\r\n\t */\r\n\tzoomOut() {\r\n\t\tthis.scale(0.9 ,0.9);\r\n\t}\r\n\r\n\t/**\r\n\t * 放大 每次增大0.1的比例\r\n\t * \r\n\t * @method zoomIn\r\n\t */\r\n\tzoomIn() {\t\t\r\n\t\tthis.scale(1.1 ,1.1);\r\n\t}\r\n\r\n\t/**\r\n\t * 大小复原\r\n\t * \r\n\t * @method zoomActual\r\n\t */\r\n\tzoomActual() {\r\n\t\tif(this.scaleSize) {\r\n\t\t\tthis.scale(1 / this.scaleSize.x ,1 / this.scaleSize.y);\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.scale(1 ,1);\t\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * 放大缩小画布\r\n\t * \r\n\t * @method scale\r\n\t * @param {number} dx 缩放X轴比例\r\n\t * @param {number} dy 缩放Y轴比例\r\n\t */\r\n\tscale(dx, dy) {\r\n\t\tif(!this.normalSize) {\r\n\t\t\tthis.normalSize = {\r\n\t\t\t\twidth: this.canvas.width,\r\n\t\t\t\theight: this.canvas.height\r\n\t\t\t};\t\t\r\n\t\t}\r\n\t\t\r\n\t\t//this.context.scale && this.context.scale(dx,dy);\r\n\t\tif(!this.scaleSize) {\r\n\t\t\tthis.scaleSize = {x: 1,y: 1};\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.scaleSize = {x: dx * this.scaleSize.x, y: dy * this.scaleSize.y};\r\n\t\t}\r\n\t\tthis.canvas.style && (this.canvas.style.transform = `scale(${this.scaleSize.x}, ${this.scaleSize.y})`);\r\n\t}\r\n\r\n\t/**\r\n\t * 保存为base64图形数据\r\n\t * \r\n\t * @method toDataURL\r\n\t * @return {string} 当前画布图的base64字符串\r\n\t */\r\n\ttoDataURL() {\r\n\t\tlet data = this.canvas.toDataURL?this.canvas.toDataURL():'';\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/** \r\n\t * 自动刷新画版\r\n\t * @param {function} callback 执行回调\r\n\t */\r\n\tautoRefresh(callback) {\r\n\t\tif(this.___isAutoRefreshing) return;\r\n\t\tconst self = this;\r\n\t\tthis.___isAutoRefreshing = true;\r\n\t\t\r\n\t\tconst refreshStartTime = Date.now();\r\n\t\tfunction update() {\r\n\t\t\tif(self.destroyed) {\r\n\t\t\t\tself.___isAutoRefreshing = false;\r\n\t\t\t\treturn;// 已销毁\r\n\t\t\t}\r\n\t\t\tif(self.needUpdate) self.redraw();\r\n\r\n\t\t\tconst time = Date.now() - refreshStartTime;\r\n\t\t\t// 触发刷新事件\r\n\t\t\tself.emit('update', time);\r\n\r\n\t\t\tself.__requestAnimationFrameFunHandler && self.cancelAnimationFrame(self.__requestAnimationFrameFunHandler);\r\n\t\t\tself.__requestAnimationFrameFunHandler = self.requestAnimationFrame(update);\r\n\t\t\tif(callback) callback();\r\n\t\t}\r\n\t\tself.__requestAnimationFrameFunHandler && this.cancelAnimationFrame(self.__requestAnimationFrameFunHandler);\r\n\t\tself.__requestAnimationFrameFunHandler = this.requestAnimationFrame(update);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t// 销毁当前对象\r\n\tdestroy() {\r\n\t\tthis.eventHandler.destroy();\r\n\t\tthis.destroyed = true;// 标记已销毁\r\n\t}\r\n}\r\n\r\nexport { \r\n\tjmGraph, \r\n\tjmUtils,\r\n\tjmList,\r\n\tjmProperty,\r\n\tjmShadow,\r\n\tjmGradient,\r\n\tjmEvents,\r\n\tjmControl,\r\n\tjmPath,\r\n };\r\n"],"names":["jmList","_classCallCheck","_this","ps","_len","arguments","length","arg","Array","_key","isArray","i","push","_callSuper","this","concat","option","type","_assertThisInitialized","_inherits","_wrapNativeSuper","_createClass","key","value","obj","includes","_typeof","removeAt","index","splice","removeHandler","call","find","cb","inverse","len","handler","count","colorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","transparent","jmUtils","source","target","v","deep","undefined","copyHandler","deepIndex","isType","dest","clone","slice","k","__proto__","tagName","getContext","name","fun","opt","indexOf","ns","split","bindEvent","attachEvent","addEventListener","removeEventListener","detachEvent","el","pos","top","left","offsetParent","offsetTop","offsetLeft","x","evt","scale","isTouch","touches","event","changedTouches","targetTouches","srcElement","px","pageX","py","clientX","document","documentElement","scrollLeft","body","pageY","y","ox","clientY","scrollTop","offsetX","oy","offsetY","isWXMiniApp","p","getElementPosition","layerX","layerY","screenX","screenY","constructor","pt","polygon","offset","j","l","n","inside","redo","Math","abs","min","max","f","sqrt","_x","parentBounds","targetBounds","result","right","bottom","rp","r","cos","sin","x1","y1","c","sc","substring","trimStart","trimEnd","per","trim","tmp","checkPercent","h","toLowerCase","iv","floor","hex","m","res","__hexToRGBA_Cache","color","a","substr","g","b","Number","hexToNumber","toFixed","match","byteToDecimal","hexToRGBA","callback","win","requestAnimationFrame","window","setTimeout","cancelAnimationFrame","clearTimeout","control_id_counter","jmObject","graph","id","is","animateHandles","params","add","millisec","handle","self","dispatcher","overduehandles","curTimes","Date","getTime","each","ani","times","apply","e","console","info","toString","remove","animate","PROPERTY_KEY","Symbol","jmProperty","mode","pros","args","pars","oldValue","newValue","emit","get","property","set","needUpdate","findParent","canvas","jmShadow","blur","fromString","s","ms","test","jmGradient","stops","_this$stops","_toConsumableArray","control","gradient","r1","r2","context","bounds","absoluteBounds","getAbsoluteBounds","x2","y2","location","getLocation","d","sx1","radius","width","height","percentToNumber","sy1","sx2","sy2","webglControl","createLinearGradient","createRadialGradient","createCircularGradient","toColor","addColorStop","par","spindex","lastIndexOf","isNaN","addStop","str","jmEvents","container","mouseHandler","jmMouseEvent","keyHandler","jmKeyEvent","eventName","raiseEvent","destroy","instance","eventEvents","init","doc","preventDefault","touchStart","passive","touchMove","touchEnd","touchCancel","removeEvent","checkKeyEvent","earcut","data","holeIndices","dim","maxX","maxY","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","next","prev","end","list","queue","start","steiner","leftmost","sort","compareX","hole","bridge","hx","hy","qx","Infinity","stop","mx","my","tanMin","pointInTriangle","locallyInside","area","filterPoints","bridgeReverse","splitPolygon","minX","minY","earcutLinked","clockwise","last","signedArea","insertNode","equals","removeNode","again","ear","pass","indexCurve","z","zOrder","prevZ","nextZ","sortLinked","q","tail","numMerges","pSize","qSize","inSize","ax","bx","cx","ay","by","cy","x0","y0","minZ","maxZ","intersects","p1","p2","q1","q2","o1","sign","o2","o3","o4","onSegment","num","a2","Node","b2","an","bp","sum","deviation","polygonArea","trianglesArea","flatten","vertices","holes","dimensions","holeIndex","WebglGradient","dx","dy","pow","points","textureContext","forEach","utils","toFillTexture","createShader","gl","src","shader","shaderSource","compileShader","GLSL_TO_SIZE","float","vec2","vec3","vec4","int","ivec2","ivec3","ivec4","bool","bvec2","bvec3","bvec4","mat2","mat3","mat4","sampler2D","mapSize","GL_TABLE","GL_TO_GLSL_TYPES","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","mapType","typeNames","Object","keys","tn","createProgram","vertexSrc","fragmentSrc","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","error","VALIDATE_STATUS","getError","getProgramInfoLog","warn","deleteProgram","useProgram","deleteShader","attrs","attributes","ACTIVE_ATTRIBUTES","attribData","getActiveAttrib","size","getAttribLocation","uniforms","ACTIVE_UNIFORMS","uniformData","getActiveUniform","replace","getUniformLocation","createBuffer","ARRAY_BUFFER","drawType","STATIC_DRAW","buffer","bindBuffer","bufferData","unitSize","BYTES_PER_ELEMENT","Error","create2DTexture","texture","createTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texParameterf","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","pathVertexSource","pathFragmentSource","WeblBase","style","globalAlpha","textureCanvas","createElement","ctx","willReadFrequently","pathProgram","_objectSpread","isGradient","rgbToDecimal","setTextureStyle","lineWidth","__curent_program","attr","strip","dataType","vertexAttribPointer","enableVertexAttribArray","disableVertexAttribArray","Float32Array","Uint16Array","bufferHandler","deleteBuffer","log","img","texImage2D","RGBA","UNSIGNED_BYTE","pixels","Uint8Array","deleteTexture","pointsToArray","earCutPoints","p3","_ref","map","arr","webglGradient","text","save","font","fontSize","fontFamily","measureText","restore","fillStyle","clearRect","beginPath","_step","_iterator","_createForOfIteratorHelper","done","moveTo","lineTo","err","closePath","fill","getImageData","WebglPath","isRegular","needCut","WebglBase","parentAbsoluteBounds","uniform2f","a_center_point","convertColor","uniform4f","v_single_color","colorData","colorBuffer","createFloat32Buffer","writeVertexAttrib","a_color","setParentBounds","pathPoints","_step2","a_position","fixedPoints","_iterator2","vertexBuffer","linePoints","genLinePoints","lines","index1","index2","line1","line2","equalPoint","sub1","sub2","cuted","intersection","getIntersection","cutLines","area_abc","area_abd","area_cda","t","line","point","root","polygons","unshift","getIntersectionLines","pathToLines","treeLine","getPolygon","_step3","_iterator3","earCutPointsToTriangles","strokeStyle","setFragColor","uniform1f","a_point_size","a_type","uniform1i","regular","pathToPoints","writePoints","drawArrays","LINE_LOOP","POINTS","fillColor","fillImage","imgData","toImageData","fillPolygons","ImageData","createDataTexture","createImgTexture","u_sample","v_texture_bounds","fillTexture","a_text_coord","isTexture","coordBuffer","TRIANGLE_FAN","fillText","maxWidth","strokeText","jmStyleMap","stroke","shadow.blur","shadow.x","shadow.y","shadow.color","miterLimit","opacity","textAlign","textBaseline","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","lineJoin","lineCap","jmControl","_this2","position","zIndex","interactive","initializing","on","bind","children","css","cur","oadd","parent","contain","oremove","levelItems","zindex","clear","_this3","__setStyle","mpkey","styleValue","mpname","toGradient","setStyle","angle","getRotation","__translateAbsolutePosition","toAbsolutePoint","translate","rotate","transform","scaleX","skewX","skewY","scaleY","cursor","isReset","rect","rotation","getBounds","local","oldBounds","rotatePoints","margin","center","trans","offseted","cpoints","prec","rec","beginDraw","close","endDraw","draw","visible","initPoints","needDraw","item","paint","__events","eventCollection","getEvent","events","_step4","_iterator4","unbind","_len2","runEventHandle","cancel","pad","getPosition","pointInPolygon","getEventPosition","button","keyCode","charCode","which","ctrlKey","path","stoped","abounds","inpos","checkPoint","runEventAndPopEvent","focused","__mvMonitor","mouseDown","curposition","mv","offsetx","offsety","thisbounds","outside","parentbounds","lockSide","checkOutSide","mu","ml","md","jmPath","jmGraph","cn","devicePixelRatio","util","wx","canIUse","createSelectorQuery","select","getElementById","parentElement","appendChild","offsetWidth","clientWidth","offsetHeight","clientHeight","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","__init","shapes","assign","dpr","getWindowInfo","pixelRatio","dprScaleSize","resize","eventHandler","autoRefresh","w","__normalSize","viewport","shape","redraw","clearColor","COLOR_BUFFER_BIT","createShape","scaleSize","normalSize","toDataURL","refreshStartTime","___isAutoRefreshing","now","__requestAnimationFrameFunHandler","update","time","destroyed","_construct"],"mappings":"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"}