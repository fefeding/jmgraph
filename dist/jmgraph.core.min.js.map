{"version":3,"file":"jmgraph.core.min.js","sources":["../src/core/jmList.js","../src/core/jmUtils.js","../src/core/jmObject.js","../src/core/jmProperty.js","../src/core/jmShadow.js","../src/core/jmGradient.js","../src/core/jmEvents.js","../src/core/jmControl.js","../src/core/jmPath.js","../src/core/jmGraph.js"],"sourcesContent":["/**\r\n * 自定义集合\r\n * \r\n * @class jmList\r\n * @for jmUtils\r\n * @param {array} [arr] 数组，可转为当前list元素\r\n */\r\nexport default class jmList extends Array {    \r\n    constructor(...arg) {\r\n        let ps = [];\r\n        if(arg && arg.length && Array.isArray(arg[0])) {\r\n            for(let i=0; i< arg[0].length; i++) ps.push(arg[0][i]);\r\n            super(...ps);\r\n        }\r\n        else {\r\n            super();\r\n        }\r\n        this.option = {}; //选项\r\n        this.type = 'jmList';\r\n    }\r\n    /**\r\n     * 往集合中添加对象\r\n     *\r\n     * @method add\r\n     * @for list\r\n     * @param {any} obj 往集合中添加的对象\r\n     */\r\n    add(obj) {        \r\n        if(obj && Array.isArray(obj)) {\r\n            for(let i=0; i < obj.length; i++) {\r\n                if(!this.includes(obj[i])) this.push(obj[i]);\r\n            } \r\n            return obj;           \r\n        }\r\n        if(typeof obj == 'object' && this.includes(obj)) return obj;\r\n        this.push(obj);\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * 从集合中移除指定对象\r\n     * \r\n     * @method remove\r\n     * @for list\r\n     * @param {any} obj 将移除的对象\r\n     */\r\n    remove(obj) {\r\n        for(let i = this.length -1; i>=0; i--) {            \r\n            if(this[i] == obj) {\r\n                this.removeAt(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 按索引移除对象\r\n     * \r\n     * @method removeAt\r\n     * @for list\r\n     * @param {integer} index 移除对象的索引\r\n     */\r\n    removeAt(index) {\r\n        if(this.length > index) {\r\n            let obj = this[index];\r\n            this.splice(index,1);\r\n            if(this.option.removeHandler)  this.option.removeHandler.call(this, obj, index);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断是否包含某个对象\r\n     * \r\n     * @method contain\r\n     * @for list\r\n     * @param {any} obj 判断当前集合中是否包含此对象\r\n     */\r\n    contain(obj) {\r\n        return this.includes(obj);\r\n    }\r\n\r\n    /**\r\n     * 从集合中获取某个对象\r\n     * \r\n     * @method get\r\n     * @for list\r\n     * @param {integer/function} index 如果为整型则表示为获取此索引的对象，如果为function为则通过此委托获取对象\r\n     * @return {any} 集合中的对象\r\n     */\r\n    get(index) {\r\n        if(typeof index == 'function') {\r\n            return this.find(index);\r\n        }\r\n        else {\r\n            return this[index];\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * 遍历当前集合 \r\n     *\r\n     * @method each\r\n     * @for list\r\n     * @param {function} cb 遍历当前集合的委托\r\n     * @param {boolean} inverse 是否按逆序遍历\r\n     */\r\n    each(cb, inverse) {\r\n        if(cb && typeof cb == 'function') {\r\n            //如果按倒序循环\r\n            if(inverse) {\r\n                for(let i = this.length - 1;i>=0; i--) {\r\n                    let r = cb.call(this, i, this[i]);\r\n                    if(r === false) break;\r\n                }\r\n            }\r\n            else {\r\n                let len = this.length;\r\n               for(let i  = 0; i < len;i++) {\r\n                    let r = cb.call(this, i, this[i]);\r\n                    if(r === false) break;\r\n                } \r\n            }            \r\n        }        \r\n    }\r\n\r\n    /**\r\n     * 获取当前集合对象个数\r\n     *\r\n     * @method count\r\n     * @param {function} [handler] 检查对象是否符合计算的条件\r\n     * @for list\r\n     * @return {integer} 当前集合的个数\r\n     */\r\n    count(handler) {\r\n        if(handler && typeof handler == 'function') {\r\n            let count = 0;\r\n            let len = this.length;\r\n            for(let i  = 0; i<len;i++) {\r\n                if(handler(this[i])) {\r\n                    count ++;\r\n                }\r\n            } \r\n            return count;\r\n        }\r\n        return this.length;\r\n    }\r\n\r\n    /**\r\n     * 清空当前集合\r\n     *\r\n     * @method clear\r\n     * @for list\r\n     */\r\n    clear() {\r\n        this.splice(0, this.length);\r\n    }\r\n}\r\n\r\nexport { jmList };","\r\nimport { jmList } from './jmList.js';\r\n\r\n/**\r\n * 画图基础对象\r\n * 当前库的工具类\r\n * \r\n * @class jmUtils\r\n * @static\r\n */\r\nexport default class jmUtils {\r\n    /**\r\n     * 复制一个对象\r\n     * \r\n     * @method clone\r\n     * @static\r\n     * @param {object} source 被复制的对象\r\n     * @param {object} target 可选，如果指定就表示复制给这个对象，如果为boolean它就是deep参数\r\n     * @param {boolean} deep 是否深度复制，如果为true,数组内的每个对象都会被复制\r\n     * @return {object} 参数source的拷贝对象\r\n     */\r\n    static clone(source, target, deep = false) {\r\n        if(typeof target === 'boolean') {\r\n            deep = target;\r\n            target = undefined;\r\n        }\r\n\r\n        if(source && typeof source === 'object') {\r\n            target = target || {};\r\n\r\n            //如果为当前泛型，则直接new\r\n            if(this.isType(source, jmList)) {\r\n                return new jmList(source);\r\n            }\r\n            else if(Array.isArray(source)) {\r\n                //如果是深度复，则拷贝每个对象\r\n                if(deep) {\r\n                    let dest = [];\r\n                    for(let i=0; i<source.length; i++) {\r\n                        dest.push(this.clone(source[i], deep));\r\n                    }\r\n                    return dest;\r\n                }\r\n                return source.slice(0);\r\n            }\r\n            target.constructor = source.constructor;\r\n            for(let k in source) {\r\n                // 如果不是对象和空，则采用target的属性\r\n                if(typeof target[k] === 'object' || typeof target[k] === 'undefined') {                    \r\n                    target[k] = this.clone(source[k], target[k], deep);\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n        else if(typeof target != 'undefined') {\r\n            return target;\r\n        }\r\n\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * 绑定事件到html对象\r\n     * \r\n     * @method bindEvent\r\n     * @static\r\n     * @param {element} html元素对象\r\n     * @param {string} name 事件名称\r\n     * @param {function} fun 事件委托\r\n     */\r\n    static bindEvent(target, name, fun, opt) {\r\n        if(name &&  name.indexOf && name.indexOf(' ') != -1) {\r\n            let ns = name.split(' ');\r\n            for(let i=0;i<ns.length;i++) {\r\n                this.bindEvent(target, ns[i], fun, opt);\r\n            }\r\n            return;\r\n        }\r\n        if(target.attachEvent) {\r\n            return target.attachEvent(\"on\"+name, fun, opt);\r\n        }    \r\n        else if(target.addEventListener) {\r\n            target.addEventListener(name, fun, opt);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从对象中移除事件到\r\n     * \r\n     * @method removeEvent\r\n     * @static\r\n     * @param {element} html元素对象\r\n     * @param {string} name 事件名称\r\n     * @param {function} fun 事件委托\r\n     */\r\n    static removeEvent(target, name, fun) {\r\n        if(target.removeEventListener) {\r\n            return target.removeEventListener(name, fun, false);\r\n        }    \r\n        else if(target.detachEvent) {\r\n            target.detachEvent('on' + name, fun);\r\n            return true;\r\n        }\r\n        else {\r\n            target['on' + name] = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取元素的绝对定位\r\n     *\r\n     * @method getElementPosition\r\n     * @static\r\n     * @param {element} el 目标元素对象\r\n     * @return {position} 位置对象(top,left)\r\n     */\r\n    static getElementPosition(el) {    \r\n        let pos = {\"top\": 0, \"left\": 0};\r\n        if(!el) return pos;\r\n\r\n        if (el.offsetParent) {\r\n            while (el.offsetParent) {\r\n                pos.top += el.offsetTop;\r\n                pos.left += el.offsetLeft;\r\n                el = el.offsetParent;\r\n            }\r\n        }\r\n        else if(el.x) {\r\n            pos.left += el.x;\r\n        }\r\n        else if(el.x){\r\n            pos.top += el.y;\r\n        } \r\n        return pos;\r\n    }\r\n    /**\r\n     * 获取元素事件触发的位置\r\n     *\r\n     * @method getEventPosition\r\n     * @static\r\n     * @param {eventArg} evt 当前触发事件的参数\r\n     * @param {point} [scale] 当前画布的缩放比例\r\n     * @return {point} 事件触发的位置 \r\n     */\r\n    static getEventPosition (evt, scale) {\r\n        evt = evt || event;\r\n        \r\n        let isTouch = false;\r\n        let touches = evt.changedTouches || evt.targetTouches || evt.touches;\r\n        let target = evt.target || evt.srcElement;\r\n        if(touches) {\r\n            evt = touches[0];//兼容touch事件\r\n            if(!evt.target) evt.target = target;\r\n            isTouch = true;\r\n        }\r\n        let px = evt.pageX || evt.x;\r\n        if(typeof px == 'undefined')  px = evt.clientX + (document.documentElement.scrollLeft || document.body.scrollLeft);    \r\n        let py = evt.pageY || evt.y;\r\n        if(typeof py == 'undefined')  py = evt.clientY + (document.documentElement.scrollTop || document.body.scrollTop);\r\n\r\n        let ox = evt.offsetX;\r\n        let oy = evt.offsetY;\r\n        if(typeof ox === 'undefined' && typeof oy === 'undefined') {\r\n            let p = this.getElementPosition(target);\r\n            ox= px - p.left;\r\n            oy = py - p.top;\r\n        }\r\n        if(scale) {\r\n            if(scale.x) ox = ox / scale.x;\r\n            if(scale.y) oy = oy / scale.y;\r\n        }\r\n        return {\r\n            pageX: px,\r\n            pageY: py,\r\n            clientX: evt.clientX,\r\n            clientY: evt.clientY,\r\n            //相对于容器偏移量\r\n            offsetX: ox,\r\n            offsetY: oy,\r\n            layerX: evt.layerX,\r\n            layerY: evt.layerY,\r\n            screenX: evt.screenX,\r\n            screenY: evt.screenY,\r\n            x: ox,\r\n            y: oy,\r\n            isTouch: isTouch\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 检 查对象是否为指定的类型,不包括继承\r\n     * \r\n     * @method isType\r\n     * @static\r\n     * @param {object} target 需要判断类型的对象\r\n     * @param {class} type 对象类型\r\n     * @return {boolean} 返回对象是否为指定类型 \r\n     */\r\n    static isType(target, type) {\r\n        if(!target || typeof target !== 'object') return false;\r\n        if(target.constructor === type) return true;\r\n        /*if(target.__baseType) {        \r\n            return jmUtils.isType(target.__baseType.prototype,type);\r\n        }*/\r\n\r\n        //return target instanceof type;\r\n        return false;\r\n    }\r\n    /**\r\n     * 判断点是否在多边形内\r\n     * 如果一个点在多边形内部，任意角度做射线肯定会与多边形要么有一个交点，要么有与多边形边界线重叠。\r\n     * 如果一个点在多边形外部，任意角度做射线要么与多边形有一个交点，要么有两个交点，要么没有交点，要么有与多边形边界线重叠。\r\n     * 利用上面的结论，我们只要判断这个点与多边形的交点个数，就可以判断出点与多边形的位置关系了。\r\n     * \r\n     * @method pointInPolygon\r\n     * @static\r\n     * @param {point} pt 坐标对象\r\n     * @param {array} polygon 多边型角坐标对象数组\r\n     * @param {number} offset 判断可偏移值\r\n     * @return {integer} 0= 不在图形内和线上，1=在边上，2=在图形内部\r\n     */\r\n    static pointInPolygon(pt, polygon, offset) {\r\n        offset = offset || 1;\r\n        offset = offset / 2;\r\n        let i, j, n = polygon.length;\r\n        let inside = false, redo = true;\r\n\r\n        if(!polygon || n == 0) return 0;\r\n        if(n == 1) {\r\n            return Math.abs(polygon[0].x - pt.x) <= offset && Math.abs(polygon[0].y - pt.y) <= offset;\r\n        }\r\n        \r\n        //一条直线\r\n        else if(n == 2) {\r\n            //在最左边之外或在最右边之外\r\n            if(Math.min(polygon[0].x,polygon[1].x) - pt.x > offset || \r\n                pt.x - Math.max(polygon[0].x,polygon[1].x) > offset ) {\r\n                return 0;\r\n            }\r\n            //在最顶部之外或在最底部之外\r\n            if(Math.min(polygon[0].y,polygon[1].y) - pt.y > offset || \r\n                pt.y - Math.max(polygon[0].y,polygon[1].y) > offset) {\r\n                return 0;\r\n            }\r\n\r\n            //如果线为平行为纵坐标。\r\n            if(polygon[0].x == polygon[1].x){\r\n                return (Math.abs(polygon[0].x - pt.x) <= offset && (pt.y - polygon[0].y) * (pt.y - polygon[1].y) <= 0)? 1:0;\r\n            }\r\n            //如果线为平行为横坐标。\r\n            if(polygon[0].y == polygon[1].y){\r\n                return (Math.abs(polygon[0].y - pt.y) <= offset && (pt.x - polygon[0].x) * (pt.x - polygon[1].x) <= 0)? 1:0;\r\n            }\r\n\r\n            if(Math.abs(polygon[0].x - pt.x) < offset && Math.abs(polygon[0].y - pt.y) < offset) {\r\n                return 1;\r\n            }\r\n            if(Math.abs(polygon[1].x - pt.x) < offset && Math.abs(polygon[1].y - pt.y) < offset) {\r\n                return 1;\r\n            }\r\n\r\n            //点到直线的距离小于宽度的一半，表示在线上\r\n            if(pt.y != polygon[0].y && pt.y != polygon[1].y) {\r\n\r\n                let f = (polygon[1].x - polygon[0].x) / (polygon[1].y - polygon[0].y) * (pt.y - polygon[0].y);\r\n                let ff = (pt.y - polygon[0].y) / Math.sqrt(f * f + (pt.y - polygon[0].y) * (pt.y - polygon[0].y));\r\n                let l = ff * (pt.x - polygon[0].x - f );\r\n                \r\n                return Math.abs(l) <= offset ?1:0;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        for (i = 0;i < n;++i) {\r\n            if (polygon[i].x == pt.x &&    // 是否在顶点上\r\n                polygon[i].y == pt.y ) {\r\n                return 1;\r\n            }\r\n        }\r\n\r\n        //pt = this.clone(pt);\r\n        while (redo) {\r\n            redo = false;\r\n            inside = false;\r\n            for (i = 0,j = n - 1;i < n;j = i++) {\r\n                if ( (polygon[i].y < pt.y && pt.y < polygon[j].y) || \r\n                    (polygon[j].y < pt.y && pt.y < polygon[i].y) ) {\r\n                    if (pt.x <= polygon[i].x || pt.x <= polygon[j].x) {\r\n                        var _x = (pt.y-polygon[i].y)*(polygon[j].x-polygon[i].x)/(polygon[j].y-polygon[i].y)+polygon[i].x;\r\n                        if (pt.x < _x)          // 在线的左侧\r\n                            inside = !inside;\r\n                        else if (pt.x == _x)    // 在线上\r\n                        {\r\n                            return 1;\r\n                        }\r\n                    }\r\n                }\r\n                else if ( pt.y == polygon[i].y) {\r\n                    if (pt.x < polygon[i].x) {    // 交点在顶点上                    \r\n                        if(polygon[i].y > polygon[j].y) {\r\n                            --pt.y\r\n                        }\r\n                        else {\r\n                            ++pt.y;\r\n                        }\r\n                        redo = true;\r\n                        break;\r\n                    }\r\n                }\r\n                else if ( polygon[i].y ==  polygon[j].y && // 在水平的边界线上\r\n                    pt.y == polygon[i].y &&\r\n                    ( (polygon[i].x < pt.x && pt.x < polygon[j].x) || \r\n                    (polygon[j].x < pt.x && pt.x < polygon[i].x) ) ) {\r\n                    inside = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return inside ? 2:0;\r\n    }\r\n\r\n    /**\r\n     * @method judge 判断点是否在多边形中\r\n     * @param {point} dot {{x,y}} 需要判断的点\r\n     * @param {array} coordinates {{x,y}[]} 多边形点坐标的数组，为保证图形能够闭合，起点和终点必须相等。\r\n     *        比如三角形需要四个点表示，第一个点和最后一个点必须相同。 \r\n     * @param  {number} 是否为实心 1= 是\r\n     * @returns {boolean} 结果 true=在形状内\r\n     */\r\n    /*static judge(dot,coordinates,noneZeroMode) {\r\n        // 默认启动none zero mode\r\n        noneZeroMode=noneZeroMode||1;\r\n        var x = dot.x,y=dot.y;\r\n        var crossNum = 0;\r\n        // 点在线段的左侧数目\r\n        var leftCount = 0;\r\n        // 点在线段的右侧数目\r\n        var rightCount = 0;\r\n        for(var i=0;i<coordinates.length-1;i++){\r\n            var start = coordinates[i];\r\n            var end = coordinates[i+1];\r\n                \r\n            // 起点、终点斜率不存在的情况\r\n            if(start.x===end.x) {\r\n                // 因为射线向右水平，此处说明不相交\r\n                if(x>start.x) continue;\r\n                \r\n                // 从左侧贯穿\r\n                if((end.y>start.y&&y>=start.y && y<=end.y)){\r\n                    leftCount++;\r\n                    crossNum++;\r\n                }\r\n                // 从右侧贯穿\r\n                if((end.y<start.y&&y>=end.y && y<=start.y)) {\r\n                    rightCount++;\r\n                    crossNum++;\r\n                }\r\n                continue;\r\n            }\r\n            // 斜率存在的情况，计算斜率\r\n            var k=(end.y-start.y)/(end.x-start.x);\r\n            // 交点的x坐标\r\n            var x0 = (y-start.y)/k+start.x;\r\n            // 因为射线向右水平，此处说明不相交\r\n            if(x>x0) continue;\r\n                \r\n            if((end.x>start.x&&x0>=start.x && x0<=end.x)){\r\n                crossNum++;\r\n                if(k>=0) leftCount++;\r\n                else rightCount++;\r\n            }\r\n            if((end.x<start.x&&x0>=end.x && x0<=start.x)) {\r\n                crossNum++;\r\n                if(k>=0) rightCount++;\r\n                else leftCount++;\r\n            }\r\n        }\r\n        \r\n        return noneZeroMode===1?leftCount-rightCount!==0:crossNum%2===1;\r\n    }*/\r\n\r\n    /**\r\n     * 检查边界，子对象是否超出父容器边界\r\n     * 当对象偏移offset后是否出界\r\n     * 返回(left:0,right:0,top:0,bottom:0)\r\n     * 如果right>0表示右边出界right偏移量,left<0则表示左边出界left偏移量\r\n     * 如果bottom>0表示下边出界bottom偏移量,top<0则表示上边出界ltop偏移量\r\n     *\r\n     * @method checkOutSide\r\n     * @static\r\n     * @param {bound} parentBounds 父对象的边界\r\n     * @param {bound} targetBounds 对象的边界\r\n     * @param {number} offset 判断是否越界可容偏差\r\n     * @return {bound} 越界标识\r\n     */\r\n    static checkOutSide(parentBounds, targetBounds, offset) {\r\n        let result = {left:0,right:0,top:0,bottom:0};\r\n        if(offset.x < 0 ) {\r\n            result.left = targetBounds.left + offset.x - parentBounds.left;\r\n        }\r\n        else if(offset.x > 0 ) {\r\n            result.right = targetBounds.right + offset.x - parentBounds.right;\r\n        }\r\n\r\n        if(offset.y < 0 ) {\r\n            result.top = targetBounds.top + offset.y - parentBounds.top;\r\n        }\r\n        else if(offset.y > 0) {\r\n            result.bottom = targetBounds.bottom + offset.y - parentBounds.bottom;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 把一个或多个点绕某个点旋转一定角度\r\n     * 先把坐标原点移到旋转中心点，计算后移回\r\n     * @method rotatePoints\r\n     * @static\r\n     * @param {Array/object} p 一个或多个点\r\n     * @param {*} rp 旋转中心点\r\n     * @param {*} r 旋转角度\r\n     */\r\n    static rotatePoints(p, rp, r) {\r\n        if(!r || !p) return p;\r\n        let cos = Math.cos(r);\r\n        let sin = Math.sin(r);\r\n        if(p.length) {\r\n            for(let i=0;i<p.length;i++) {\r\n                if(!p[i]) continue;\r\n                let x1 = p[i].x - rp.x;\r\n                let y1 = p[i].y - rp.y;\r\n                p[i].x = x1 * cos - y1 * sin + rp.x;\r\n                p[i].y = x1 * sin + y1 * cos + rp.y;\r\n            }\r\n        }\r\n        else {\r\n            let x1 = p.x - rp.x;\r\n            let y1 = p.y - rp.y;\r\n            p.x = x1 * cos - y1 * sin + rp.x;\r\n            p.y = x1 * sin + y1 * cos + rp.y;\r\n        }\r\n        return p;\r\n    }\r\n\r\n    /**\r\n     * 去除字符串开始字符\r\n     * \r\n     * @method trimStart\r\n     * @static\r\n     * @param {string} source 需要处理的字符串\r\n     * @param {char} [c] 要去除字符串的前置字符\r\n     * @return {string} 去除前置字符后的字符串\r\n     */\r\n    static trimStart(source, c) {\r\n        c = c || ' ';\r\n        if(source && source.length > 0) {\r\n            let sc = source[0];\r\n            if(sc === c || c.indexOf(sc) >= 0) {\r\n                source = source.substring(1);\r\n                return this.trimStart(source,c);\r\n            }        \r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * 去除字符串结束的字符c\r\n     *\r\n     * @method trimEnd\r\n     * @static\r\n     * @param {string} source 需要处理的字符串\r\n     * @param {char} [c] 要去除字符串的后置字符\r\n     * @return {string} 去除后置字符后的字符串\r\n     */\r\n    static trimEnd(source, c) {\r\n        c = c || ' ';\r\n        if(source && source.length > 0) {\r\n            let sc = source[source.length - 1];\r\n            if(sc === c || c.indexOf(sc) >= 0) {\r\n                source = source.substring(0,source.length - 1);\r\n                return this.trimStart(source,c);\r\n            }        \r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * 去除字符串开始与结束的字符\r\n     *\r\n     * @method trim\r\n     * @static\r\n     * @param {string} source 需要处理的字符串\r\n     * @param {char} [c] 要去除字符串的字符\r\n     * @return {string} 去除字符后的字符串\r\n     */\r\n    static trim(source,c) {\r\n        return this.trimEnd(this.trimStart(source,c),c);\r\n    }\r\n\r\n    /**\r\n     * 检查是否为百分比参数\r\n     *\r\n     * @method checkPercent\r\n     * @static\r\n     * @param {string} 字符串参数\r\n     * @return {boolean} true=当前字符串为百分比参数,false=不是\r\n     */\r\n    static checkPercent(per) {\r\n        if(typeof per === 'string') {\r\n            per = this.trim(per);\r\n            if(per[per.length - 1] == '%') {\r\n                return per;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 转换百分数为数值类型\r\n     *\r\n     * @method percentToNumber\r\n     * @static\r\n     * @param {string} per 把百分比转为数值的参数\r\n     * @return {number} 百分比对应的数值\r\n     */\r\n    static percentToNumber(per) {\r\n        if(typeof per === 'string') {\r\n            let tmp = this.checkPercent(per);\r\n            if(tmp) {\r\n                per = this.trim(tmp,'% ');\r\n                per = per / 100;\r\n            }\r\n        }\r\n        return per;\r\n    }\r\n\r\n    /**\r\n     * 转换16进制为数值\r\n     *\r\n     * @method hexToNumber\r\n     * @static\r\n     * @param {string} h 16进制颜色表达\r\n     * @return {number} 10进制表达\r\n     */\r\n    static hexToNumber(h) {\r\n        if(typeof h !== 'string') return h;\r\n\r\n        h = h.toLowerCase();\r\n        let hex = '0123456789abcdef';\r\n        let v = 0;\r\n        let l = h.length;\r\n        for(let i=0;i<l;i++) {\r\n            let iv = hex.indexOf(h[i]);\r\n            if(iv == 0) continue;\r\n            \r\n            for(let j=1;j<l - i;j++) {\r\n                iv *= 16;\r\n            }\r\n            v += iv;\r\n        }\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 转换数值为16进制字符串表达\r\n     *\r\n     * @method hex\r\n     * @static\r\n     * @param {number} v 数值\r\n     * @return {string} 16进制表达\r\n     */\r\n    static numberToHex(v) {\r\n        let hex = '0123456789abcdef';\r\n        \r\n        let h = '';\r\n        while(v > 0) {\r\n            let t = v % 16;\r\n            h = hex[t] + h;\r\n            v = Math.floor(v / 16);\r\n        }\r\n        return h;\r\n    }\r\n\r\n    /**\r\n     * 16进制颜色转为r g b a 对象 {r, g , b, a}\r\n     * @param {string}} hex 16进度的颜色\r\n     */\r\n    static hexToRGBA(hex) {\r\n        hex = this.trim(hex);        \r\n\r\n        //当为7位时，表示需要转为带透明度的rgba\r\n        if(hex[0] == '#') {\r\n            const color = {\r\n                a: 1\r\n            };\r\n            if(hex.length >= 8) {\r\n                color.a = hex.substr(1,2);\r\n                color.g = hex.substr(5,2);\r\n                color.b = hex.substr(7,2);\r\n                color.r = hex.substr(3,2);\r\n                //透明度\r\n                color.a = (this.hexToNumber(color.a) / 255).toFixed(4);\r\n\r\n                color.r = this.hexToNumber(color.r||0);\r\n                color.g = this.hexToNumber(color.g||0);\r\n                color.b = this.hexToNumber(color.b||0);\r\n                return color; \r\n            }\r\n            // #cccccc || #ccc\r\n            else if(hex.length === 7 || hex.length === 4) {\r\n                // #ccc这种情况，把每个位复制一份\r\n                if(hex.length === 4) {\r\n                    color.g = hex.substr(2, 1);\r\n                    color.g = color.g + color.g;\r\n                    color.b = hex.substr(3, 1);\r\n                    color.b = color.b + color.b;\r\n                    color.r = hex.substr(1, 1);\r\n                    color.r = color.r + color.r;\r\n                }\r\n                else {\r\n                    color.g = hex.substr(3, 2);//除#号外的第二位\r\n                    color.b = hex.substr(5, 2);\r\n                    color.r = hex.substr(1, 2);\r\n                }\r\n\r\n                color.r = this.hexToNumber(color.r||0);\r\n                color.g = this.hexToNumber(color.g||0);\r\n                color.b = this.hexToNumber(color.b||0);\r\n                \r\n                return color; \r\n            }\r\n            //如果是5位的话，# 则第2位表示A，后面依次是r,g,b\r\n            else if(hex.length === 5) {\r\n                color.a = hex.substr(1,1);\r\n                color.g = hex.substr(3,1);//除#号外的第二位\r\n                color.b = hex.substr(4,1);\r\n                color.r = hex.substr(2,1);\r\n\r\n                color.r = this.hexToNumber(color.r||0);\r\n                color.g = this.hexToNumber(color.g||0);\r\n                color.b = this.hexToNumber(color.b||0);\r\n                //透明度\r\n                color.a = (this.hexToNumber(color.a) / 255).toFixed(4);\r\n                return color; \r\n            }\r\n        }  \r\n        return hex;     \r\n    }\r\n\r\n    /**\r\n     * 转换颜色格式，如果输入r,g,b则转为hex格式,如果为hex则转为r,g,b格式\r\n     *\r\n     * @method toColor\r\n     * @static\r\n     * @param {string} hex 16进制颜色表达\r\n     * @return {string} 颜色字符串\r\n     */\r\n    static toColor(r, g, b, a) {    \r\n        if(typeof r === 'string' && r) {\r\n            r = this.trim(r); \r\n            // 正常的颜色表达，不需要转换\r\n            if(r[0] === '#' && (r.length === 4 || r.length === 7)) return r;\r\n\r\n            const color = this.hexToRGBA(r);\r\n            if(typeof color === 'string') return color;\r\n            \r\n            r = color.r || r;\r\n            g = color.g || g;\r\n            b = color.b || b;\r\n            a = color.a || a;\r\n        }\r\n        if(typeof r != 'undefined' && typeof g != 'undefined' && typeof b != 'undefined') {\r\n            if(typeof a != 'undefined') {            \r\n                return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\r\n            }\r\n            else {\r\n                return 'rgb(' + r + ',' + g + ',' + b + ')';\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n}\r\nexport { jmUtils };","\r\nimport {jmList} from \"./jmList.js\";\r\n\r\n/**\r\n *  所有jm对象的基础对象\r\n * \r\n * @class jmObject\r\n * @for jmGraph\r\n */\r\nexport default class jmObject {\r\n\t//id;\r\n\tconstructor(g) {\r\n\t\tif(g && g.type == 'jmGraph') {\r\n\t\t\tthis.graph = g;\r\n\t\t}\r\n\t\t//this.id = Symbol(\"id\"); //生成一个唯一id\r\n\t}\r\n\t\r\n\t/**\r\n\t * 检 查对象是否为指定类型\r\n\t * \r\n\t * @method is\r\n\t * @param {class} type 判断的类型\r\n\t * @for jmObject\r\n\t * @return {boolean} true=表示当前对象为指定的类型type,false=表示不是\r\n\t */\r\n\tis(type) {\r\n\t\tif(typeof type == 'string') {\r\n\t\t\treturn this.type == type;\r\n\t\t}\r\n\t\treturn this instanceof type;\r\n\t}\r\n\r\n\t/**\r\n\t * 给控件添加动画处理,如果成功执行会导致画布刷新。\r\n\t *\r\n\t * @method animate\r\n\t * @for jmObject\r\n\t * @param {function} handle 动画委托\r\n\t * @param {integer} millisec 此委托执行间隔 （毫秒）\r\n\t */\r\n\tanimate(...args) {\t\r\n\t\tif(this.is('jmGraph')) {\r\n\t\t\tif(args.length > 1) {\t\t\t\r\n\t\t\t\tif(!this.animateHandles) this.animateHandles = new jmList();\r\n\t\t\t\t\r\n\t\t\t\tvar params = [];\r\n\t\t\t\tif(args.length > 2) {\r\n\t\t\t\t\tfor(var i=2;i<args.length;i++) {\r\n\t\t\t\t\t\tparams.push(args[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\r\n\t\t\t\tthis.animateHandles.add({\r\n\t\t\t\t\tmillisec: args[1] || 20, \r\n\t\t\t\t\thandle: args[0], \r\n\t\t\t\t\tparams:params\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif(this.animateHandles) {\r\n\t\t\t\tif(this.animateHandles.count() > 0) {\r\n\t\t\t\t\tvar self = this;\r\n\t\t\t\t\t//延时处理动画事件\r\n\t\t\t\t\tthis.dispatcher = setTimeout(function(_this) {\r\n\t\t\t\t\t\t_this = _this || self;\r\n\t\t\t\t\t\t//var needredraw = false;\r\n\t\t\t\t\t\tvar overduehandles = [];\r\n\t\t\t\t\t\tvar curTimes = new Date().getTime();\r\n\t\t\t\t\t\t_this.animateHandles.each(function(i,ani) {\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tif(ani && ani.handle && (!ani.times || curTimes - ani.times >= ani.millisec)) {\r\n\t\t\t\t\t\t\t\t\tvar r = ani.handle.apply(_this, ani.params);\r\n\t\t\t\t\t\t\t\t\tif(r === false) {\r\n\t\t\t\t\t\t\t\t\t\toverduehandles.push(ani);//表示已完成的动画效果\r\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tani.times = curTimes;\r\n\t\t\t\t\t\t\t\t\t//needredraw = true;\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch(e) {\r\n\t\t\t\t\t\t\t\tif(window.console && window.console.info) {\r\n\t\t\t\t\t\t\t\t\twindow.console.info(e.toString());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(ani) overduehandles.push(ani);//异常的事件，不再执行\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tfor(var i in overduehandles) {\r\n\t\t\t\t\t\t\t_this.animateHandles.remove(overduehandles[i]);//移除完成的效果\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_this.animate();\r\n\t\t\t\t\t},10,this);//刷新\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\t\telse {\r\n\t\t\tvar graph = this.graph;\r\n\t\t\tif(graph) {\r\n\t\t\t\tgraph.animate(...args);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { jmObject };","import { jmObject } from \"./jmObject.js\";\r\n\r\nconst PROPERTY_KEY = Symbol(\"properties\");\r\n\r\n/**\r\n * 对象属性管理\r\n * \r\n * @class jmProperty\r\n * @extends jmObject\r\n * @require jmObject\r\n */\r\nexport default class jmProperty extends jmObject {\t\t\r\n\t\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis[PROPERTY_KEY] = {};\r\n\t}\r\n\r\n\t/**\r\n\t * 基础属性读写接口\r\n\t * @method __pro\r\n\t * @param {string} name 属性名\r\n\t * @param {any} value 属性的值\r\n\t * @returns {any} 属性的值\r\n\t */\r\n\t__pro(...pars) {\r\n\t\tif(pars) {\r\n\t\t\tlet pros = this[PROPERTY_KEY];\r\n\t\t\tlet name = pars[0];\r\n\t\t\tif(pars.length > 1) {\r\n\t\t\t\tlet value = pars[1];\r\n\t\t\t\tlet args = {oldValue: pros[name], newValue: value};\r\n\t\t\t\tpros[name] = pars[1];\r\n\t\t\t\tif(this.emit) this.emit('propertyChange', name, args);\r\n\t\t\t\treturn pars[1];\r\n\t\t\t}\r\n\t\t\telse if(pars.length == 1) {\r\n\t\t\t\treturn pros[name];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 是否需要刷新画板，属性的改变会导致它变为true\r\n\t * @property needUpdate\r\n\t * @type {boolean}\r\n\t */\r\n\tget needUpdate() {\r\n\t\treturn this.__pro('needUpdate');\r\n\t}\r\n\tset needUpdate(v) {\r\n\t\tthis.__pro('needUpdate', v);\r\n\t\t//子控件属性改变，需要更新整个画板\r\n\t\tif(v && !this.is('jmGraph') && this.graph) {\r\n\t\t\tthis.graph.needUpdate = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 当前所在的画布对象 jmGraph\r\n\t * @property graph\r\n\t * @type {jmGraph}\r\n\t */\r\n\tget graph() {\r\n\t\tlet g = this.__pro('graph');\r\n\t\tg = g || (this.__pro('graph', this.findParent('jmGraph')));\r\n\t\treturn g;\r\n\t}\r\n\tset graph(v) {\r\n\t\treturn this.__pro('graph', v);\r\n\t}\r\n}\r\n\r\nexport { jmProperty };\r\n\r\n\r\n","import {jmUtils} from \"./jmUtils.js\";\r\n\r\n/**\r\n * 画图阴影对象表示法\r\n *\r\n * @class jmShadow\r\n * @param {number} x 横坐标偏移量\r\n * @param {number} y 纵坐标编移量\r\n * @param {number} blur 模糊值\r\n * @param {string} color 阴影的颜色\r\n */\r\n\r\nexport default class jmShadow {\r\n\tconstructor(x, y, blur, color) {\r\n\t\tif(typeof x == 'string' && !y && !blur && !color) {\r\n\t\t\tthis.fromString(x);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.blur = blur;\r\n\t\t\tthis.color = color;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 根据字符串格式转为阴影\r\n\t * @method fromString\r\n\t * @param {string} s 阴影字符串 x,y,blur,color\r\n\t */\r\n\tfromString(s) {\r\n\t\tif(!s) return;\r\n\t\tlet ms = s.match(/\\s*([^,]+)\\s*,\\s*([^,]+)\\s*(,[^,]+)?\\s*(,[\\s\\S]+)?\\s*/i);\r\n\t\tif(ms) {\r\n\t\t\tthis.x = ms[1]||0;\r\n\t\t\tthis.y = ms[2]||0;\r\n\t\t\tif(ms[3]) {\r\n\t\t\t\tms[3] = jmUtils.trim(ms[3],', ');\r\n\t\t\t\t//如果第三位是颜色格式，则表示为颜色\r\n\t\t\t\tif(ms[3].indexOf('#')===0 || /^rgb/i.test(ms[3])) {\r\n\t\t\t\t\tthis.color = ms[3];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.blur = jmUtils.trim(ms[3],', ');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(ms[4]) {\r\n\t\t\t\tthis.color = jmUtils.trim(ms[4],', ');\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * 转为字符串格式 x,y,blur,color\r\n\t * @method toString\r\n\t * @returns {string} 阴影字符串\r\n\t */\r\n\ttoString() {\r\n\t\tlet s = this.x + ',' + this.y;\r\n\t\tif(this.blur) s += ',' + this.blur;\r\n\t\tif(this.color) s += ',' + this.color;\r\n\t\treturn s;\r\n\t}\r\n}\r\n\r\nexport { jmShadow };","import {jmUtils} from \"./jmUtils.js\";\r\nimport {jmList} from \"./jmList.js\";\r\n\r\n/**\r\n * 渐变类\r\n *\r\n * @class jmGradient\r\n * @param {object} op 渐变参数,type:[linear= 线性渐变,radial=放射性渐变] \r\n */\r\nexport default class jmGradient {\r\n\tconstructor(opt) {\r\n\t\tthis.stops = new jmList();\r\n\r\n\t\tif(opt && typeof opt == 'object') {\r\n\t\t\tfor(let k in opt) {\r\n\t\t\t\tthis[k] = opt[k];\r\n\t\t\t}\r\n\t\t}\r\n\t\t//解析字符串格式\r\n\t\t//linear-gradient(direction, color-stop1, color-stop2, ...);\r\n\t\t//radial-gradient(center, shape size, start-color, ..., last-color);\r\n\t\telse if(typeof opt == 'string') {\r\n\t\t\tthis.fromString(opt);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 添加渐变色\r\n\t * \r\n\t * @method addStop\r\n\t * @for jmGradient\r\n\t * @param {number} offset 放射渐变颜色偏移,可为百分比参数。\r\n\t * @param {string} color 当前偏移颜色值\r\n\t */\r\n\taddStop(offset, color) {\r\n\t\tthis.stops.add({\r\n\t\t\toffset: Number(offset),\r\n\t\t\tcolor: color\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * 生成为canvas的渐变对象\r\n\t *\r\n\t * @method toGradient\r\n\t * @for jmGradient\r\n\t * @param {jmControl} control 当前渐变对应的控件\r\n\t * @return {gradient} canvas渐变对象\r\n\t */\r\n\ttoGradient(control) {\r\n\t\tlet gradient;\r\n\t\tlet context = control.context || control;\r\n\t\tlet bounds = control.absoluteBounds?control.absoluteBounds:control.getAbsoluteBounds();\r\n\t\tlet x1 = this.x1||0;\r\n\t\tlet y1 = this.y1||0;\r\n\t\tlet x2 = this.x2;\r\n\t\tlet y2 = this.y2;\r\n\r\n\t\tlet location = control.getLocation();\r\n\r\n\t\tlet d = 0;\r\n\t\tif(location.radius) {\r\n\t\t\td = location.radius * 2;\t\t\t\t\r\n\t\t}\r\n\t\tif(!d) {\r\n\t\t\td = Math.min(location.width,location.height);\t\t\t\t\r\n\t\t}\r\n\r\n\t\t//let offsetLine = 1;//渐变长度或半径\r\n\t\t//处理百分比参数\r\n\t\tif(jmUtils.checkPercent(x1)) {\r\n\t\t\tx1 = jmUtils.percentToNumber(x1) * (location.width || d);\r\n\t\t}\r\n\t\tif(jmUtils.checkPercent(x2)) {\r\n\t\t\tx2 = jmUtils.percentToNumber(x2) * (location.width || d);\r\n\t\t}\r\n\t\tif(jmUtils.checkPercent(y1)) {\r\n\t\t\ty1 = jmUtils.percentToNumber(y1) * (location.height || d);\r\n\t\t}\r\n\t\tif(jmUtils.checkPercent(y2)) {\r\n\t\t\ty2 = jmUtils.percentToNumber(y2) * (location.height || d);\r\n\t\t}\t\r\n\r\n\t\tlet sx1 = Number(x1) + bounds.left;\r\n\t\tlet sy1 = Number(y1) + bounds.top;\r\n\t\tlet sx2 = Number(x2) + bounds.left;\r\n\t\tlet sy2 = Number(y2) + bounds.top;\r\n\t\tif(this.type === 'linear') {\t\t\r\n\t\t\tgradient = context.createLinearGradient(sx1, sy1, sx2, sy2);\t\r\n\t\t\t//let x = Math.abs(x2-x1);\r\n\t\t\t//let y = Math.abs(y2-y1);\r\n\t\t\t//offsetLine = Math.sqrt(x*x + y*y);\r\n\t\t}\r\n\t\telse if(this.type === 'radial') {\r\n\t\t\tlet r1 = this.r1||0;\r\n\t\t\tlet r2 = this.r2;\r\n\t\t\tif(jmUtils.checkPercent(r1)) {\r\n\t\t\t\tr1 = jmUtils.percentToNumber(r1);\t\t\t\r\n\t\t\t\tr1 = d * r1;\r\n\t\t\t}\r\n\t\t\tif(jmUtils.checkPercent(r2)) {\r\n\t\t\t\tr2 = jmUtils.percentToNumber(r2);\r\n\t\t\t\tr2 = d * r2;\r\n\t\t\t}\t\r\n\t\t\t//offsetLine = Math.abs(r2 - r1);//二圆半径差\r\n\t\t\t//小程序的接口特殊\r\n\t\t\tif(context.createCircularGradient) { \r\n\t\t\t\tgradient = context.createCircularGradient(sx1, sy1, r2);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgradient = context.createRadialGradient(sx1, sy1, r1, sx2, sy2, r2);\t\r\n\t\t\t}\t\r\n\t\t}\r\n\t\t//颜色渐变\r\n\t\tthis.stops.each(function(i,s) {\t\r\n\t\t\tlet c = jmUtils.toColor(s.color);\r\n\t\t\t//s.offset 0.0 ~ 1.0\r\n\t\t\tgradient.addColorStop(s.offset, c);\t\t\r\n\t\t});\r\n\t\t\r\n\t\treturn gradient;\r\n\t}\r\n\r\n\t/**\r\n\t * 变换为字条串格式\r\n\t * linear-gradient(x1 y1 x2 y2, color1 step, color2 step, ...);\t//radial-gradient(x1 y1 r1 x2 y2 r2, color1 step,color2 step, ...);\r\n\t * linear-gradient线性渐变，x1 y1表示起点，x2 y2表示结束点,color表颜色，step为当前颜色偏移\r\n\t * radial-gradient径向渐变,x1 y1 r1分别表示内圆中心和半径，x2 y2 r2为结束圆 中心和半径，颜色例似线性渐变 step为0-1之间\r\n\t *\r\n\t * @method fromString\r\n\t * @for jmGradient\r\n\t * @return {string} \r\n\t */\r\n\tfromString(s) {\r\n\t\tif(!s) return;\r\n\t\tlet ms = s.match(/(linear|radial)-gradient\\s*\\(\\s*([^,]+)\\s*,\\s*((.|\\s)+)\\)/i);\r\n\t\tif(!ms || ms.length < 3) return;\r\n\t\tthis.type = ms[1].toLowerCase();\t\t\r\n\t\t\r\n\t\tconst ps = jmUtils.trim(ms[2]).split(/\\s+/);\r\n\t\t//线性渐变\r\n\t\tif(this.type == 'linear') {\r\n\t\t\tif(ps.length <= 2) {\r\n\t\t\t\tthis.x2 = ps[0];\r\n\t\t\t\tthis.y2 = ps[1]||0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.x1 = ps[0];\r\n\t\t\t\tthis.y1 = ps[1];\r\n\t\t\t\tthis.x2 = ps[2];\r\n\t\t\t\tthis.y2 = ps[3];\r\n\t\t\t}\r\n\t\t}\r\n\t\t//径向渐变\r\n\t\telse {\r\n\t\t\tif(ps.length <= 3) {\r\n\t\t\t\tthis.x2 = ps[0];\r\n\t\t\t\tthis.y2 = ps[1]||0;\r\n\t\t\t\tthis.r2 = ps[2]||0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.x1 = ps[0];\r\n\t\t\t\tthis.y1 = ps[1];\r\n\t\t\t\tthis.r1 = ps[2];\r\n\t\t\t\tthis.x2 = ps[3];\r\n\t\t\t\tthis.y2 = ps[3];\r\n\t\t\t\tthis.r2 = ps[3];\r\n\t\t\t}\r\n\t\t}\r\n\t\t//解析颜色偏移\r\n\t\t//color step\r\n\t\tconst pars = ms[3].match(/((rgb(a)?\\s*\\([\\d,\\.\\s]+\\))|(#[a-zA-Z\\d]+))\\s+([\\d\\.]+)/ig);\r\n\t\tif(pars && pars.length) {\r\n\t\t\tfor(let i=1;i<pars.length;i++) {\r\n\t\t\t\tconst par = jmUtils.trim(pars[i]);\r\n\t\t\t\tconst spindex = par.lastIndexOf(' ');\r\n\t\t\t\tif(spindex > -1) {\t\t\t\r\n\t\t\t\t\tconst offset = Number(par.substr(spindex + 1));\t\t\r\n\t\t\t\t\tconst color = jmUtils.trim(par.substr(0, spindex));\r\n\t\t\t\t\tif(!isNaN(offset) && color) {\r\n\t\t\t\t\t\tthis.addStop(offset, color);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 转换为渐变的字符串表达\r\n\t *\r\n\t * @method toString\r\n\t * @for jmGradient\r\n\t * @return {string} linear-gradient(x1 y1 x2 y2, color1 step, color2 step, ...);\t//radial-gradient(x1 y1 r1 x2 y2 r2, color1 step,color2 step, ...);\r\n\t */\r\n\ttoString() {\r\n\t\tlet str = this.type + '-gradient(';\r\n\t\tif(this.type == 'linear') {\r\n\t\t\tstr += this.x1 + ' ' + this.y1 + ' ' + this.x2 + ' ' + this.y2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstr += this.x1 + ' ' + this.y1 + ' ' + this.r1 + ' ' + this.x2 + ' ' + this.y2 + ' ' + this.r2;\r\n\t\t}\r\n\t\t//颜色渐变\r\n\t\tthis.stops.each(function(i,s) {\t\r\n\t\t\tstr += ',' + s.color + ' ' + s.offset;\r\n\t\t});\r\n\t\treturn str + ')';\r\n\t}\r\n}\r\n\r\nexport { jmGradient };\r\n\r\n\r\n\r\n","import {jmUtils} from \"./jmUtils.js\";\r\n/**\r\n * 事件模型\r\n *\r\n * @class jmEvents\r\n * @for jmGraph\r\n */\r\nexport default class jmEvents {\r\n\r\n\tconstructor(container, target) {\r\n\t\tthis.container = container;\r\n\t\tthis.target = target || container;\r\n\t\tthis.mouseHandler = new jmMouseEvent(this, container, target);\r\n\t\tthis.keyHandler = new jmKeyEvent(this, container, target);\r\n\t}\r\n\r\n\ttouchStart(evt) {\r\n\t\tevt = evt || window.event;\r\n\t\tthis.container.raiseEvent('touchstart',evt);\r\n\t\tlet t = evt.target || evt.srcElement;\r\n\t\tif(t == this.target) {\r\n\t\t\t//if(evt.preventDefault) evt.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\ttouchMove(evt) {\r\n\t\tevt = evt || window.event;\r\n\t\tthis.container.raiseEvent('touchmove',evt);\r\n\t\tlet t = evt.target || evt.srcElement;\r\n\t\tif(t == this.target) {\r\n\t\t\t//if(evt.preventDefault) evt.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\ttouchEnd(evt) {\r\n\t\tevt = evt || window.event;\r\n\t\t\r\n\t\tthis.container.raiseEvent('touchend',evt);\r\n\t\tlet t = evt.target || evt.srcElement;\r\n\t\tif(t == this.target) {\r\n\t\t\t//if(evt.preventDefault) evt.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\ttouchCancel(evt) {\r\n\t\tevt = evt || window.event;\r\n\t\t\r\n\t\tthis.container.raiseEvent('touchcancel',evt);\r\n\t\tlet t = evt.target || evt.srcElement;\r\n\t\tif(t == target) {\r\n\t\t\t//if(evt.preventDefault) evt.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * 鼠标事件处理对象，container 为事件主体，target为响应事件对象\r\n */\r\nclass jmMouseEvent {\r\n\tconstructor(instance, container, target) {\r\n\t\tthis.instance = instance;\r\n\t\tthis.container = container;\r\n\t\tthis.target = target || container;\r\n\r\n\t\tthis.init(instance, container, target);\r\n\t}\r\n\t\r\n\tinit(instance, container, target) {\r\n\t\tlet canvas = this.target;\t\r\n\t\tlet doc = typeof typeof document != 'undefined'?document:null;\r\n\t\t//禁用鼠标右健系统菜单\r\n\t\t//canvas.oncontextmenu = function() {\r\n\t\t//\treturn false;\r\n\t\t//};\r\n\r\n\t\tjmUtils.bindEvent(this.target,'mousedown',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tlet r = container.raiseEvent('mousedown',evt);\r\n\t\t\t//if(r === false) {\r\n\t\t\t\t//if(evt.preventDefault) evt.preventDefault();\r\n\t\t\t\t//return false;\r\n\t\t\t//}\t\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tdoc && jmUtils.bindEvent(doc,'mousemove',function(evt) {\t\r\n\t\t\tevt = evt || window.event;\t\t\r\n\t\t\tlet target = evt.target || evt.srcElement;\r\n\t\t\tif(target == canvas) {\r\n\t\t\t\tlet r = container.raiseEvent('mousemove',evt);\r\n\t\t\t\t//if(r === false) {\r\n\t\t\t\t\tif(evt.preventDefault) evt.preventDefault();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t//}\t\t\r\n\t\t\t}\t\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tjmUtils.bindEvent(this.target,'mouseover',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tcontainer.raiseEvent('mouseover',evt);\r\n\t\t});\r\n\t\tjmUtils.bindEvent(this.target,'mouseleave',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tcontainer.raiseEvent('mouseleave',evt);\r\n\t\t});\t\t\t\r\n\t\tjmUtils.bindEvent(this.target,'mouseout',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tcontainer.raiseEvent('mouseout',evt);\r\n\t\t});\r\n\t\tdoc && jmUtils.bindEvent(doc,'mouseup',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\t//let target = evt.target || evt.srcElement;\r\n\t\t\t//if(target == canvas) {\t\t\t\t\t\t\r\n\t\t\t\tlet r = container.raiseEvent('mouseup',evt);\r\n\t\t\t\tif(r === false) {\r\n\t\t\t\t\tif(evt.preventDefault) evt.preventDefault();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\t\t\r\n\t\t\t//}\r\n\t\t});\r\n\t\t\r\n\t\tjmUtils.bindEvent(this.target,'dblclick',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tcontainer.raiseEvent('dblclick',evt);\r\n\t\t});\r\n\t\tjmUtils.bindEvent(this.target,'click',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tcontainer.raiseEvent('click',evt);\r\n\t\t});\r\n\r\n\t\tdoc && jmUtils.bindEvent(doc,'resize',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\treturn container.raiseEvent('resize',evt);\r\n\t\t});\r\n\r\n\t\t// passive: false 为了让浏览器不告警并且preventDefault有效\r\n\t\t// 另一种处理：touch-action: none; 这样任何触摸事件都不会产生默认行为，但是 touch 事件照样触发。\r\n\t\tdoc && jmUtils.bindEvent(doc,'touchstart', function(evt) {\r\n\t\t\treturn instance.touchStart(evt);\r\n\t\t},{ passive: false });\r\n\r\n\t\tdoc && jmUtils.bindEvent(doc,'touchmove', function(evt) {\r\n\t\t\treturn instance.touchMove(evt);\r\n\t\t},{ passive: false });\r\n\r\n\t\tdoc && jmUtils.bindEvent(doc,'touchend', function(evt) {\r\n\t\t\treturn instance.touchEnd(evt);\r\n\t\t},{ passive: false });\r\n\r\n\t\tdoc && jmUtils.bindEvent(doc,'touchcancel', function(evt) {\r\n\t\t\treturn instance.touchCancel(evt);\r\n\t\t},{ passive: false });\r\n\t}\r\n}\r\n\r\n/**\r\n * 健盘事件处理对象，container 为事件主体，target为响应事件对象\r\n */\r\nclass jmKeyEvent {\r\n\tconstructor(instance, container,target) {\r\n\t\tthis.instance = instance;\r\n\t\tthis.container = container;\r\n\t\tthis.target = target || container;\r\n\r\n\t\tthis.init(container, target);\r\n\t}\r\n\r\n\t/**\r\n\t * 初始化健盘事件\r\n\t */\r\n\tinit(container, target) {\r\n\t\tlet doc = typeof typeof document != 'undefined'?document:null;\r\n\t\t/**\r\n\t\t * 检查是否触发健盘事件至画布\r\n\t\t * 如果触发对象为输入框等对象则不响应事件\r\n\t\t *  \r\n\t\t */\r\n\t\tlet checkKeyEvent = (evt) => {\r\n\t\t\tlet target = evt.srcElement || evt.target;\r\n\t\t\tif(target && (target.tagName == 'INPUT' \r\n\t\t\t\t|| target.tagName == 'TEXTAREA'\r\n\t\t\t\t|| target.tagName == 'ANCHOR' \r\n\t\t\t\t|| target.tagName == 'FORM' \r\n\t\t\t\t|| target.tagName == 'FILE'\r\n\t\t\t\t|| target.tagName == 'IMG'\r\n\t\t\t\t|| target.tagName == 'HIDDEN'\r\n\t\t\t\t|| target.tagName == 'RADIO'\r\n\t\t\t\t|| target.tagName == 'TEXT'\t)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tdoc && jmUtils.bindEvent(doc,'keypress',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tif(!checkKeyEvent(evt)) return;//如果事件为其它输入框，则不响应\r\n\t\t\tlet r = container.raiseEvent('keypress',evt);\r\n\t\t\tif(r === false && evt.preventDefault) \r\n\t\t\t\tevt.preventDefault();\r\n\t\t\treturn r;\r\n\t\t});\r\n\t\tdoc && jmUtils.bindEvent(doc,'keydown',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tif(!checkKeyEvent(evt)) return;//如果事件为其它输入框，则不响应\r\n\t\t\tlet r = container.raiseEvent('keydown',evt);\r\n\t\t\tif(r === false && evt.preventDefault) \r\n\t\t\t\tevt.preventDefault();\r\n\t\t\treturn r;\r\n\t\t});\r\n\t\tdoc && jmUtils.bindEvent(doc,'keyup',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tif(!checkKeyEvent(evt)) return;//如果事件为其它输入框，则不响应\r\n\t\t\tlet r = container.raiseEvent('keyup',evt);\r\n\t\t\tif(r === false && evt.preventDefault) \r\n\t\t\t\tevt.preventDefault();\r\n\t\t\treturn r;\r\n\t\t});\t\t\t\r\n\t}\r\n}\r\n\r\nexport { jmEvents };\r\n","\r\nimport {jmUtils} from \"./jmUtils.js\";\r\nimport {jmList} from \"./jmList.js\";\r\nimport {jmGradient} from \"./jmGradient.js\";\r\nimport {jmShadow} from \"./jmShadow.js\";\r\nimport {jmProperty} from \"./jmProperty.js\";\r\n\r\n/**\r\n * 控件基础对象\r\n * 控件的基础属性和方法\r\n *\r\n * @class jmControl\r\n * @extends jmProperty\r\n */\t\r\nexport default class jmControl extends jmProperty {\t\r\n\r\n\tconstructor(params, t) {\r\n\t\tparams = params||{};\r\n\t\tsuper();\r\n\t\tthis.__pro('type', t || new.target.name);\r\n\t\tthis.style = params && params.style ? params.style : {};\r\n\t\t//this.position = params.position || {x:0,y:0};\r\n\t\tthis.width = params.width || 0;\r\n\t\tthis.height = params.height  || 0;\r\n\r\n\t\tif(params.position) {\r\n\t\t\tthis.position = params.position;\r\n\t\t}\r\n\r\n\t\tthis.graph = params.graph || null;\r\n\t\tthis.zIndex = params.zIndex || 0;\r\n\t\tthis.interactive = typeof params.interactive == 'undefined'? true : params.interactive;\r\n\r\n\t\t//样式名称，也当做白名单使用\t\t\r\n\t\tthis.jmStyleMap = {\r\n\t\t\t'fill':'fillStyle',\r\n\t\t\t'stroke':'strokeStyle',\r\n\t\t\t'shadow.blur':'shadowBlur',\r\n\t\t\t'shadow.x':'shadowOffsetX',\r\n\t\t\t'shadow.y':'shadowOffsetY',\r\n\t\t\t'shadow.color':'shadowColor',\r\n\t\t\t'lineWidth' : 'lineWidth',\r\n\t\t\t'miterLimit': 'miterLimit',\r\n\t\t\t'fillStyle' : 'fillStyle',\r\n\t\t\t'strokeStyle' : 'strokeStyle',\r\n\t\t\t'font' : 'font',\r\n\t\t\t'opacity' : 'globalAlpha',\r\n\t\t\t'textAlign' : 'textAlign',\r\n\t\t\t'textBaseline' : 'textBaseline',\r\n\t\t\t'shadowBlur' : 'shadowBlur',\r\n\t\t\t'shadowOffsetX' : 'shadowOffsetX',\r\n\t\t\t'shadowOffsetY' : 'shadowOffsetY',\r\n\t\t\t'shadowColor' : 'shadowColor',\r\n\t\t\t'lineJoin': 'lineJoin',//线交汇处的形状,miter(默认，尖角),bevel(斜角),round（圆角）\r\n\t\t\t'lineCap':'lineCap' //线条终端点,butt(默认，平),round(圆),square（方）\r\n\t\t};\r\n\r\n\t\tthis.initializing();\t\r\n\t\t\r\n\t\tthis.on = this.bind;\t\t\r\n\t}\r\n\r\n\t//# region 定义属性\r\n\t/**\r\n\t * 当前对象类型名jmRect\r\n\t *\r\n\t * @property type\r\n\t * @type string\r\n\t */\r\n\tget type() {\r\n\t\treturn this.__pro('type');\r\n\t}\r\n\r\n\t/**\r\n\t * 当前canvas的context\r\n\t * @property context\r\n\t * @type {object}\r\n\t */\r\n\tget context() {\r\n\t\tlet s = this.__pro('context');\r\n\t\tif(s) return s;\r\n\t\telse if(this.is('jmGraph') && this.canvas) {\r\n\t\t\treturn this.context = this.canvas.getContext('2d');\r\n\t\t}\r\n\t\tlet g = this.graph;\r\n\t\tif(g) return g.context;\r\n\t\treturn g.canvas.getContext('2d');\r\n\t}\r\n\tset context(v) {\r\n\t\treturn this.__pro('context', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 样式\r\n\t * @property style\r\n\t * @type {object}\r\n\t */\r\n\tget style() {\r\n\t\tlet s = this.__pro('style');\r\n\t\tif(!s) s = this.__pro('style', {});\r\n\t\treturn s;\r\n\t}\r\n\tset style(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.__pro('style', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 当前控件是否可见\r\n\t * @property visible\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tget visible() {\r\n\t\tlet s = this.__pro('visible');\r\n\t\tif(typeof s == 'undefined') s = this.__pro('visible', true);\r\n\t\treturn s;\r\n\t}\r\n\tset visible(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.__pro('visible', v);\r\n\t}\t\r\n\r\n\t/**\r\n\t * 当前控件是否是交互式的，如果是则会响应鼠标或touch事件。\r\n\t * 如果false则不会主动响应，但冒泡的事件依然会得到回调\r\n\t * @property interactive\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tget interactive() {\r\n\t\tlet s = this.__pro('interactive');\r\n\t\treturn s;\r\n\t}\r\n\tset interactive(v) {\r\n\t\treturn this.__pro('interactive', v);\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * 当前控件的子控件集合\r\n\t * @property children\r\n\t * @type {list}\r\n\t */\r\n\tget children() {\r\n\t\tlet s = this.__pro('children');\r\n\t\tif(!s) s = this.__pro('children', new jmList());\r\n\t\treturn s;\r\n\t}\r\n\tset children(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.__pro('children', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 宽度\r\n\t * @property width\r\n\t * @type {number}\r\n\t */\r\n\tget width() {\r\n\t\tlet s = this.__pro('width');\r\n\t\tif(typeof s == 'undefined') s = this.__pro('width', 0);\r\n\t\treturn s;\r\n\t}\r\n\tset width(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.__pro('width', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 高度\r\n\t * @property height\r\n\t * @type {number}\r\n\t */\r\n\tget height() {\r\n\t\tlet s = this.__pro('height');\r\n\t\tif(typeof s == 'undefined') s = this.__pro('height', 0);\r\n\t\treturn s;\r\n\t}\r\n\tset height(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.__pro('height', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 控件层级关系，发生改变时，需要重新调整排序\r\n\t * @property zIndex\r\n\t * @type {number}\r\n\t */\r\n\tget zIndex() {\r\n\t\tlet s = this.__pro('zIndex');\r\n\t\tif(!s) s = this.__pro('zIndex', 0);\r\n\t\treturn s;\r\n\t}\r\n\tset zIndex(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\tthis.__pro('zIndex', v);\r\n\t\tthis.children.sort();//层级发生改变，需要重新排序\r\n\t\tthis.needUpdate = true;\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * 设置鼠标指针\r\n\t * css鼠标指针标识,例如:pointer,move等\r\n\t * \r\n\t * @property cursor\r\n\t * @type {string}\r\n\t */\r\n\tset cursor(cur) {\t\r\n\t\tvar graph = this.graph ;\r\n\t\tif(graph) {\t\t\r\n\t\t\tgraph.css('cursor',cur);\t\t\r\n\t\t}\r\n\t}\r\n\tget cursor() {\r\n\t\tvar graph = this.graph ;\r\n\t\tif(graph) {\t\t\r\n\t\t\treturn graph.css('cursor');\t\t\r\n\t\t}\r\n\t}\r\n\r\n\t//# end region\r\n\r\n\t/**\r\n\t * 初始化对象，设定样式，初始化子控件对象\r\n\t * 此方法为所有控件需调用的方法\r\n\t *\r\n\t * @method initializing\r\n\t * @for jmControl\r\n\t */\r\n\tinitializing() {\r\n\r\n\t\tvar self = this;\r\n\t\t//定义子元素集合\r\n\t\tthis.children = this.children || new jmList();\r\n\t\tvar oadd = this.children.add;\r\n\t\t//当把对象添加到当前控件中时，设定其父节点\r\n\t\tthis.children.add = function(obj) {\r\n\t\t\tif(typeof obj === 'object') {\r\n\t\t\t\tif(obj.parent && obj.parent != self && obj.parent.children) {\r\n\t\t\t\t\tobj.parent.children.remove(obj);//如果有父节点则从其父节点中移除\r\n\t\t\t\t}\r\n\t\t\t\tobj.parent = self;\r\n\t\t\t\t//如果存在先移除\r\n\t\t\t\tif(this.contain(obj)) {\r\n\t\t\t\t\tthis.oremove(obj);\r\n\t\t\t\t}\r\n\t\t\t\toadd.call(this, obj);\r\n\t\t\t\tobj.emit('add', obj);\r\n\r\n\t\t\t\tself.needUpdate = true;\r\n\t\t\t\tif(self.graph) obj.graph = self.graph;\r\n\t\t\t\tthis.sort();//先排序\r\n\t\t\t\t//self.emit('addChild', obj);\r\n\t\t\t\treturn obj;\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.children.oremove= this.children.remove;\r\n\t\t//当把对象从此控件中移除时，把其父节点置为空\r\n\t\tthis.children.remove = function(obj) {\r\n\t\t\tif(typeof obj === 'object') {\t\t\t\t\r\n\t\t\t\tobj.parent = null;\r\n\t\t\t\tobj.graph = null;\r\n\t\t\t\tobj.remove(true);\r\n\t\t\t\tthis.oremove(obj);\r\n\t\t\t\tself.needUpdate = true;\r\n\t\t\t\t//self.emit('removeChild', obj, index);\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * 根据控件zIndex排序，越大的越高\r\n\t\t */\r\n\t\tthis.children.sort = function() {\r\n\t\t\tconst levelItems = {};\r\n\t\t\t//提取zindex大于0的元素\r\n\t\t\t//为了保证0的层级不改变，只能把大于0的提出来。\r\n\t\t\tthis.each(function(i, obj) {\r\n\t\t\t\tif(!obj) return;\r\n\t\t\t\tlet zindex = obj.zIndex;\r\n\t\t\t\tif(!zindex && obj.style && obj.style.zIndex) {\r\n\t\t\t\t\tzindex = Number(obj.style.zIndex);\r\n\t\t\t\t\tif(isNaN(zindex)) zindex=obj.style.zIndex||0;\r\n\t\t\t\t}\r\n\t\t\t\tif(zindex) {\r\n\t\t\t\t\tlet items = levelItems[zindex] || (levelItems[zindex] = []);\r\n\t\t\t\t\titems.push(obj);\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tfor(let index in levelItems) {\r\n\t\t\t\t// 先从数组内去掉， 再加到进后\r\n\t\t\t\tfor(let i=0; i< levelItems[index].length; i++) {\r\n\t\t\t\t\tthis.oremove(levelItems[index][i]);\r\n\t\t\t\t}\r\n\t\t\t\toadd.call(this, levelItems[index]);\r\n\t\t\t}\r\n\r\n\t\t\tself.needUpdate = true;\r\n\t\t}\r\n\t\tthis.children.clear = function() {\r\n\t\t\tthis.each(function(i,obj) {\r\n\t\t\t\tthis.remove(obj);\r\n\t\t\t},true);\r\n\t\t}\r\n\t\tthis.needUpdate = true;\r\n\t} \r\n\r\n\t/**\r\n\t * 设定样式到context\r\n\t * 处理样式映射，转换渐变和阴影对象为标准canvas属性\r\n\t * 样式一览\r\n\t\t| 简化名称 | 原生名称 | 说明\r\n\t\t| :- | :- | :- | \r\n\t\t| fill | fillStyle | 用于填充绘画的颜色、渐变或模式\r\n\t\t| stroke | strokeStyle | 用于笔触的颜色、渐变或模式\r\n\t\t| shadow | 没有对应的 | 最终会解析成以下几个属性，格式：'0,0,10,#fff'或g.createShadow(0,0,20,'#000');\r\n\t\t| shadow.blur | shadowBlur | 用于阴影的模糊级别\r\n\t\t| shadow.x | shadowOffsetX | 阴影距形状的水平距离\r\n\t\t| shadow.y | shadowOffsetY | 阴影距形状的垂直距离\r\n\t\t| shadow.color | shadowColor | 阴影颜色，格式：'#000'、'#46BF86'、'rgb(255,255,255)'或'rgba(39,72,188,0.5)'\r\n\t\t| lineWidth | lineWidth | 当前的线条宽度\r\n\t\t| miterLimit | miterLimit | 最大斜接长度\r\n\t\t| font | font | 请使用下面的 fontSize 和 fontFamily\r\n\t\t| fontSize | font | 字体大小\r\n\t\t| fontFamily | font | 字体\r\n\t\t| opacity | globalAlpha | 绘图的当前 alpha 或透明值\r\n\t\t| textAlign | textAlign | 文本内容的当前对齐方式\r\n\t\t| textBaseline | textBaseline | 在绘制文本时使用的当前文本基线\r\n\t\t| lineJoin | lineJoin | 两条线相交时，所创建的拐角类型：miter(默认，尖角),bevel(斜角),round（圆角）\r\n\t\t| lineCap | lineCap | 线条的结束端点样式：butt(默认，平),round(圆),square（方）\r\n\t * \r\n\t * @method setStyle\r\n\t * @for jmControl\r\n\t * @private\r\n\t * @param {style} style 样式对象，如:{fill:'black',stroke:'red'}\r\n\t */\r\n\tsetStyle(style) {\r\n\t\tstyle = style || this.style;\r\n\t\tif(!style) return;\r\n\r\n\t\t/**\r\n\t\t * 样式设定\r\n\t\t * \r\n\t\t * @method __setStyle\r\n\t\t * @private\r\n\t\t * @param {jmControl} control 当前样式对应的控件对象\r\n\t\t * @param {style} style 样式\r\n\t\t * @param {string} name 样式名称\r\n\t\t * @param {string} mpkey 样式名称在映射中的key(例如：shadow.blur为模糊值)\r\n\t\t */\r\n\t\tlet __setStyle = (style, name, mpkey) => {\r\n\t\t\t//let styleValue = style[mpkey||name]||style;\r\n\t\t\tif(style) {\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tlet t = typeof style;\t\r\n\t\t\t\tlet mpname = this.jmStyleMap[mpkey || name];\r\n\r\n\t\t\t\t//如果为渐变对象\r\n\t\t\t\tif((style instanceof jmGradient) || (t == 'string' && style.indexOf('-gradient') > -1)) {\r\n\t\t\t\t\t//如果是渐变，则需要转换\r\n\t\t\t\t\tif(t == 'string' && style.indexOf('-gradient') > -1) {\r\n\t\t\t\t\t\tstyle = new jmGradient(style);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t__setStyle(style.toGradient(this), mpname||name);\t\r\n\t\t\t\t}\r\n\t\t\t\telse if(t == 'function') {\t\t\t\t\t\r\n\t\t\t\t\tif(mpname) {\r\n\t\t\t\t\t\tstyle = style.call(this, mpname);\r\n\t\t\t\t\t\tif(style) {\r\n\t\t\t\t\t\t\t__setStyle(style, mpname);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(mpname) {\r\n\t\t\t\t\t//只有存在白名单中才处理\r\n\t\t\t\t\t//颜色转换\r\n\t\t\t\t\tif(t == 'string' && ['fillStyle', 'strokeStyle', 'shadowColor'].indexOf(mpname) > -1) {\r\n\t\t\t\t\t\tstyle = jmUtils.toColor(style);\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\tthis.context[mpname] = style;\r\n\t\t\t\t}\t\r\n\t\t\t\telse {\r\n\t\t\t\t\tswitch(name) {\r\n\t\t\t\t\t\t//阴影样式\r\n\t\t\t\t\t\tcase 'shadow' : {\r\n\t\t\t\t\t\t\tif(t == 'string') {\r\n\t\t\t\t\t\t\t\t__setStyle(new jmShadow(style), name);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor(let k in style) {\r\n\t\t\t\t\t\t\t\t__setStyle(style[k], k, name + '.' + k);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//平移\r\n\t\t\t\t\t\tcase 'translate' : {\r\n\t\t\t\t\t\t\tthis.context.translate(style.x,style.y);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//旋转\r\n\t\t\t\t\t\tcase 'rotation' : {\t\r\n\t\t\t\t\t\t\tif(!style.angle) break;\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//旋 转先移位偏移量\r\n\t\t\t\t\t\t\tlet tranX = 0;\r\n\t\t\t\t\t\t\tlet tranY = 0;\r\n\t\t\t\t\t\t\t//旋转，则移位，如果有中心位则按中心旋转，否则按左上角旋转\r\n\t\t\t\t\t\t\t//这里只有style中的旋转才能生效，不然会导至子控件多次旋转\r\n\t\t\t\t\t\t\tif(style.point) {\r\n\t\t\t\t\t\t\t\tlet bounds = this.absoluteBounds?this.absoluteBounds:this.getAbsoluteBounds();\r\n\t\t\t\t\t\t\t\tstyle = this.getRotation(style);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\ttranX = style.rotateX + bounds.left;\r\n\t\t\t\t\t\t\t\ttranY = style.rotateY + bounds.top;\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(tranX!=0 || tranY != 0) this.context.translate(tranX,tranY);\r\n\t\t\t\t\t\t\tthis.context.rotate(style.angle);\r\n\t\t\t\t\t\t\tif(tranX!=0 || tranY != 0) this.context.translate(-tranX,-tranY);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase 'transform' : {\r\n\t\t\t\t\t\t\tif(Array.isArray(style)) {\r\n\t\t\t\t\t\t\t\tthis.context.transform.apply(this.context, style);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if(typeof style == 'object') {\r\n\t\t\t\t\t\t\t\tthis.context.transform(style.scaleX,//水平缩放\r\n\t\t\t\t\t\t\t\t\tstyle.skewX,//水平倾斜\r\n\t\t\t\t\t\t\t\t\tstyle.skewY,//垂直倾斜\r\n\t\t\t\t\t\t\t\t\tstyle.scaleY,//垂直缩放\r\n\t\t\t\t\t\t\t\t\tstyle.offsetX,//水平位移\r\n\t\t\t\t\t\t\t\t\tstyle.offsetY);//垂直位移\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//位移\r\n\t\t\t\t\t\tcase 'translate' : {\r\n\t\t\t\t\t\t\tthis.context.translate(style.x,style.y);\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//鼠标指针\r\n\t\t\t\t\t\tcase 'cursor' : {\r\n\t\t\t\t\t\t\tthis.cursor = style;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\r\n\t\t//一些特殊属性要先设置，否则会导致顺序不对出现错误的效果\r\n\t\tif(this.translate) {\r\n\t\t\t__setStyle({translate: this.translate}, 'translate');\r\n\t\t}\r\n\t\tif(this.transform) {\r\n\t\t\t__setStyle({transform: this.transform}, 'transform');\r\n\t\t}\r\n\t\t//设置样式\r\n\t\tfor(let k in style) {\r\n\t\t\tlet t = typeof style[k];\r\n\t\t\t//先处理部分样式，以免每次都需要初始化解析\r\n\t\t\tif(t == 'string' && style[k].indexOf('-gradient') > -1) {\r\n\t\t\t\tstyle[k] = new jmGradient(style[k]);\r\n\t\t\t}\r\n\t\t\telse if(t == 'string' && k == 'shadow') {\r\n\t\t\t\tstyle[k] = new jmShadow(style[k]);\r\n\t\t\t}\r\n\t\t\t__setStyle(style[k], k);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前控件的边界\r\n\t * 通过分析控件的描点或位置加宽高得到为方形的边界\r\n\t *\r\n\t * @method getBounds\r\n\t * @for jmControl\r\n\t * @param {boolean} [isReset=false] 是否强制重新计算\r\n\t * @return {object} 控件的边界描述对象(left,top,right,bottom,width,height)\r\n\t */\r\n\tgetBounds(isReset) {\r\n\t\t//如果当次计算过，则不重复计算\r\n\t\tif(this.bounds && !isReset) return this.bounds;\r\n\r\n\t\tlet rect = {}; // left top\r\n\t\t//jmGraph，特殊处理\r\n\t\tif(this.type == 'jmGraph' && this.canvas) {\r\n\t\t\tif(typeof this.canvas.width === 'function') {\r\n\t\t\t\trect.right = this.canvas.width(); \r\n\t\t\t}\r\n\t\t\telse if(this.canvas.width) {\r\n\t\t\t\trect.right = this.canvas.width; \r\n\t\t\t}\r\n\t\t\telse if(this.width) {\r\n\t\t\t\trect.right = this.width;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(typeof this.canvas.height === 'function') {\r\n\t\t\t\trect.bottom = this.canvas.height(); \r\n\t\t\t}\r\n\t\t\telse if(this.canvas.height) {\r\n\t\t\t\trect.bottom = this.canvas.height; \r\n\t\t\t}\r\n\t\t\telse if(this.height) {\r\n\t\t\t\trect.bottom = this.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.points && this.points.length > 0) {\t\t\r\n\t\t\tfor(let i in this.points) {\r\n\t\t\t\tlet p = this.points[i];\r\n\t\t\t\tif(typeof rect.left === 'undefined' || rect.left > p.x) {\r\n\t\t\t\t\trect.left = p.x;\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof rect.top === 'undefined'  || rect.top > p.y) {\r\n\t\t\t\t\trect.top = p.y;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof rect.right === 'undefined'  || rect.right < p.x) {\r\n\t\t\t\t\trect.right = p.x;\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof rect.bottom === 'undefined' || rect.bottom < p.y) {\r\n\t\t\t\t\trect.bottom = p.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.getLocation) {\r\n\t\t\tlet p = this.getLocation();\r\n\t\t\tif(p) {\r\n\t\t\t\trect.left = p.left;\r\n\t\t\t\trect.top = p.top;\r\n\t\t\t\trect.right = p.left + p.width;\r\n\t\t\t\trect.bottom = p.top + p.height;\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\tif(!rect.left) rect.left = 0; \r\n\t\tif(!rect.top) rect.top = 0; \r\n\t\tif(!rect.right) rect.right = 0; \r\n\t\tif(!rect.bottom) rect.bottom = 0; \r\n\t\trect.width = rect.right - rect.left;\r\n\t\trect.height = rect.bottom - rect.top;\r\n\t\treturn this.bounds=rect;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前控件的位置相关参数\r\n\t * 解析百分比和margin参数\r\n\t *\r\n\t * @method getLocation\r\n\t * @return {object} 当前控件位置参数，包括中心点坐标，右上角坐标，宽高\r\n\t */\r\n\tgetLocation(clone=true) {\r\n\t\t//如果已经计算过则直接返回\r\n\t\t//在开画之前会清空此对象\r\n\t\t//if(reset !== true && this.location) return this.location;\r\n\r\n\t\tlet local = this.location = {left: 0,top: 0,width: 0,height: 0};\r\n\t\tlocal.position = typeof this.position == 'function'? this.position(): jmUtils.clone(this.position);\t\r\n\t\tlocal.center = this.center && typeof this.center === 'function'?this.center(): jmUtils.clone(this.center);//中心\r\n\t\tlocal.start = this.start && typeof this.start === 'function'?this.start(): jmUtils.clone(this.start);//起点\r\n\t\tlocal.end = this.end && typeof this.end === 'function'?this.end(): jmUtils.clone(this.end);//起点\r\n\t\tlocal.radius = this.radius;//半径\r\n\t\tlocal.width = this.width;\r\n\t\tlocal.height = this.height;\r\n\r\n\t\tlet margin = this.style.margin || {};\r\n\t\tmargin.left = margin.left || 0;\r\n\t\tmargin.top = margin.top || 0;\r\n\t\tmargin.right = margin.right || 0;\r\n\t\tmargin.bottom = margin.bottom || 0;\r\n\t\t\r\n\t\t//如果没有指定位置，但指定了margin。则位置取margin偏移量\r\n\t\tif(local.position) {\r\n\t\t\tlocal.left = local.position.x;\r\n\t\t\tlocal.top = local.position.y;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlocal.left = margin.left;\r\n\t\t\tlocal.top = margin.top;\r\n\t\t}\r\n\r\n\t\tif(!this.parent) return local;//没有父节点则直接返回\r\n\t\tlet parentBounds = this.parent.getBounds();\t\r\n\r\n\t\t//处理百分比参数\r\n\t\tif(jmUtils.checkPercent(local.left)) {\r\n\t\t\tlocal.left = jmUtils.percentToNumber(local.left) * parentBounds.width;\r\n\t\t}\r\n\t\tif(jmUtils.checkPercent(local.top)) {\r\n\t\t\tlocal.top = jmUtils.percentToNumber(local.top) * parentBounds.height;\r\n\t\t}\r\n\t\t\r\n\t\t//如果没有指定宽度或高度，则按百分之百计算其父宽度或高度\r\n\t\tif(jmUtils.checkPercent(local.width)) {\r\n\t\t\tlocal.width = jmUtils.percentToNumber(local.width) * parentBounds.width;\r\n\t\t}\r\n\t\tif(jmUtils.checkPercent(local.height)) {\r\n\t\t\tlocal.height = jmUtils.percentToNumber(local.height) * parentBounds.height;\r\n\t\t}\r\n\t\t//处理中心点\r\n\t\tif(local.center) {\r\n\t\t\t//处理百分比参数\r\n\t\t\tif(jmUtils.checkPercent(local.center.x)) {\r\n\t\t\t\tlocal.center.x = jmUtils.percentToNumber(local.center.x) * parentBounds.width;\r\n\t\t\t}\r\n\t\t\tif(jmUtils.checkPercent(local.center.y)) {\r\n\t\t\t\tlocal.center.y = jmUtils.percentToNumber(local.center.y) * parentBounds.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(local.radius) {\r\n\t\t\t//处理百分比参数\r\n\t\t\tif(jmUtils.checkPercent(local.radius)) {\r\n\t\t\t\tlocal.radius = jmUtils.percentToNumber(local.radius) * Math.min(parentBounds.width, parentBounds.height);\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\treturn local;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前控制的旋转信息\r\n\t * @returns {object} 旋转中心和角度\r\n\t */\r\n\tgetRotation(rotation) {\r\n\t\trotation = rotation || this.style.rotation;\r\n\t\tif(!rotation) {\r\n\t\t\t//如果本身没有，则可以继承父级的\r\n\t\t\trotation = this.parent && this.parent.getRotation?this.parent.getRotation():null;\r\n\t\t\t//如果父级有旋转，则把坐标转换为当前控件区域\r\n\t\t\tif(rotation) {\r\n\t\t\t\tlet bounds = this.getBounds();\r\n\t\t\t\trotation.rotateX -= bounds.left;\r\n\t\t\t\trotation.rotateY -= bounds.top;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet bounds = this.getBounds();\r\n\t\t\trotation.rotateX = rotation.point.x;\r\n\t\t\tif(jmUtils.checkPercent(rotation.rotateX)) {\r\n\t\t\t\trotation.rotateX  = jmUtils.percentToNumber(rotation.rotateX) * bounds.width;\r\n\t\t\t}\r\n\r\n\t\t\trotation.rotateY = rotation.point.y;\r\n\t\t\tif(jmUtils.checkPercent(rotation.rotateY)) {\r\n\t\t\t\trotation.rotateY  = jmUtils.percentToNumber(rotation.rotateY) * bounds.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rotation;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * 移除当前控件\r\n\t * 如果是VML元素，则调用其删除元素\r\n\t *\r\n\t * @method remove \r\n\t */\r\n\tremove() {\t\r\n\t\tif(this.parent) {\r\n\t\t\tthis.parent.children.remove(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 对控件进行平移\r\n\t * 遍历控件所有描点或位置，设置其偏移量。\r\n\t *\r\n\t * @method offset\r\n\t * @param {number} x x轴偏移量\r\n\t * @param {number} y y轴偏移量\r\n\t * @param {boolean} [trans] 是否传递,监听者可以通过此属性是否决定是否响应移动事件,默认=true\r\n\t * @param {object} [evt] 如果是事件触发，则传递move事件参数\r\n\t */\r\n\toffset(x, y, trans, evt) {\r\n\t\ttrans = trans === false?false:true;\t\r\n\t\tlet local = this.getLocation(true);\t\t\r\n\t\tlet offseted = false;\r\n\t\t\r\n\t\tif(local.position) {\r\n\t\t\tlocal.left += x;\r\n\t\t\tlocal.top += y;\r\n\t\t\t// 由于local是clone出来的对象，为了保留位移，则要修改原属性\r\n\t\t\tthis.position.x = local.left;\r\n\t\t\tthis.position.y = local.top;\r\n\t\t\toffseted = true;\r\n\t\t}\r\n\r\n\t\tif(local.center) {\t\t\r\n\t\t\tthis.center.x = local.center.x + x;\r\n\t\t\tthis.center.y = local.center.y + y;\r\n\t\t\toffseted = true;\r\n\t\t}\r\n\r\n\t\tif(local.start && typeof local.start == 'object') {\t\r\n\t\t\tthis.start.x = local.start.x + x;\r\n\t\t\tthis.start.y = local.start.y + y;\r\n\t\t\toffseted = true;\r\n\t\t}\r\n\r\n\t\tif(local.end && typeof local.end == 'object') {\t\t\r\n\t\t\tthis.end.x = local.end.x + x;\r\n\t\t\tthis.end.y = local.end.y + y;\r\n\t\t\toffseted = true;\r\n\t\t}\r\n\r\n\r\n\t\tif(offseted == false && this.cpoints) {\r\n\t\t\tlet p = typeof this.cpoints == 'function'?this.cpoints:this.cpoints;\r\n\t\t\tif(p) {\t\t\t\r\n\t\t\t\tlet len = p.length;\r\n\t\t\t\tfor(let i=0; i < len;i++) {\r\n\t\t\t\t\tp[i].x += x;\r\n\t\t\t\t\tp[i].y += y;\r\n\t\t\t\t}\t\t\r\n\t\t\t\toffseted = true;\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif(offseted == false && this.points) {\r\n\t\t\tlet len = this.points.length;\r\n\t\t\tfor(let i=0; i < len;i++) {\r\n\t\t\t\tthis.points[i].x += x;\r\n\t\t\t\tthis.points[i].y += y;\r\n\t\t\t}\r\n\t\t\toffseted = true;\r\n\t\t}\r\n\t\t\r\n\t\t//触发控件移动事件\t\r\n\t\tthis.emit('move',{\r\n\t\t\toffsetX: x,\r\n\t\t\toffsetY: y,\r\n\t\t\ttrans: trans,\r\n\t\t\tevt: evt\r\n\t\t});\r\n\r\n\t\tthis.needUpdate = true;\r\n\t}\r\n\r\n\t/**\r\n\t * 把图形旋转一个角度\r\n\t * @param {number} angle 旋转角度\r\n\t * @param {object} point 旋转坐标，可以是百分比,例如：{x: '50%',y: '50%'}\r\n\t */\r\n\trotate(angle, point) {\t\r\n\t\t/*this.children.each(function(i,c){\r\n\t\t\tc.rotate(angle);\r\n\t\t});*/\r\n\t\tthis.style.rotation = {\r\n\t\t\tangle: angle,\r\n\t\t\tpoint: point\r\n\t\t};\r\n\r\n\t\tthis.needUpdate = true;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取控件相对于画布的绝对边界，\r\n\t * 与getBounds不同的是：getBounds获取的是相对于父容器的边界.\r\n\t *\r\n\t * @method getAbsoluteBounds\r\n\t * @return {object} 边界对象(left,top,right,bottom,width,height)\r\n\t */\r\n\tgetAbsoluteBounds() {\r\n\t\t//当前控件的边界，\r\n\t\tlet rec = this.getBounds();\r\n\t\tif(this.parent && this.parent.absoluteBounds) {\r\n\t\t\t//父容器的绝对边界\r\n\t\t\tlet prec = this.parent.absoluteBounds || this.parent.getAbsoluteBounds();\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\tleft : prec.left + rec.left,\r\n\t\t\t\ttop : prec.top + rec.top,\r\n\t\t\t\tright : prec.left + rec.right,\r\n\t\t\t\tbottom : prec.top + rec.bottom,\r\n\t\t\t\twidth : rec.width,\r\n\t\t\t\theight : rec.height\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn rec;\r\n\t}\r\n\r\n\t/**\r\n\t * 画控件前初始化\r\n\t * 执行beginPath开始控件的绘制\r\n\t * \r\n\t * @method beginDraw\r\n\t */\r\n\tbeginDraw() {\t\r\n\t\tthis.getLocation(true);//重置位置信息\r\n\t\tthis.context.beginPath();\t\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * 结束控件绘制\r\n\t *\r\n\t * @method endDraw\r\n\t */\r\n\tendDraw() {\r\n\t\t//如果当前为封闭路径\r\n\t\tif(this.style.close) {\r\n\t\t\tthis.context.closePath();\r\n\t\t}\r\n\t\t\r\n\t\tif(this.style['fill']) {\r\n\t\t\tthis.context.fill();\r\n\t\t}\r\n\t\tif(this.style['stroke'] || !this.style['fill']) {\r\n\t\t\tthis.context.stroke();\r\n\t\t}\r\n\r\n\t\tthis.needUpdate = false;\r\n\t}\r\n\r\n\t/**\r\n\t * 绘制控件\r\n\t * 在画布上描点\r\n\t * \r\n\t * @method draw\r\n\t */\r\n\tdraw() {\t\r\n\t\tif(this.points && this.points.length > 0) {\r\n\t\t\t//获取当前控件的绝对位置\r\n\t\t\tlet bounds = this.parent && this.parent.absoluteBounds?this.parent.absoluteBounds:this.absoluteBounds;\r\n\t\t\t\r\n\t\t\tthis.context.moveTo(this.points[0].x + bounds.left,this.points[0].y + bounds.top);\r\n\t\t\tlet len = this.points.length;\t\t\t\r\n\t\t\tfor(let i=1; i < len;i++) {\r\n\t\t\t\tlet p = this.points[i];\r\n\t\t\t\t//移至当前坐标\r\n\t\t\t\tif(p.m) {\r\n\t\t\t\t\tthis.context.moveTo(p.x + bounds.left,p.y + bounds.top);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.context.lineTo(p.x+ bounds.left,p.y + bounds.top);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\t\t\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * 绘制当前控件\r\n\t * 协调控件的绘制，先从其子控件开始绘制，再往上冒。\r\n\t *\r\n\t * @method paint\r\n\t */\r\n\tpaint(v) {\r\n\t\tif(v !== false && this.visible !== false) {\t\t\r\n\t\t\tif(this.initPoints) this.initPoints();\r\n\t\t\t//计算当前边界\r\n\t\t\tthis.bounds = null;\r\n\t\t\tthis.absoluteBounds = this.getAbsoluteBounds();\r\n\t\t\tlet needDraw = true;//是否需要绘制\r\n\t\t\tif(!this.is('jmGraph') && this.graph) {\r\n\t\t\t\tif(this.absoluteBounds.left >= this.graph.width) needDraw = false;\r\n\t\t\t\telse if(this.absoluteBounds.top >= this.graph.height) needDraw = false;\r\n\t\t\t\telse if(this.absoluteBounds.right <= 0) needDraw = false;\r\n\t\t\t\telse if(this.absoluteBounds.bottom <= 0) needDraw = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.context.save();\r\n\r\n\t\t\tthis.emit('beginDraw', this);\r\n\t\t\t\r\n\t\t\tthis.setStyle();//设定样式\r\n\r\n\t\t\tif(needDraw && this.beginDraw) this.beginDraw();\r\n\t\t\tif(needDraw && this.draw) this.draw();\t\r\n\t\t\tif(needDraw && this.endDraw) this.endDraw();\r\n\r\n\t\t\tif(this.children) {\r\n\t\t\t\tthis.children.each(function(i,item) {\r\n\t\t\t\t\tif(item && item.paint) item.paint();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.emit('endDraw',this);\t\r\n\t\t\tthis.context.restore();\r\n\t\t\t\r\n\t\t\t//兼容小程序\r\n\t\t\tif(this.is('jmGraph') && this.context.draw) this.context.draw();\r\n\t\t\tthis.needUpdate = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取指定事件的集合\r\n\t * 比如mousedown,mouseup等\r\n\t *\r\n\t * @method getEvent\r\n\t * @param {string} name 事件名称\r\n\t * @return {list} 事件委托的集合\r\n\t */\r\n\tgetEvent(name) {\t\t\r\n\t\treturn this.__events?this.__events[name]:null;\r\n\t}\r\n\r\n\t/**\r\n\t * 绑定控件的事件\r\n\t *\r\n\t * @method bind\r\n\t * @param {string} name 事件名称\r\n\t * @param {function} handle 事件委托\r\n\t */\r\n\tbind(name, handle) {\t\r\n\t\tif(name && name.indexOf(' ') > -1) {\r\n\t\t\tname = name.split(' ');\r\n\t\t\tfor(let n of name) {\r\n\t\t\t\tn && this.bind(n, handle);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\t\r\n\t\t/**\r\n\t\t * 添加事件的集合\r\n\t\t *\r\n\t\t * @method _setEvent\r\n\t\t * @private\r\n\t\t */\r\n\t\tfunction _setEvent(name, events) {\r\n\t\t\tif(!this.__events) this.__events = {};\r\n\t\t\treturn this.__events[name] = events;\r\n\t\t}\r\n\t\tlet eventCollection = this.getEvent(name) || _setEvent.call(this, name, new jmList());\r\n\t\tif(!eventCollection.contain(handle)) {\r\n\t\t\teventCollection.add(handle);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 移除控件的事件\r\n\t *\r\n\t * @method unbind \r\n\t * @param {string} name 事件名称\r\n\t * @param {function} handle 从控件中移除事件的委托\r\n\t */\r\n\tunbind(name, handle) {\t\r\n\t\tif(name && name.indexOf(' ') > -1) {\r\n\t\t\tname = name.split(' ');\r\n\t\t\tfor(let n of name) {\r\n\t\t\t\tn && this.unbind(n, handle);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\t\r\n\t\tlet eventCollection = this.getEvent(name) ;\t\t\r\n\t\tif(eventCollection) {\r\n\t\t\tif(handle) eventCollection.remove(handle);\r\n\t\t\telse eventCollection.clear();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 执行监听回调\r\n\t * \r\n\t * @method emit\r\n\t * @for jmControl\r\n\t * @param {string} name 触发事件的名称\r\n\t * @param {array} args 事件参数数组\r\n\t */\r\n\temit(...args) {\t\t\t\r\n\t\tthis.runEventHandle(args[0], args.slice(1));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * 独立执行事件委托\r\n\t *\r\n\t * @method runEventHandle\r\n\t * @param {string} 将执行的事件名称\r\n\t * @param {object} 事件执行的参数，包括触发事件的对象和位置\r\n\t */\r\n\trunEventHandle(name, args) {\r\n\t\tlet events = this.getEvent(name);\t\t\r\n\t\tif(events) {\r\n\t\t\tvar self = this;\r\n\t\t\tif(!Array.isArray(args)) args = [args];\t\r\n\t\t\tevents.each(function(i, handle) {\r\n\t\t\t\t//只要有一个事件被阻止，则不再处理同级事件，并设置冒泡被阻断\r\n\t\t\t\tif(false === handle.apply(self, args)) {\r\n\t\t\t\t\targs.cancel = true;\r\n\t\t\t\t}\r\n\t\t\t});\t\t\r\n\t\t}\t\r\n\t\treturn args.cancel;\r\n\t}\r\n\r\n\t/**\r\n\t * 检 查坐标是否落在当前控件区域中..true=在区域内\r\n\t *\r\n\t * @method checkPoint\r\n\t * @param {point} p 位置参数\r\n\t * @param {number} [pad] 可选参数，表示线条多远内都算在线上\r\n\t * @return {boolean} 当前位置如果在区域内则为true,否则为false。\r\n\t */\r\n\tcheckPoint(p, pad) {\r\n\t\t//jmGraph 需要判断dom位置\r\n\t\tif(this.type == 'jmGraph') {\r\n\t\t\t//获取dom位置\r\n\t\t\tlet position = this.getPosition();\r\n\t\t\tif(p.pageX > position.right || p.pageX < position.left) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(p.pageY > position.bottom || p.pageY < position.top) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\t\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\tlet bounds = this.getBounds();\t\r\n\t\tlet rotation = this.getRotation();//获取当前旋转参数\r\n\t\tlet ps = this.points;\r\n\t\t//如果不是路径组成，则采用边界做为顶点\r\n\t\tif(!ps || !ps.length) {\r\n\t\t\tps = [];\r\n\t\t\tps.push({x: bounds.left, y: bounds.top}); //左上角\r\n\t\t\tps.push({x: bounds.right, y: bounds.top});//右上角\r\n\t\t\tps.push({x: bounds.right, y: bounds.bottom});//右下角\r\n\t\t\tps.push({x: bounds.left, y: bounds.bottom}); //左下\r\n\t\t\tps.push({x: bounds.left, y: bounds.top}); //左上角   //闭合\r\n\t\t}\r\n\t\t//如果有指定padding 表示接受区域加宽，命中更易\r\n\t\tpad = Number(pad || this.style['touchPadding'] || this.style['lineWidth'] || 1);\r\n\t\tif(ps && ps.length) {\r\n\t\t\t\r\n\t\t\t//如果有旋转参数，则需要转换坐标再处理\r\n\t\t\tif(rotation && rotation.angle != 0) {\r\n\t\t\t\tps = jmUtils.clone(ps, true);//拷贝一份数据\r\n\t\t\t\t//rotateX ,rotateY 是相对当前控件的位置\r\n\t\t\t\tps = jmUtils.rotatePoints(ps, {\r\n\t\t\t\t\tx: rotation.rotateX + bounds.left,\r\n\t\t\t\t\ty: rotation.rotateY + bounds.top\r\n\t\t\t\t}, rotation.angle);\r\n\t\t\t}\r\n\t\t\t//如果当前路径不是实心的\r\n\t\t\t//就只用判断点是否在边上即可\t\r\n\t\t\tif(ps.length > 2 && (!this.style['fill'] || this.style['stroke'])) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet count = ps.length;\r\n\t\t\t\tfor(let j = i+1; j <= count; j = (++i + 1)) {\r\n\t\t\t\t\t//如果j超出最后一个\r\n\t\t\t\t\t//则当为封闭图形时跟第一点连线处理.否则直接返回false\r\n\t\t\t\t\tif(j == count) {\r\n\t\t\t\t\t\tif(this.style.close) {\r\n\t\t\t\t\t\t\tlet r = jmUtils.pointInPolygon(p,[ps[i],ps[0]], pad);\r\n\t\t\t\t\t\t\tif(r) return true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} \r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t//判断是否在点i,j连成的线上\r\n\t\t\t\t\t\tlet s = jmUtils.pointInPolygon(p,[ps[i],ps[j]], pad);\r\n\t\t\t\t\t\tif(s) return true;\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t//不是封闭的图形，则直接返回\r\n\t\t\t\tif(!this.style['fill']) return false;\r\n\t\t\t}\r\n\r\n\t\t\tlet r = jmUtils.pointInPolygon(p,ps, pad);\t\t\r\n\t\t\treturn r;\r\n\t\t}\r\n\r\n\t\tif(p.x > bounds.right || p.x < bounds.left) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(p.y > bounds.bottom || p.y < bounds.top) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 触发控件事件，组合参数并按控件层级关系执行事件冒泡。\r\n\t *\r\n\t * @method raiseEvent\r\n\t * @param {string} name 事件名称\r\n\t * @param {object} args 事件执行参数\r\n\t * @return {boolean} 如果事件被组止冒泡则返回false,否则返回true\r\n\t */\r\n\traiseEvent(name, args) {\r\n\t\tif(this.visible === false) return ;//如果不显示则不响应事件\t\r\n\t\tif(!args.position) {\t\t\r\n\t\t\tlet graph = this.graph;\r\n\t\t\tlet position = jmUtils.getEventPosition(args, graph.scaleSize);//初始化事件位置\t\t\r\n\r\n\t\t\tlet srcElement = args.srcElement || args.target;\r\n\t\t\targs = {\r\n\t\t\t\tposition: position,\r\n\t\t\t\tbutton: args.button == 0||position.isTouch?1:args.button,\r\n\t\t\t\tkeyCode: args.keyCode || args.charCode || args.which,\r\n\t\t\t\tctrlKey: args.ctrlKey,\r\n\t\t\t\tcancel : false,\r\n\t\t\t\tevent: args, // 原生事件\r\n\t\t\t\tsrcElement : srcElement\r\n\t\t\t};\t\t\r\n\t\t}\r\n\t\targs.path = args.path||[]; //事件冒泡路径\r\n\r\n\t\t//先执行子元素事件，如果事件没有被阻断，则向上冒泡\r\n\t\t//var stoped = false;\r\n\t\tif(this.children) {\r\n\t\t\tthis.children.each(function(j, el) {\t\r\n\t\t\t\t// 如果同级已有命中，则不再需要处理兄弟节点\r\n\t\t\t\tif(args.target) return false;\r\n\t\t\t\t//未被阻止才执行\t\t\t\r\n\t\t\t\tif(args.cancel !== true) {\r\n\t\t\t\t\t//如果被阻止冒泡，\r\n\t\t\t\t\t//stoped = el.raiseEvent(name,args) === false?true:stoped;\r\n\t\t\t\t\tel.raiseEvent(name, args)\r\n\t\t\t\t}\r\n\t\t\t}, true);//按逆序处理\r\n\t\t}\r\n\t\t\r\n\t\t//获取当前对象的父元素绝对位置\r\n\t\t//生成当前坐标对应的父级元素的相对位置\r\n\t\tlet abounds = this.parent && this.parent.absoluteBounds?this.parent.absoluteBounds : this.absoluteBounds;\r\n\t\tif(!abounds) return false;\t\r\n\t\t//args = jmUtils.clone(args);//参数副本\r\n\t\targs.position.x = args.position.offsetX - abounds.left;\r\n\t\targs.position.y = args.position.offsetY - abounds.top;\r\n\t\t\r\n\t\t//事件发生在边界内或健盘事件发生在画布中才触发\r\n\t\t// 如果有target 表示当前事件已被命中其它节点，则不再需要判断这里\r\n\t\tif(this.interactive !== false && !args.target && this.checkPoint(args.position)) {\r\n\t\t\t//如果没有指定触发对象，则认为当前为第一触发对象\r\n\t\t\tif(!args.target) {\r\n\t\t\t\targs.target = this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.runEventAndPopEvent(name, args);\r\n\r\n\t\t\tif(!this.focused && name == 'mousemove') {\r\n\t\t\t\tthis.focused = true;//表明当前焦点在此控件中\r\n\t\t\t\tthis.raiseEvent('mouseover',args);\r\n\t\t\t}\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//如果焦点不在，且原焦点在，则触发mouseleave事件\r\n\t\t\tif(this.interactive !== false && this.type != 'jmGraph' && this.focused && name == 'mousemove') {\r\n\t\t\t\tthis.focused = false;//表明当前焦点离开\r\n\t\t\t\tthis.runEventHandle('mouseleave', args);//执行事件\t\r\n\t\t\t}\t\r\n\t\t}\r\n\t\t\t\r\n\t\treturn args.cancel == false;//如果被阻止则返回false,否则返回true\r\n\t}\r\n\r\n\t/**\r\n\t * 执行事件，并进行冒泡\r\n\t * @param {string} name 事件名称 \r\n\t * @param {object} args 事件参数\r\n\t */\r\n\trunEventAndPopEvent(name, args) {\t\r\n\r\n\t\tif(args.cancel !== true) {\r\n\t\t\t// 添加到触发路径\r\n\t\t\targs.path.push(this);\r\n\r\n\t\t\t//如果返回true则阻断冒泡\r\n\t\t\tthis.runEventHandle(name, args);//执行事件\r\n\r\n\t\t\t// 向父节点冒泡事件\t\t\r\n\t\t\tif(args.cancel !== true && this.parent && this.parent.runEventAndPopEvent) {\r\n\t\t\t\t// 相对位置需要改为父节点的\r\n\t\t\t\tif(args.position) {\r\n\t\t\t\t\tlet bounds = this.parent.getBounds();\r\n\t\t\t\t\targs.position.x += bounds.left;\r\n\t\t\t\t\targs.position.y += bounds.top;\r\n\t\t\t\t}\r\n\t\t\t\tthis.parent.runEventAndPopEvent(name, args);\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 清空控件指定事件\r\n\t *\r\n\t * @method clearEvents\r\n\t * @param {string} name 需要清除的事件名称\r\n\t */\r\n\tclearEvents(name) {\r\n\t\tvar eventCollection = this.getEvent(name) ;\t\t\r\n\t\tif(eventCollection) {\r\n\t\t\teventCollection.clear;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 查找其父级类型为type的元素，直到找到指定的对象或到最顶级控件后返回空。\r\n\t *\r\n\t * @method findParent \r\n\t * @param {object} 类型名称或类型对象\r\n\t * @return {object} 指定类型的实例\r\n\t */\r\n\tfindParent(type) {\r\n\t\t//如果为类型名称，则返回名称相同的类型对象\r\n\t\tif(typeof type === 'string') {\r\n\t\t\tif(this.type == type)\r\n\t\t\t\treturn this;\r\n\t\t}\r\n\t\telse if(this.is(type)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif(this.parent) {\r\n\t\t\treturn this.parent.findParent(type);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * 设定是否可以移动\r\n\t * 此方法需指定jmgraph或在控件添加到jmgraph后再调用才能生效。\r\n\t *\r\n\t * @method canMove\r\n\t * @param {boolean} m true=可以移动，false=不可移动或清除移动。\r\n\t * @param {jmGraph} [graph] 当前画布，如果为空的话必需是已加入画布的控件，否则得指定画布。\r\n\t */\r\n\tcanMove(m, graph) {\r\n\t\tif(!this.__mvMonitor) {\r\n\t\t\t/**\r\n\t\t\t * 控制控件移动对象\r\n\t\t\t * \r\n\t\t\t * @property __mvMonitor\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis.__mvMonitor = {};\r\n\t\t\tthis.__mvMonitor.mouseDown = false;\r\n\t\t\tthis.__mvMonitor.curposition={x:0,y:0};\r\n\t\t\tvar self = this;\r\n\t\t\t/**\r\n\t\t\t * 控件移动鼠标事件\r\n\t\t\t *\r\n\t\t\t * @method mv\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis.__mvMonitor.mv = function(evt) {\r\n\t\t\t\tlet _this = self;\r\n\t\t\t\t//如果鼠标经过当前可移动控件，则显示可移动指针\r\n\t\t\t\t//if(evt.path && evt.path.indexOf(_this)>-1) {\r\n\t\t\t\t//\t_this.cursor('move');\t\r\n\t\t\t\t//}\r\n\r\n\t\t\t\tif(_this.__mvMonitor.mouseDown) {\r\n\t\t\t\t\t_this.parent.bounds = null;\r\n\t\t\t\t\tlet parentbounds = _this.parent.getAbsoluteBounds();\t\t\r\n\t\t\t\t\tlet offsetx = evt.position.offsetX - _this.__mvMonitor.curposition.x;\r\n\t\t\t\t\tlet offsety = evt.position.offsetY - _this.__mvMonitor.curposition.y;\t\t\t\t\r\n\t\t\t\t\t//console.log(offsetx + ',' + offsety);\r\n\t\t\t\t\t//如果锁定边界\r\n\t\t\t\t\tif(_this.lockSide) {\r\n\t\t\t\t\t\tlet thisbounds = _this.bounds || _this.getAbsoluteBounds();\t\t\t\t\t\r\n\t\t\t\t\t\t//检查边界出界\r\n\t\t\t\t\t\tlet outside = jmUtils.checkOutSide(parentbounds,thisbounds,{x:offsetx,y:offsety});\r\n\t\t\t\t\t\tif(outside.left < 0) {\r\n\t\t\t\t\t\t\tif(_this.lockSide.left) offsetx -= outside.left;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(outside.right > 0) {\r\n\t\t\t\t\t\t\tif(_this.lockSide.right) offsetx -= outside.right;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(outside.top < 0) {\r\n\t\t\t\t\t\t\tif(_this.lockSide.top) offsety -= outside.top;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(outside.bottom > 0) {\r\n\t\t\t\t\t\t\tif(_this.lockSide.bottom) offsety -= outside.bottom;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(offsetx || offsety) {\r\n\t\t\t\t\t\t_this.offset(offsetx, offsety, true, evt);\r\n\t\t\t\t\t\t_this.__mvMonitor.curposition.x = evt.position.offsetX;\r\n\t\t\t\t\t\t_this.__mvMonitor.curposition.y = evt.position.offsetY;\t\r\n\t\t\t\t\t\t//console.log(offsetx + '.' + offsety);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 控件移动鼠标松开事件\r\n\t\t\t *\r\n\t\t\t * @method mu\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis.__mvMonitor.mu = function(evt) {\r\n\t\t\t\tlet _this = self;\r\n\t\t\t\tif(_this.__mvMonitor.mouseDown) {\r\n\t\t\t\t\t_this.__mvMonitor.mouseDown = false;\r\n\t\t\t\t\t//_this.cursor('default');\r\n\t\t\t\t\t_this.emit('moveend',{position:_this.__mvMonitor.curposition});\t\r\n\t\t\t\t\t//return false;\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 控件移动鼠标离开事件\r\n\t\t\t *\r\n\t\t\t * @method ml\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis.__mvMonitor.ml = function() {\r\n\t\t\t\tlet _this = self;\r\n\t\t\t\tif(_this.__mvMonitor.mouseDown) {\r\n\t\t\t\t\t_this.__mvMonitor.mouseDown = false;\r\n\t\t\t\t\t//_this.cursor('default');\t\r\n\t\t\t\t\t_this.emit('moveend',{position:_this.__mvMonitor.curposition});\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 控件移动鼠标按下事件\r\n\t\t\t *\r\n\t\t\t * @method md\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis.__mvMonitor.md = function(evt) {\r\n\t\t\t\t\r\n\t\t\t\tif(this.__mvMonitor.mouseDown) return;\r\n\t\t\t\tif(evt.button == 0 || evt.button == 1) {\r\n\t\t\t\t\tthis.__mvMonitor.mouseDown = true;\r\n\t\t\t\t\t//this.cursor('move');\r\n\t\t\t\t\t//var parentbounds = this.parent.absoluteBounds || this.parent.getAbsoluteBounds();\t\r\n\t\t\t\t\tthis.__mvMonitor.curposition.x = evt.position.offsetX;//evt.position.x + parentbounds.left;\r\n\t\t\t\t\tthis.__mvMonitor.curposition.y = evt.position.offsetY;//evt.position.y + parentbounds.top;\r\n\t\t\t\t\t//触发控件移动事件\r\n\t\t\t\t\tthis.emit('movestart',{position:this.__mvMonitor.curposition});\r\n\t\t\t\t\t\r\n\t\t\t\t\tevt.cancel = true;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tgraph = graph || this.graph ;//获取最顶级元素画布\r\n\t\t\r\n\t\tif(m !== false) {\t\t\t\r\n\t\t\tgraph.bind('mousemove',this.__mvMonitor.mv);\r\n\t\t\tgraph.bind('mouseup',this.__mvMonitor.mu);\r\n\t\t\tgraph.bind('mouseleave',this.__mvMonitor.ml);\r\n\t\t\tthis.bind('mousedown',this.__mvMonitor.md);\r\n\t\t\tgraph.bind('touchmove',this.__mvMonitor.mv);\r\n\t\t\tgraph.bind('touchend',this.__mvMonitor.mu);\r\n\t\t\tthis.bind('touchstart',this.__mvMonitor.md);\r\n\t\t}\r\n\t\telse {\t\t\t\r\n\t\t\tgraph.unbind('mousemove',this.__mvMonitor.mv);\r\n\t\t\tgraph.unbind('mouseup',this.__mvMonitor.mu);\r\n\t\t\tgraph.unbind('mouseleave',this.__mvMonitor.ml);\r\n\t\t\tthis.unbind('mousedown',this.__mvMonitor.md);\r\n\t\t\tgraph.unbind('touchmove',this.__mvMonitor.mv);\r\n\t\t\tgraph.unbind('touchend',this.__mvMonitor.mu);\r\n\t\t\tthis.unbind('touchstart',this.__mvMonitor.md);\t\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\nexport { jmControl };","import {jmControl} from \"./jmControl.js\";\r\n/**\r\n * 基础路径,大部分图型的基类\r\n * 指定一系列点，画出图形\r\n *\r\n * @class jmPath\r\n * @extends jmControl\r\n * @param {object} params 路径参数 points=所有描点\r\n */\r\n\r\nexport default class jmPath extends jmControl {\t\r\n\r\n\tconstructor(params, t='jmPath') {\r\n\t\tsuper(params, t);\t\t\r\n\t\tthis.points = params && params.points ? params.points : [];\t\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * 描点集合\r\n\t * point格式：{x:0,y:0,m:true}\r\n\t * @property points\r\n\t * @type {array}\r\n\t */\r\n\tget points() {\r\n\t\tlet s = this.__pro('points');\r\n\t\treturn s;\r\n\t}\r\n\tset points(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.__pro('points', v);\r\n\t}\r\n}\r\n\r\nexport { jmPath };\r\n","import {jmUtils} from \"./jmUtils.js\";\r\nimport {jmList} from \"./jmList.js\";\r\nimport {jmProperty} from './jmProperty.js';\r\nimport {jmShadow} from \"./jmShadow.js\";\r\nimport {jmGradient} from \"./jmGradient.js\";\r\nimport {jmEvents} from \"./jmEvents.js\";\r\nimport {jmControl} from \"./jmControl.js\";\r\nimport {jmPath} from \"./jmPath.js\";\r\n\r\n/**\r\n * jmGraph画图类库\r\n * 对canvas画图api进行二次封装，使其更易调用，省去很多重复的工作。\r\n *\r\n * @module jmGraph\r\n * @class jmGraph\r\n * @extends jmControl\r\n * @param {element} canvas 标签canvas\r\n * @param {object} option 参数：{width:宽,height:高}\r\n * @param {function} callback 初始化后的回调\r\n */\r\nexport default class jmGraph extends jmControl {\r\n\r\n\tconstructor(canvas, option, callback) {\r\n\t\tif(typeof option == 'function') {\r\n\t\t\tcallback = option;\r\n\t\t\toption = {};\r\n\t\t}\r\n\t\r\n\t\toption = option || {};\r\n\t\t\r\n\t\toption.interactive = true;\r\n\t\t\r\n\t\tsuper(option, 'jmGraph');\r\n\r\n\t\tthis.option = option || {};\r\n\r\n\t\t/**\r\n\t\t * 工具类\r\n\t\t * @property utils/util\r\n\t\t * @type {jmUtils}\r\n\t\t */\r\n\t\tthis.util = this.utils = jmUtils;\t\t\r\n\r\n\t\t//如果是小程序\r\n\t\tif(typeof wx != 'undefined' && wx.createCanvasContext) {\r\n\t\t\tthis.context = wx.createCanvasContext(canvas);\r\n\t\t\tcanvas = wx.createSelectorQuery().select('#' + canvas);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif(typeof canvas === 'string' && typeof document != 'undefined') {\r\n\t\t\t\tcanvas = document.getElementById(canvas);\r\n\t\t\t}\r\n\t\t\telse if(canvas.length) {\r\n\t\t\t\tcanvas = canvas[0];\r\n\t\t\t}\r\n\t\t\tif(canvas.tagName != 'CANVAS') {\r\n\t\t\t\tlet cn = document.createElement('canvas');\r\n\t\t\t\tcanvas.appendChild(cn);\r\n\t\t\t\tcn.width = canvas.offsetWidth||canvas.clientWidth;\r\n\t\t\t\tcn.height = canvas.offsetHeight||canvas.clientHeight;\r\n\t\t\t\tcanvas = cn;\r\n\t\t\t}\t\r\n\r\n\t\t\tthis.context = canvas.getContext('2d');\r\n\t\t}\r\n\t\tthis.canvas = canvas;\r\n\t\tthis.__init(callback);\r\n\t}\r\n\r\n\t/**\r\n\t * 初始化画布\r\n\t * @method init\r\n\t */\r\n\t__init(callback) {\r\n\t\t/**\r\n\t\t * 当前所有图形类型\r\n\t\t * @property shapes\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis.shapes = Object.assign({\r\n\t\t\t\"path\": jmPath,\r\n\t\t}, this.option.shapes);\r\n\t\t\r\n\t\t/**\r\n\t\t * 画控件前初始化\r\n\t\t * 为了解决一像素线条问题\r\n\t\t */\r\n\t\tthis.on('beginDraw', function() {\t\r\n\t\t\tthis.context.translate(0.5, 0.5);\r\n\t\t});\r\n\t\t/**\r\n\t\t * 结束控件绘制 为了解决一像素线条问题\r\n\t\t */\r\n\t\tthis.on('endDraw', function() {\t\r\n\t\t\tthis.context.translate(-0.5, -0.5);\t\t\r\n\t\t});\r\n\t\t\r\n\t\tif(this.option.width > 0) this.width = this.option.width;\r\n\t\tif(this.option.height > 0) this.height = this.option.height;\t\r\n\r\n\t\t//绑定事件\r\n\t\tthis.eventHandler = new jmEvents(this, this.canvas.canvas || this.canvas);\t\r\n\r\n\t\t//如果指定了自动刷新\r\n\t\tif(this.option.autoRefresh) {\r\n\t\t\tconst self = this; \r\n\t\t\tfunction update() {\r\n\t\t\t\tif(self.needUpdate) self.redraw();\r\n\t\t\t\trequestAnimationFrame(update);\r\n\t\t\t}\r\n\t\t\trequestAnimationFrame(update);\r\n\t\t}\r\n\r\n\t\tif(callback) callback(this);\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * 宽度\r\n\t * @property width\r\n\t * @type {number}\r\n\t */\r\n\tget width() {\r\n\t\tif(this.canvas) return this.canvas.width;\r\n\t\treturn 0;\r\n\t}\r\n\tset width(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\tif(this.canvas) this.canvas.width = v;\t\t\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * 高度\r\n\t * @property height\r\n\t * @type {number}\r\n\t */\r\n\tget height() {\r\n\t\tif(this.canvas) return this.canvas.height;\r\n\t\treturn 0;\r\n\t}\r\n\tset height(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\tif(this.canvas) this.canvas.height = v;\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * 创建jmGraph的静态对象\r\n\t *\r\n\t * @method create\r\n\t * @return {jmGraph} jmGraph实例对象\r\n\t */\r\n\tstatic create(...args) {\r\n\t\treturn new jmGraph(...args);\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前画布在浏览器中的绝对定位\r\n\t *\r\n\t * @method getPosition\r\n\t * @return {postion} 返回定位坐标\r\n\t */\r\n\tgetPosition() {\r\n\t\tlet p = jmUtils.getElementPosition(this.canvas.canvas || this.canvas);\r\n\t\tp.width = this.canvas.width;\r\n\t\tp.height = this.canvas.height;\r\n\t\tp.right = p.left + p.width;\r\n\t\tp.bottom = p.top + p.height;\r\n\t\treturn p;\r\n\t}\r\n\r\n\t/**\r\n\t * 注册图形类型,图形类型必需有统一的构造函数。参数为画布句柄和参数对象。\r\n\t *\r\n\t * @method registerShape \r\n\t * @param {string} name 控件图形名称\r\n\t * @param {class} shape 图形控件类型\r\n\t */\r\n\tregisterShape(name, shape) {\r\n\t\tthis.shapes[name] = shape;\r\n\t}\r\n\r\n\t/**\r\n\t * 从已注册的图形类创建图形\r\n\t * 简单直观创建对象\r\n\t *\r\n\t * @method createShape \r\n\t * @param {string} name 注册控件的名称\r\n\t * @param {object} args 实例化控件的参数\r\n\t * @return {object} 已实例化控件的对象\r\n\t */\r\n\tcreateShape(name, args) {\r\n\t\tlet shape;\r\n\t\tif(typeof name === 'function') {\r\n\t\t\tshape = name;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tshape = this.shapes[name];\r\n\t\t}\r\n\t\tif(shape) {\r\n\t\t\tif(!args) args = {};\r\n\t\t\targs.graph = this;\r\n\t\t\tlet obj = new shape(args);\r\n\t\t\treturn obj;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 生成阴影对象\r\n\t *\r\n\t * @method createShadow\r\n\t * @param {number} x x偏移量\r\n\t * @param {number} y y偏移量\r\n\t * @param {number} blur 模糊值\r\n\t * @param {string} color 颜色\r\n\t * @return {jmShadow} 阴影对象\r\n\t */\r\n\tcreateShadow(x, y, blur, color) {\r\n\t\tlet sh = new jmShadow(x, y, blur, color);\r\n\t\treturn sh;\r\n\t}\r\n\r\n\t/**\r\n\t * 生成线性渐变对象\r\n\t *\r\n\t * @method createLinearGradient\r\n\t * @param {number} x1 线性渐变起始点X坐标\r\n\t * @param {number} y1 线性渐变起始点Y坐标\r\n\t * @param {number} x2 线性渐变结束点X坐标\r\n\t * @param {number} y2 线性渐变结束点Y坐标\r\n\t * @return {jmGradient} 线性渐变对象\r\n\t */\r\n\tcreateLinearGradient(x1, y1, x2, y2) {\r\n\t\tlet gradient = new jmGradient({\r\n\t\t\ttype:'linear',\r\n\t\t\tx1: x1,\r\n\t\t\ty1: y1,\r\n\t\t\tx2: x2,\r\n\t\t\ty2: y2\r\n\t\t});\r\n\t\treturn gradient;\r\n\t}\r\n\r\n\t/**\r\n\t * 生成放射渐变对象\r\n\t *\r\n\t * @method createRadialGradient\r\n\t * @param {number} x1 放射渐变小圆中心X坐标\r\n\t * @param {number} y1 放射渐变小圆中心Y坐标\r\n\t * @param {number} r1 放射渐变小圆半径\r\n\t * @param {number} x2 放射渐变大圆中心X坐标\r\n\t * @param {number} y2 放射渐变大圆中心Y坐标\r\n\t * @param {number} r2 放射渐变大圆半径\r\n\t * @return {jmGradient} 放射渐变对象\r\n\t */\r\n\tcreateRadialGradient(x1, y1, r1, x2, y2, r2) {\t\r\n\t\tlet gradient = new jmGradient({\r\n\t\t\ttype:'radial',\r\n\t\t\tx1: x1,\r\n\t\t\ty1: y1,\r\n\t\t\tr1: r1,\r\n\t\t\tx2: x2,\r\n\t\t\ty2: y2,\r\n\t\t\tr2: r2\r\n\t\t});\r\n\t\treturn gradient;\r\n\t}\r\n\r\n\t/**\r\n\t * 重新刷新整个画板\r\n\t * 以加入动画事件触发延时10毫秒刷新，保存最尽的调用只刷新一次，加强性能的效果。\r\n\t *\r\n\t * @method refresh\r\n\t */\r\n\trefresh() {\t\r\n\t\t//加入动画，触发redraw，会导致多次refresh只redraw一次\r\n\t\t/*this.animate(function() {\r\n\t\t\treturn false;\r\n\t\t},100,'jmgraph_refresh');*/\r\n\t\tthis.redraw();\r\n\t}\r\n\r\n\t/**\r\n\t * 重新刷新整个画板\r\n\t * 此方法直接重画，与refresh效果类似\r\n\t *\r\n\t * @method redraw\r\n\t * @param {number} [w] 清除画布的宽度\r\n\t * @param {number} [h] 清除画布的高度\r\n\t */\r\n\tredraw(w, h) {\t\r\n\t\tthis.clear(w||this.width, h||this.height);\r\n\t\tthis.paint();\r\n\t}\r\n\r\n\t/**\r\n\t * 清除画布\r\n\t * \r\n\t * @method clear\r\n\t * @param {number} [w] 清除画布的宽度\r\n\t * @param {number} [h] 清除画布的高度\r\n\t */\r\n\tclear(w, h) {\r\n\t\t//this.canvas.width = this.canvas.width;\r\n\t\tif(w && h) {\r\n\t\t\t//this.zoomActual();//恢复比例缩放\r\n\t\t\tthis.canvas.width = w;\r\n\t\t\tthis.canvas.height = h;\r\n\t\t\t//保留原有缩放比例\r\n\t\t\tif(this.scaleSize) {\r\n\t\t\t\tif(this.context.scale) this.context.scale(this.scaleSize.x,this.scaleSize.y);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tw = this.canvas.width;\r\n\t\t\th = this.canvas.height;\r\n\t\t\tif(this.scaleSize) {\r\n\t\t\t\tw = w / this.scaleSize.x;\r\n\t\t\t\th = h / this.scaleSize.y;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//如果有指定背景，则等到draw再全屏绘制一次，也同样达到清除画布的功能\r\n\t\tif(this.style && this.style.fill) {\r\n\t\t\tthis.points = [\r\n\t\t\t\t{x:0,y:0},\r\n\t\t\t\t{x:w,y:0},\r\n\t\t\t\t{x:w,y:h},\r\n\t\t\t\t{x:0,y:h}\r\n\t\t\t];\r\n\t\t}\r\n\t\telse if(this.context.clearRect) this.context.clearRect(0,0,w,h);\r\n\t}\r\n\r\n\t/**\r\n\t* 设置画布样式，此处只是设置其css样式\r\n\t*\r\n\t* @method css\r\n\t* @param {string} name 样式名\r\n\t* @param {string} value 样式值\r\n\t*/\r\n\tcss(name, value) {\r\n\t\tif(this.canvas) {\r\n\t\t\tif(typeof value != 'undefined') this.canvas.style[name] = value;\r\n\t\t\treturn this.canvas.style[name];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 生成路径对象\r\n\t *\r\n\t * @method createPath\r\n\t * @param {array} points 路径中的描点集合\r\n\t * @param {style} style 当前路径的样式\r\n\t * @return {jmPath} 路径对象jmPath\r\n\t */\r\n\tcreatePath(points, style) {\r\n\t\tlet path = this.createShape('path',{\r\n\t\t\tpoints: points,\r\n\t\t\tstyle: style\r\n\t\t});\r\n\t\treturn path;\r\n\t}\r\n\r\n\t/**\r\n\t * 生成直线\r\n\t * \r\n\t * @method createLine\r\n\t * @param {point} start 直线的起点\r\n\t * @param {point} end 直线的终点\r\n\t * @param {style} 直线的样式\r\n\t * @return {jmLine} 直线对象\r\n\t */\r\n\tcreateLine(start, end, style) {\r\n\t\tlet line = this.createShape('line', {\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\t\t\tstyle: style\r\n\t\t});\r\n\t\treturn line;\r\n\t}\r\n\r\n\t/**\r\n\t * 缩小整个画布按比例0.9\r\n\t * \r\n\t * @method zoomOut\r\n\t */\r\n\tzoomOut() {\r\n\t\tthis.scale(0.9 ,0.9);\r\n\t}\r\n\r\n\t/**\r\n\t * 放大 每次增大0.1的比例\r\n\t * \r\n\t * @method zoomIn\r\n\t */\r\n\tzoomIn() {\t\t\r\n\t\tthis.scale(1.1 ,1.1);\r\n\t}\r\n\r\n\t/**\r\n\t * 大小复原\r\n\t * \r\n\t * @method zoomActual\r\n\t */\r\n\tzoomActual() {\r\n\t\tif(this.scaleSize) {\r\n\t\t\tthis.scale(1 / this.scaleSize.x ,1 / this.scaleSize.y);\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.scale(1 ,1);\t\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * 放大缩小画布\r\n\t * \r\n\t * @method scale\r\n\t * @param {number} dx 缩放X轴比例\r\n\t * @param {number} dy 缩放Y轴比例\r\n\t */\r\n\tscale(dx, dy) {\r\n\t\tif(!this.normalSize) {\r\n\t\t\tthis.normalSize = {\r\n\t\t\t\twidth: this.canvas.width,\r\n\t\t\t\theight: this.canvas.height\r\n\t\t\t};\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.context.scale(dx,dy);\r\n\t\tif(!this.scaleSize) {\r\n\t\t\tthis.scaleSize = {x:dx,y:dy};\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.scaleSize = {x:dx * this.scaleSize.x, y:dy * this.scaleSize.y};\r\n\t\t}\r\n\t\tthis.refresh();\r\n\t}\r\n\r\n\t/**\r\n\t * 保存为base64图形数据\r\n\t * \r\n\t * @method toDataURL\r\n\t * @return {string} 当前画布图的base64字符串\r\n\t */\r\n\ttoDataURL() {\r\n\t\tlet data = this.canvas.toDataURL?this.canvas.toDataURL():'';\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/** \r\n\t * 自动刷新画版\r\n\t * @param {function} callback 执行回调\r\n\t */\r\n\tautoRefresh(callback) {\r\n\t\tvar self = this;\r\n\t\tfunction update() {\r\n\t\t\tif(self.needUpdate) self.redraw();\r\n\t\t\trequestAnimationFrame(update);\r\n\t\t\tif(callback) callback();\r\n\t\t}\r\n\t\tupdate();\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nexport { \r\n\tjmGraph, \r\n\tjmUtils,\r\n\tjmList,\r\n\tjmProperty,\r\n\tjmShadow,\r\n\tjmGradient,\r\n\tjmEvents,\r\n\tjmControl,\r\n\tjmPath,\r\n };\r\n"],"names":["jmList","Array","ps","arg","length","isArray","i","push","option","type","obj","this","includes","_typeof","removeAt","index","splice","removeHandler","call","find","cb","inverse","len","handler","count","jmUtils","source","target","deep","undefined","isType","dest","clone","slice","k","constructor","name","fun","opt","indexOf","attachEvent","addEventListener","ns","split","bindEvent","removeEventListener","detachEvent","el","pos","offsetParent","top","offsetTop","left","offsetLeft","x","y","evt","scale","isTouch","touches","event","changedTouches","targetTouches","srcElement","px","pageX","clientX","document","documentElement","scrollLeft","body","py","pageY","clientY","scrollTop","ox","offsetX","oy","offsetY","p","getElementPosition","layerX","layerY","screenX","screenY","pt","polygon","offset","j","n","inside","redo","Math","abs","min","max","f","l","sqrt","_x","parentBounds","targetBounds","result","right","bottom","rp","r","cos","sin","x1","y1","c","sc","substring","trimStart","trimEnd","per","trim","tmp","checkPercent","h","v","toLowerCase","iv","floor","hex","color","a","substr","g","b","hexToNumber","toFixed","hexToRGBA","jmObject","graph","is","arguments","animateHandles","params","add","millisec","handle","self","dispatcher","setTimeout","_this","overduehandles","curTimes","Date","getTime","each","ani","times","apply","e","window","console","info","toString","remove","animate","PROPERTY_KEY","Symbol","jmProperty","pars","pros","value","args","oldValue","newValue","emit","__pro","needUpdate","findParent","jmShadow","blur","fromString","s","ms","match","test","jmGradient","stops","Number","control","gradient","context","bounds","absoluteBounds","getAbsoluteBounds","x2","y2","location","getLocation","d","radius","width","height","percentToNumber","sx1","sy1","sx2","sy2","createLinearGradient","r1","r2","createCircularGradient","createRadialGradient","toColor","addColorStop","par","spindex","lastIndexOf","isNaN","addStop","str","jmEvents","container","mouseHandler","jmMouseEvent","keyHandler","jmKeyEvent","raiseEvent","instance","init","canvas","doc","preventDefault","touchStart","passive","touchMove","touchEnd","touchCancel","checkKeyEvent","tagName","jmControl","t","style","position","zIndex","interactive","jmStyleMap","initializing","on","_this2","bind","children","oadd","parent","contain","oremove","sort","levelItems","zindex","clear","__setStyle","mpkey","mpname","_this3","toGradient","translate","angle","tranX","tranY","point","getRotation","rotateX","rotateY","rotate","transform","scaleX","skewX","skewY","scaleY","cursor","isReset","rect","points","local","center","start","end","margin","getBounds","rotation","trans","offseted","cpoints","rec","prec","beginPath","close","closePath","fill","stroke","moveTo","m","lineTo","visible","initPoints","needDraw","save","setStyle","beginDraw","draw","endDraw","item","paint","restore","__events","eventCollection","getEvent","events","unbind","runEventHandle","cancel","pad","getPosition","rotatePoints","pointInPolygon","getEventPosition","scaleSize","button","keyCode","charCode","which","ctrlKey","path","abounds","checkPoint","runEventAndPopEvent","focused","__mvMonitor","mouseDown","curposition","mv","parentbounds","offsetx","offsety","lockSide","thisbounds","outside","checkOutSide","mu","ml","md","getContext","cur","css","jmPath","jmGraph","callback","util","utils","wx","createCanvasContext","createSelectorQuery","select","getElementById","cn","createElement","appendChild","offsetWidth","clientWidth","offsetHeight","clientHeight","__init","shapes","Object","assign","eventHandler","autoRefresh","requestAnimationFrame","update","redraw","shape","w","clearRect","createShape","dx","dy","normalSize","refresh","toDataURL"],"mappings":"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"}