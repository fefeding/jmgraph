{"version":3,"file":"jmgraph.core.min.js","sources":["../src/core/jmList.js","../src/core/jmUtils.js","../src/core/jmObject.js","../src/core/jmProperty.js","../src/core/jmShadow.js","../src/core/jmGradient.js","../src/core/jmEvents.js","../src/core/jmControl.js","../src/core/jmPath.js","../src/core/jmGraph.js"],"sourcesContent":["/**\r\n * 自定义集合\r\n * \r\n * @class jmList\r\n * @for jmUtils\r\n * @param {array} [arr] 数组，可转为当前list元素\r\n */\r\nexport default class jmList extends Array {    \r\n    constructor(...arg) {\r\n        let ps = [];\r\n        if(arg && arg.length && Array.isArray(arg[0])) {\r\n            for(let i=0; i< arg[0].length; i++) ps.push(arg[0][i]);\r\n            super(...ps);\r\n        }\r\n        else {\r\n            super();\r\n        }\r\n        this.option = {}; //选项\r\n        this.type = 'jmList';\r\n    }\r\n    /**\r\n     * 往集合中添加对象\r\n     *\r\n     * @method add\r\n     * @for list\r\n     * @param {any} obj 往集合中添加的对象\r\n     */\r\n    add(obj) {        \r\n        if(obj && Array.isArray(obj)) {\r\n            for(let i=0; i < obj.length; i++) {\r\n                if(!this.includes(obj[i])) this.push(obj[i]);\r\n            } \r\n            return obj;           \r\n        }\r\n        if(typeof obj == 'object' && this.includes(obj)) return obj;\r\n        this.push(obj);\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * 从集合中移除指定对象\r\n     * \r\n     * @method remove\r\n     * @for list\r\n     * @param {any} obj 将移除的对象\r\n     */\r\n    remove(obj) {\r\n        for(let i = this.length -1; i>=0; i--) {            \r\n            if(this[i] == obj) {\r\n                this.removeAt(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 按索引移除对象\r\n     * \r\n     * @method removeAt\r\n     * @for list\r\n     * @param {integer} index 移除对象的索引\r\n     */\r\n    removeAt(index) {\r\n        if(this.length > index) {\r\n            let obj = this[index];\r\n            this.splice(index,1);\r\n            if(this.option.removeHandler)  this.option.removeHandler.call(this, obj, index);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断是否包含某个对象\r\n     * \r\n     * @method contain\r\n     * @for list\r\n     * @param {any} obj 判断当前集合中是否包含此对象\r\n     */\r\n    contain(obj) {\r\n        return this.includes(obj);\r\n    }\r\n\r\n    /**\r\n     * 从集合中获取某个对象\r\n     * \r\n     * @method get\r\n     * @for list\r\n     * @param {integer/function} index 如果为整型则表示为获取此索引的对象，如果为function为则通过此委托获取对象\r\n     * @return {any} 集合中的对象\r\n     */\r\n    get(index) {\r\n        if(typeof index == 'function') {\r\n            return this.find(index);\r\n        }\r\n        else {\r\n            return this[index];\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * 遍历当前集合 \r\n     *\r\n     * @method each\r\n     * @for list\r\n     * @param {function} cb 遍历当前集合的委托\r\n     * @param {boolean} inverse 是否按逆序遍历\r\n     */\r\n    each(cb, inverse) {\r\n        if(cb && typeof cb == 'function') {\r\n            //如果按倒序循环\r\n            if(inverse) {\r\n                for(let i = this.length - 1;i>=0; i--) {\r\n                    let r = cb.call(this, i, this[i]);\r\n                    if(r === false) break;\r\n                }\r\n            }\r\n            else {\r\n                let len = this.length;\r\n               for(let i  = 0; i < len;i++) {\r\n                    let r = cb.call(this, i, this[i]);\r\n                    if(r === false) break;\r\n                } \r\n            }            \r\n        }        \r\n    }\r\n\r\n    /**\r\n     * 获取当前集合对象个数\r\n     *\r\n     * @method count\r\n     * @param {function} [handler] 检查对象是否符合计算的条件\r\n     * @for list\r\n     * @return {integer} 当前集合的个数\r\n     */\r\n    count(handler) {\r\n        if(handler && typeof handler == 'function') {\r\n            let count = 0;\r\n            let len = this.length;\r\n            for(let i  = 0; i<len;i++) {\r\n                if(handler(this[i])) {\r\n                    count ++;\r\n                }\r\n            } \r\n            return count;\r\n        }\r\n        return this.length;\r\n    }\r\n\r\n    /**\r\n     * 清空当前集合\r\n     *\r\n     * @method clear\r\n     * @for list\r\n     */\r\n    clear() {\r\n        this.splice(0, this.length);\r\n    }\r\n}\r\n\r\nexport { jmList };","\r\nimport { jmList } from './jmList.js';\r\n\r\n/**\r\n * 画图基础对象\r\n * 当前库的工具类\r\n * \r\n * @class jmUtils\r\n * @static\r\n */\r\nexport default class jmUtils {\r\n    /**\r\n     * 复制一个对象\r\n     * \r\n     * @method clone\r\n     * @static\r\n     * @param {object} source 被复制的对象\r\n     * @param {object} target 可选，如果指定就表示复制给这个对象，如果为boolean它就是deep参数\r\n     * @param {boolean} deep 是否深度复制，如果为true,数组内的每个对象都会被复制\r\n     * @param {function} copyHandler 复制对象回调，如果返回undefined，就走后面的逻辑，否则到这里中止\r\n     * @return {object} 参数source的拷贝对象\r\n     */\r\n    static clone(source, target, deep = false, copyHandler = null, deepIndex = 0) {\r\n        // 如果有指定回调，则用回调处理，否则走后面的复制逻辑\r\n        if(typeof copyHandler === 'function') {\r\n            const obj = copyHandler(source, deep, deepIndex);\r\n            if(obj) return obj;\r\n        }\r\n        deepIndex++; // 每执行一次，需要判断最大拷贝深度        \r\n\r\n        if(typeof target === 'boolean') {\r\n            deep = target;\r\n            target = undefined;\r\n        }\r\n\r\n        // 超过100拷贝深度，直接返回\r\n        if(deepIndex > 100) {\r\n            return target;\r\n        }\r\n\r\n        if(source && typeof source === 'object') {\r\n            target = target || {};\r\n\r\n            //如果为当前泛型，则直接new\r\n            if(this.isType(source, jmList)) {\r\n                return new jmList(source);\r\n            }\r\n            else if(Array.isArray(source)) {\r\n                //如果是深度复，则拷贝每个对象\r\n                if(deep) {\r\n                    let dest = [];\r\n                    for(let i=0; i<source.length; i++) {\r\n                        dest.push(this.clone(source[i], target[i], deep, copyHandler, deepIndex));\r\n                    }\r\n                    return dest;\r\n                }\r\n                return source.slice(0);\r\n            }\r\n           \r\n            if(source.__proto__) target.__proto__ = source.__proto__;\r\n            \r\n            for(let k in source) {\r\n                if(k === 'constructor') continue;\r\n                // 如果不是对象和空，则采用target的属性\r\n                if(typeof target[k] === 'object' || typeof target[k] === 'undefined') {                    \r\n                    target[k] = this.clone(source[k], target[k], deep, copyHandler, deepIndex);\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n        else if(typeof target != 'undefined') {\r\n            return target;\r\n        }\r\n\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * 绑定事件到html对象\r\n     * \r\n     * @method bindEvent\r\n     * @static\r\n     * @param {element} html元素对象\r\n     * @param {string} name 事件名称\r\n     * @param {function} fun 事件委托\r\n     * @returns {name, fun, target} 返回当前绑定\r\n     */\r\n    static bindEvent(target, name, fun, opt) {\r\n        if(name &&  name.indexOf && name.indexOf(' ') != -1) {\r\n            let ns = name.split(' ');\r\n            for(let i=0;i<ns.length;i++) {\r\n                this.bindEvent(target, ns[i], fun, opt);\r\n            }\r\n        }\r\n        if(target.attachEvent) {\r\n            target.attachEvent(\"on\"+name, fun, opt);\r\n        }    \r\n        else if(target.addEventListener) {\r\n            target.addEventListener(name, fun, opt);\r\n        }\r\n        return {\r\n            name,\r\n            target,\r\n            fun\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 从对象中移除事件到\r\n     * \r\n     * @method removeEvent\r\n     * @static\r\n     * @param {element} html元素对象\r\n     * @param {string} name 事件名称\r\n     * @param {function} fun 事件委托\r\n     */\r\n    static removeEvent(target, name, fun) {\r\n        if(target.removeEventListener) {\r\n            return target.removeEventListener(name, fun, false);\r\n        }    \r\n        else if(target.detachEvent) {\r\n            target.detachEvent('on' + name, fun);\r\n            return true;\r\n        }\r\n        else {\r\n            target['on' + name] = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取元素的绝对定位\r\n     *\r\n     * @method getElementPosition\r\n     * @static\r\n     * @param {element} el 目标元素对象\r\n     * @return {position} 位置对象(top,left)\r\n     */\r\n    static getElementPosition(el) {    \r\n        let pos = {\"top\": 0, \"left\": 0};\r\n        if(!el) return pos;\r\n\r\n        if (el.offsetParent) {\r\n            while (el.offsetParent) {\r\n                pos.top += el.offsetTop;\r\n                pos.left += el.offsetLeft;\r\n                el = el.offsetParent;\r\n            }\r\n        }\r\n        else if(el.x) {\r\n            pos.left += el.x;\r\n        }\r\n        else if(el.x){\r\n            pos.top += el.y;\r\n        } \r\n        return pos;\r\n    }\r\n    /**\r\n     * 获取元素事件触发的位置\r\n     *\r\n     * @method getEventPosition\r\n     * @static\r\n     * @param {eventArg} evt 当前触发事件的参数\r\n     * @param {point} [scale] 当前画布的缩放比例\r\n     * @return {point} 事件触发的位置 \r\n     */\r\n    static getEventPosition (evt, scale) {\r\n        evt = evt || event;\r\n        \r\n        let isTouch = false;\r\n        let touches = evt.changedTouches || evt.targetTouches || evt.touches;\r\n        let target = evt.target || evt.srcElement;\r\n        if(touches && touches.length) {\r\n            evt = touches[0];//兼容touch事件\r\n            if(!evt.target) evt.target = target;\r\n            isTouch = true;\r\n        }\r\n        let px = evt.pageX || evt.x;\r\n        if(typeof px == 'undefined')  px = evt.clientX + (document.documentElement.scrollLeft || document.body.scrollLeft);    \r\n        let py = evt.pageY || evt.y;\r\n        if(typeof py == 'undefined')  py = evt.clientY + (document.documentElement.scrollTop || document.body.scrollTop);\r\n\r\n        let ox = evt.offsetX;\r\n        let oy = evt.offsetY;\r\n        if(typeof ox === 'undefined' && typeof oy === 'undefined') {\r\n            let p = this.getElementPosition(target);\r\n            ox= px - p.left;\r\n            oy = py - p.top;\r\n        }\r\n        if(scale) {\r\n            if(scale.x) ox = ox / scale.x;\r\n            if(scale.y) oy = oy / scale.y;\r\n        }\r\n\r\n        return {\r\n            pageX: px,\r\n            pageY: py,\r\n            clientX: evt.clientX,\r\n            clientY: evt.clientY,\r\n            //相对于容器偏移量\r\n            offsetX: ox,\r\n            offsetY: oy,\r\n            layerX: evt.layerX,\r\n            layerY: evt.layerY,\r\n            screenX: evt.screenX,\r\n            screenY: evt.screenY,\r\n            x: ox,\r\n            y: oy,\r\n            isTouch: isTouch,\r\n            touches\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 检 查对象是否为指定的类型,不包括继承\r\n     * \r\n     * @method isType\r\n     * @static\r\n     * @param {object} target 需要判断类型的对象\r\n     * @param {class} type 对象类型\r\n     * @return {boolean} 返回对象是否为指定类型 \r\n     */\r\n    static isType(target, type) {\r\n        if(!target || typeof target !== 'object') return false;\r\n        if(target.constructor === type) return true;\r\n        /*if(target.__baseType) {        \r\n            return jmUtils.isType(target.__baseType.prototype,type);\r\n        }*/\r\n\r\n        //return target instanceof type;\r\n        return false;\r\n    }\r\n    /**\r\n     * 判断点是否在多边形内\r\n     * 如果一个点在多边形内部，任意角度做射线肯定会与多边形要么有一个交点，要么有与多边形边界线重叠。\r\n     * 如果一个点在多边形外部，任意角度做射线要么与多边形有一个交点，要么有两个交点，要么没有交点，要么有与多边形边界线重叠。\r\n     * 利用上面的结论，我们只要判断这个点与多边形的交点个数，就可以判断出点与多边形的位置关系了。\r\n     * \r\n     * @method pointInPolygon\r\n     * @static\r\n     * @param {point} pt 坐标对象\r\n     * @param {array} polygon 多边型角坐标对象数组\r\n     * @param {number} offset 判断可偏移值\r\n     * @return {integer} 0= 不在图形内和线上，1=在边上，2=在图形内部\r\n     */\r\n    static pointInPolygon(pt, polygon, offset) {\r\n        offset = offset || 1;\r\n        offset = offset / 2;\r\n        let i, j, n = polygon.length;\r\n        let inside = false, redo = true;\r\n\r\n        if(!polygon || n == 0) return 0;\r\n        if(n == 1) {\r\n            return Math.abs(polygon[0].x - pt.x) <= offset && Math.abs(polygon[0].y - pt.y) <= offset;\r\n        }\r\n        \r\n        //一条直线\r\n        else if(n == 2) {\r\n            //在最左边之外或在最右边之外\r\n            if(Math.min(polygon[0].x,polygon[1].x) - pt.x > offset || \r\n                pt.x - Math.max(polygon[0].x,polygon[1].x) > offset ) {\r\n                return 0;\r\n            }\r\n            //在最顶部之外或在最底部之外\r\n            if(Math.min(polygon[0].y,polygon[1].y) - pt.y > offset || \r\n                pt.y - Math.max(polygon[0].y,polygon[1].y) > offset) {\r\n                return 0;\r\n            }\r\n\r\n            //如果线为平行为纵坐标。\r\n            if(polygon[0].x == polygon[1].x){\r\n                return (Math.abs(polygon[0].x - pt.x) <= offset && (pt.y - polygon[0].y) * (pt.y - polygon[1].y) <= 0)? 1:0;\r\n            }\r\n            //如果线为平行为横坐标。\r\n            if(polygon[0].y == polygon[1].y){\r\n                return (Math.abs(polygon[0].y - pt.y) <= offset && (pt.x - polygon[0].x) * (pt.x - polygon[1].x) <= 0)? 1:0;\r\n            }\r\n\r\n            if(Math.abs(polygon[0].x - pt.x) < offset && Math.abs(polygon[0].y - pt.y) < offset) {\r\n                return 1;\r\n            }\r\n            if(Math.abs(polygon[1].x - pt.x) < offset && Math.abs(polygon[1].y - pt.y) < offset) {\r\n                return 1;\r\n            }\r\n\r\n            //点到直线的距离小于宽度的一半，表示在线上\r\n            if(pt.y != polygon[0].y && pt.y != polygon[1].y) {\r\n\r\n                let f = (polygon[1].x - polygon[0].x) / (polygon[1].y - polygon[0].y) * (pt.y - polygon[0].y);\r\n                let ff = (pt.y - polygon[0].y) / Math.sqrt(f * f + (pt.y - polygon[0].y) * (pt.y - polygon[0].y));\r\n                let l = ff * (pt.x - polygon[0].x - f );\r\n                \r\n                return Math.abs(l) <= offset ?1:0;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        for (i = 0;i < n;++i) {\r\n            if (polygon[i].x == pt.x &&    // 是否在顶点上\r\n                polygon[i].y == pt.y ) {\r\n                return 1;\r\n            }\r\n        }\r\n\r\n        //pt = this.clone(pt);\r\n        while (redo) {\r\n            redo = false;\r\n            inside = false;\r\n            for (i = 0,j = n - 1;i < n;j = i++) {\r\n                if ( (polygon[i].y < pt.y && pt.y < polygon[j].y) || \r\n                    (polygon[j].y < pt.y && pt.y < polygon[i].y) ) {\r\n                    if (pt.x <= polygon[i].x || pt.x <= polygon[j].x) {\r\n                        var _x = (pt.y-polygon[i].y)*(polygon[j].x-polygon[i].x)/(polygon[j].y-polygon[i].y)+polygon[i].x;\r\n                        if (pt.x < _x)          // 在线的左侧\r\n                            inside = !inside;\r\n                        else if (pt.x == _x)    // 在线上\r\n                        {\r\n                            return 1;\r\n                        }\r\n                    }\r\n                }\r\n                else if ( pt.y == polygon[i].y) {\r\n                    if (pt.x < polygon[i].x) {    // 交点在顶点上                    \r\n                        if(polygon[i].y > polygon[j].y) {\r\n                            --pt.y\r\n                        }\r\n                        else {\r\n                            ++pt.y;\r\n                        }\r\n                        redo = true;\r\n                        break;\r\n                    }\r\n                }\r\n                else if ( polygon[i].y ==  polygon[j].y && // 在水平的边界线上\r\n                    pt.y == polygon[i].y &&\r\n                    ( (polygon[i].x < pt.x && pt.x < polygon[j].x) || \r\n                    (polygon[j].x < pt.x && pt.x < polygon[i].x) ) ) {\r\n                    inside = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return inside ? 2:0;\r\n    }\r\n\r\n    /**\r\n     * @method judge 判断点是否在多边形中\r\n     * @param {point} dot {{x,y}} 需要判断的点\r\n     * @param {array} coordinates {{x,y}} 多边形点坐标的数组，为保证图形能够闭合，起点和终点必须相等。\r\n     *        比如三角形需要四个点表示，第一个点和最后一个点必须相同。 \r\n     * @param  {number} 是否为实心 1= 是\r\n     * @returns {boolean} 结果 true=在形状内\r\n     */\r\n    /*static judge(dot,coordinates,noneZeroMode) {\r\n        // 默认启动none zero mode\r\n        noneZeroMode=noneZeroMode||1;\r\n        var x = dot.x,y=dot.y;\r\n        var crossNum = 0;\r\n        // 点在线段的左侧数目\r\n        var leftCount = 0;\r\n        // 点在线段的右侧数目\r\n        var rightCount = 0;\r\n        for(var i=0;i<coordinates.length-1;i++){\r\n            var start = coordinates[i];\r\n            var end = coordinates[i+1];\r\n                \r\n            // 起点、终点斜率不存在的情况\r\n            if(start.x===end.x) {\r\n                // 因为射线向右水平，此处说明不相交\r\n                if(x>start.x) continue;\r\n                \r\n                // 从左侧贯穿\r\n                if((end.y>start.y&&y>=start.y && y<=end.y)){\r\n                    leftCount++;\r\n                    crossNum++;\r\n                }\r\n                // 从右侧贯穿\r\n                if((end.y<start.y&&y>=end.y && y<=start.y)) {\r\n                    rightCount++;\r\n                    crossNum++;\r\n                }\r\n                continue;\r\n            }\r\n            // 斜率存在的情况，计算斜率\r\n            var k=(end.y-start.y)/(end.x-start.x);\r\n            // 交点的x坐标\r\n            var x0 = (y-start.y)/k+start.x;\r\n            // 因为射线向右水平，此处说明不相交\r\n            if(x>x0) continue;\r\n                \r\n            if((end.x>start.x&&x0>=start.x && x0<=end.x)){\r\n                crossNum++;\r\n                if(k>=0) leftCount++;\r\n                else rightCount++;\r\n            }\r\n            if((end.x<start.x&&x0>=end.x && x0<=start.x)) {\r\n                crossNum++;\r\n                if(k>=0) rightCount++;\r\n                else leftCount++;\r\n            }\r\n        }\r\n        \r\n        return noneZeroMode===1?leftCount-rightCount!==0:crossNum%2===1;\r\n    }*/\r\n\r\n    /**\r\n     * 检查边界，子对象是否超出父容器边界\r\n     * 当对象偏移offset后是否出界\r\n     * 返回(left:0,right:0,top:0,bottom:0)\r\n     * 如果right>0表示右边出界right偏移量,left<0则表示左边出界left偏移量\r\n     * 如果bottom>0表示下边出界bottom偏移量,top<0则表示上边出界ltop偏移量\r\n     *\r\n     * @method checkOutSide\r\n     * @static\r\n     * @param {bound} parentBounds 父对象的边界\r\n     * @param {bound} targetBounds 对象的边界\r\n     * @param {number} offset 判断是否越界可容偏差\r\n     * @return {bound} 越界标识\r\n     */\r\n    static checkOutSide(parentBounds, targetBounds, offset) {\r\n        let result = {left:0,right:0,top:0,bottom:0};\r\n        if(offset.x < 0 ) {\r\n            result.left = targetBounds.left + offset.x - parentBounds.left;\r\n        }\r\n        else if(offset.x > 0 ) {\r\n            result.right = targetBounds.right + offset.x - parentBounds.right;\r\n        }\r\n\r\n        if(offset.y < 0 ) {\r\n            result.top = targetBounds.top + offset.y - parentBounds.top;\r\n        }\r\n        else if(offset.y > 0) {\r\n            result.bottom = targetBounds.bottom + offset.y - parentBounds.bottom;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 把一个或多个点绕某个点旋转一定角度\r\n     * 先把坐标原点移到旋转中心点，计算后移回\r\n     * @method rotatePoints\r\n     * @static\r\n     * @param {Array/object} p 一个或多个点\r\n     * @param {*} rp 旋转中心点\r\n     * @param {*} r 旋转角度\r\n     */\r\n    static rotatePoints(p, rp, r) {\r\n        if(!r || !p) return p;\r\n        let cos = Math.cos(r);\r\n        let sin = Math.sin(r);\r\n        if(p.length) {\r\n            for(let i=0;i<p.length;i++) {\r\n                if(!p[i]) continue;\r\n                let x1 = p[i].x - rp.x;\r\n                let y1 = p[i].y - rp.y;\r\n                p[i].x = x1 * cos - y1 * sin + rp.x;\r\n                p[i].y = x1 * sin + y1 * cos + rp.y;\r\n            }\r\n        }\r\n        else {\r\n            let x1 = p.x - rp.x;\r\n            let y1 = p.y - rp.y;\r\n            p.x = x1 * cos - y1 * sin + rp.x;\r\n            p.y = x1 * sin + y1 * cos + rp.y;\r\n        }\r\n        return p;\r\n    }\r\n\r\n    /**\r\n     * 去除字符串开始字符\r\n     * \r\n     * @method trimStart\r\n     * @static\r\n     * @param {string} source 需要处理的字符串\r\n     * @param {char} [c] 要去除字符串的前置字符\r\n     * @return {string} 去除前置字符后的字符串\r\n     */\r\n    static trimStart(source, c) {\r\n        c = c || ' ';\r\n        if(source && source.length > 0) {\r\n            let sc = source[0];\r\n            if(sc === c || c.indexOf(sc) >= 0) {\r\n                source = source.substring(1);\r\n                return this.trimStart(source,c);\r\n            }        \r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * 去除字符串结束的字符c\r\n     *\r\n     * @method trimEnd\r\n     * @static\r\n     * @param {string} source 需要处理的字符串\r\n     * @param {char} [c] 要去除字符串的后置字符\r\n     * @return {string} 去除后置字符后的字符串\r\n     */\r\n    static trimEnd(source, c) {\r\n        c = c || ' ';\r\n        if(source && source.length > 0) {\r\n            let sc = source[source.length - 1];\r\n            if(sc === c || c.indexOf(sc) >= 0) {\r\n                source = source.substring(0,source.length - 1);\r\n                return this.trimStart(source,c);\r\n            }        \r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * 去除字符串开始与结束的字符\r\n     *\r\n     * @method trim\r\n     * @static\r\n     * @param {string} source 需要处理的字符串\r\n     * @param {char} [c] 要去除字符串的字符\r\n     * @return {string} 去除字符后的字符串\r\n     */\r\n    static trim(source,c) {\r\n        return this.trimEnd(this.trimStart(source,c),c);\r\n    }\r\n\r\n    /**\r\n     * 检查是否为百分比参数\r\n     *\r\n     * @method checkPercent\r\n     * @static\r\n     * @param {string} 字符串参数\r\n     * @return {boolean} true=当前字符串为百分比参数,false=不是\r\n     */\r\n    static checkPercent(per) {\r\n        if(typeof per === 'string') {\r\n            per = this.trim(per);\r\n            if(per[per.length - 1] == '%') {\r\n                return per;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 转换百分数为数值类型\r\n     *\r\n     * @method percentToNumber\r\n     * @static\r\n     * @param {string} per 把百分比转为数值的参数\r\n     * @return {number} 百分比对应的数值\r\n     */\r\n    static percentToNumber(per) {\r\n        if(typeof per === 'string') {\r\n            let tmp = this.checkPercent(per);\r\n            if(tmp) {\r\n                per = this.trim(tmp,'% ');\r\n                per = per / 100;\r\n            }\r\n        }\r\n        return per;\r\n    }\r\n\r\n    /**\r\n     * 转换16进制为数值\r\n     *\r\n     * @method hexToNumber\r\n     * @static\r\n     * @param {string} h 16进制颜色表达\r\n     * @return {number} 10进制表达\r\n     */\r\n    static hexToNumber(h) {\r\n        if(typeof h !== 'string') return h;\r\n\r\n        h = h.toLowerCase();\r\n        let hex = '0123456789abcdef';\r\n        let v = 0;\r\n        let l = h.length;\r\n        for(let i=0;i<l;i++) {\r\n            let iv = hex.indexOf(h[i]);\r\n            if(iv == 0) continue;\r\n            \r\n            for(let j=1;j<l - i;j++) {\r\n                iv *= 16;\r\n            }\r\n            v += iv;\r\n        }\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 转换数值为16进制字符串表达\r\n     *\r\n     * @method hex\r\n     * @static\r\n     * @param {number} v 数值\r\n     * @return {string} 16进制表达\r\n     */\r\n    static numberToHex(v) {\r\n        let hex = '0123456789abcdef';\r\n        \r\n        let h = '';\r\n        while(v > 0) {\r\n            let t = v % 16;\r\n            h = hex[t] + h;\r\n            v = Math.floor(v / 16);\r\n        }\r\n        return h;\r\n    }\r\n\r\n    /**\r\n     * 16进制颜色转为r g b a 对象 {r, g , b, a}\r\n     * @param {string}} hex 16进度的颜色\r\n     */\r\n    static hexToRGBA(hex) {\r\n        hex = this.trim(hex);        \r\n\r\n        //当为7位时，表示需要转为带透明度的rgba\r\n        if(hex[0] == '#') {\r\n            const color = {\r\n                a: 1\r\n            };\r\n            if(hex.length >= 8) {\r\n                color.a = hex.substr(1,2);\r\n                color.g = hex.substr(5,2);\r\n                color.b = hex.substr(7,2);\r\n                color.r = hex.substr(3,2);\r\n                //透明度\r\n                color.a = (this.hexToNumber(color.a) / 255).toFixed(4);\r\n\r\n                color.r = this.hexToNumber(color.r||0);\r\n                color.g = this.hexToNumber(color.g||0);\r\n                color.b = this.hexToNumber(color.b||0);\r\n                return color; \r\n            }\r\n            // #cccccc || #ccc\r\n            else if(hex.length === 7 || hex.length === 4) {\r\n                // #ccc这种情况，把每个位复制一份\r\n                if(hex.length === 4) {\r\n                    color.g = hex.substr(2, 1);\r\n                    color.g = color.g + color.g;\r\n                    color.b = hex.substr(3, 1);\r\n                    color.b = color.b + color.b;\r\n                    color.r = hex.substr(1, 1);\r\n                    color.r = color.r + color.r;\r\n                }\r\n                else {\r\n                    color.g = hex.substr(3, 2);//除#号外的第二位\r\n                    color.b = hex.substr(5, 2);\r\n                    color.r = hex.substr(1, 2);\r\n                }\r\n\r\n                color.r = this.hexToNumber(color.r||0);\r\n                color.g = this.hexToNumber(color.g||0);\r\n                color.b = this.hexToNumber(color.b||0);\r\n                \r\n                return color; \r\n            }\r\n            //如果是5位的话，# 则第2位表示A，后面依次是r,g,b\r\n            else if(hex.length === 5) {\r\n                color.a = hex.substr(1,1);\r\n                color.g = hex.substr(3,1);//除#号外的第二位\r\n                color.b = hex.substr(4,1);\r\n                color.r = hex.substr(2,1);\r\n\r\n                color.r = this.hexToNumber(color.r||0);\r\n                color.g = this.hexToNumber(color.g||0);\r\n                color.b = this.hexToNumber(color.b||0);\r\n                //透明度\r\n                color.a = (this.hexToNumber(color.a) / 255).toFixed(4);\r\n                return color; \r\n            }\r\n        }  \r\n        return hex;     \r\n    }\r\n\r\n    /**\r\n     * 转换颜色格式，如果输入r,g,b则转为hex格式,如果为hex则转为r,g,b格式\r\n     *\r\n     * @method toColor\r\n     * @static\r\n     * @param {string} hex 16进制颜色表达\r\n     * @return {string} 颜色字符串\r\n     */\r\n    static toColor(r, g, b, a) {    \r\n        if(typeof r === 'string' && r) {\r\n            r = this.trim(r); \r\n            // 正常的颜色表达，不需要转换\r\n            if(r[0] === '#' && (r.length === 4 || r.length === 7)) return r;\r\n\r\n            const color = this.hexToRGBA(r);\r\n            if(typeof color === 'string') return color;\r\n            \r\n            r = color.r || r;\r\n            g = color.g || g;\r\n            b = color.b || b;\r\n            a = color.a || a;\r\n        }\r\n        if(typeof r != 'undefined' && typeof g != 'undefined' && typeof b != 'undefined') {\r\n            if(typeof a != 'undefined') {            \r\n                return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\r\n            }\r\n            else {\r\n                return 'rgb(' + r + ',' + g + ',' + b + ')';\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n    // window.requestAnimationFrame() 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行\r\n    static requestAnimationFrame(callback, win) {\r\n        let fun = win && win.requestAnimationFrame? win.requestAnimationFrame: (typeof window !== 'undefined' && window.requestAnimationFrame? window.requestAnimationFrame: setTimeout);        \r\n\t\treturn fun(callback, 20);\r\n    }\r\n    static cancelAnimationFrame(handler, win) {\r\n        let fun = win && win.cancelAnimationFrame? win.cancelAnimationFrame: (typeof window !== 'undefined' && window.cancelAnimationFrame? window.cancelAnimationFrame: clearTimeout);        \r\n\t\treturn fun(handler);\r\n    }\t\r\n}\r\nexport { jmUtils };","\r\nimport {jmList} from \"./jmList.js\";\r\n\r\nconst ANICOUNTER = Symbol('jmchart#animate#counter');\r\n\r\n/**\r\n *  所有jm对象的基础对象\r\n * \r\n * @class jmObject\r\n * @for jmGraph\r\n */\r\nexport default class jmObject {\r\n\t//id;\r\n\tconstructor(g) {\r\n\t\tif(g && g.type == 'jmGraph') {\r\n\t\t\tthis.graph = g;\r\n\t\t}\r\n\t\t//this.id = Symbol(\"id\"); //生成一个唯一id\r\n\t}\r\n\t\r\n\t/**\r\n\t * 检 查对象是否为指定类型\r\n\t * \r\n\t * @method is\r\n\t * @param {class} type 判断的类型\r\n\t * @for jmObject\r\n\t * @return {boolean} true=表示当前对象为指定的类型type,false=表示不是\r\n\t */\r\n\tis(type) {\r\n\t\tif(typeof type == 'string') {\r\n\t\t\treturn this.type == type;\r\n\t\t}\r\n\t\treturn this instanceof type;\r\n\t}\r\n\r\n\t/**\r\n\t * 给控件添加动画处理,如果成功执行会导致画布刷新。\r\n\t *\r\n\t * @method animate\r\n\t * @for jmObject\r\n\t * @param {function} handle 动画委托\r\n\t * @param {integer} millisec 此委托执行间隔 （毫秒）\r\n\t */\r\n\tanimate(...args) {\t\r\n\t\tif(this.is('jmGraph')) {\r\n\t\t\tif(args.length > 1) {\t\t\t\r\n\t\t\t\tif(!this.animateHandles) this.animateHandles = new jmList();\r\n\t\t\t\t\r\n\t\t\t\tvar params = [];\r\n\t\t\t\tif(args.length > 2) {\r\n\t\t\t\t\tfor(var i=2;i<args.length;i++) {\r\n\t\t\t\t\t\tparams.push(args[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\r\n\t\t\t\tthis.animateHandles.add({\r\n\t\t\t\t\tmillisec: args[1] || 20, \r\n\t\t\t\t\thandle: args[0], \r\n\t\t\t\t\tparams:params\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif(this.animateHandles) {\r\n\t\t\t\tif(this.animateHandles.count() > 0) {\r\n\t\t\t\t\tvar self = this;\r\n\t\t\t\t\t//延时处理动画事件\r\n\t\t\t\t\tthis.dispatcher = setTimeout(function(_this) {\r\n\t\t\t\t\t\t_this = _this || self;\r\n\t\t\t\t\t\t//var needredraw = false;\r\n\t\t\t\t\t\tvar overduehandles = [];\r\n\t\t\t\t\t\tvar curTimes = new Date().getTime();\r\n\t\t\t\t\t\t_this.animateHandles.each(function(i,ani) {\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tif(ani && ani.handle && (!ani.times || curTimes - ani.times >= ani.millisec)) {\r\n\t\t\t\t\t\t\t\t\tvar r = ani.handle.apply(_this, ani.params);\r\n\t\t\t\t\t\t\t\t\tif(r === false) {\r\n\t\t\t\t\t\t\t\t\t\toverduehandles.push(ani);//表示已完成的动画效果\r\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tani.times = curTimes;\r\n\t\t\t\t\t\t\t\t\t//needredraw = true;\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch(e) {\r\n\t\t\t\t\t\t\t\tif(window.console && window.console.info) {\r\n\t\t\t\t\t\t\t\t\twindow.console.info(e.toString());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(ani) overduehandles.push(ani);//异常的事件，不再执行\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tfor(var i in overduehandles) {\r\n\t\t\t\t\t\t\t_this.animateHandles.remove(overduehandles[i]);//移除完成的效果\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_this.animate();\r\n\t\t\t\t\t},10,this);//刷新\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\t\telse {\r\n\t\t\tvar graph = this.graph;\r\n\t\t\tif(graph) {\r\n\t\t\t\tgraph.animate(...args);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { jmObject };","\r\nimport {jmUtils} from \"./jmUtils.js\";\r\nimport { jmObject } from \"./jmObject.js\";\r\n\r\nconst PROPERTY_KEY = Symbol(\"properties\");\r\n\r\n/**\r\n * 对象属性管理\r\n * \r\n * @class jmProperty\r\n * @extends jmObject\r\n * @require jmObject\r\n */\r\nexport default class jmProperty extends jmObject {\t\t\r\n\t\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis[PROPERTY_KEY] = {};\r\n\t}\r\n\r\n\t/**\r\n\t * 基础属性读写接口\r\n\t * @method __pro\r\n\t * @param {string} name 属性名\r\n\t * @param {any} value 属性的值\r\n\t * @returns {any} 属性的值\r\n\t */\r\n\t__pro(...pars) {\r\n\t\tif(pars) {\r\n\t\t\tlet pros = this[PROPERTY_KEY];\r\n\t\t\tlet name = pars[0];\r\n\t\t\tif(pars.length > 1) {\r\n\t\t\t\tlet value = pars[1];\r\n\t\t\t\tlet args = {oldValue: pros[name], newValue: value};\r\n\t\t\t\tpros[name] = pars[1];\r\n\t\t\t\tif(this.emit) this.emit('propertyChange', name, args);\r\n\t\t\t\treturn pars[1];\r\n\t\t\t}\r\n\t\t\telse if(pars.length == 1) {\r\n\t\t\t\treturn pros[name];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 是否需要刷新画板，属性的改变会导致它变为true\r\n\t * @property needUpdate\r\n\t * @type {boolean}\r\n\t */\r\n\tget needUpdate() {\r\n\t\treturn this.__pro('needUpdate');\r\n\t}\r\n\tset needUpdate(v) {\r\n\t\tthis.__pro('needUpdate', v);\r\n\t\t//子控件属性改变，需要更新整个画板\r\n\t\tif(v && !this.is('jmGraph') && this.graph) {\r\n\t\t\tthis.graph.needUpdate = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 当前所在的画布对象 jmGraph\r\n\t * @property graph\r\n\t * @type {jmGraph}\r\n\t */\r\n\tget graph() {\r\n\t\tlet g = this.__pro('graph');\r\n\t\tg = g || (this.__pro('graph', this.findParent('jmGraph')));\r\n\t\treturn g;\r\n\t}\r\n\tset graph(v) {\r\n\t\treturn this.__pro('graph', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 在下次进行重绘时执行\r\n\t * @param {Function} handler \r\n\t */\r\n\trequestAnimationFrame(handler) {\r\n\t\treturn jmUtils.requestAnimationFrame(handler, this.graph? this.graph.canvas: null);\r\n\t}\r\n\t/**\r\n\t * 清除执行回调\r\n\t * @param {Function} handler \r\n\t * @returns \r\n\t */\r\n\tcancelAnimationFrame(handler) {\r\n\t\treturn jmUtils.cancelAnimationFrame(handler, this.graph? this.graph.canvas: null);\r\n\t}\r\n}\r\n\r\nexport { jmProperty };\r\n\r\n\r\n","import {jmUtils} from \"./jmUtils.js\";\r\n\r\n/**\r\n * 画图阴影对象表示法\r\n *\r\n * @class jmShadow\r\n * @param {number} x 横坐标偏移量\r\n * @param {number} y 纵坐标编移量\r\n * @param {number} blur 模糊值\r\n * @param {string} color 阴影的颜色\r\n */\r\n\r\nexport default class jmShadow {\r\n\tconstructor(x, y, blur, color) {\r\n\t\tif(typeof x == 'string' && !y && !blur && !color) {\r\n\t\t\tthis.fromString(x);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.blur = blur;\r\n\t\t\tthis.color = color;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 根据字符串格式转为阴影\r\n\t * @method fromString\r\n\t * @param {string} s 阴影字符串 x,y,blur,color\r\n\t */\r\n\tfromString(s) {\r\n\t\tif(!s) return;\r\n\t\tlet ms = s.match(/\\s*([^,]+)\\s*,\\s*([^,]+)\\s*(,[^,]+)?\\s*(,[\\s\\S]+)?\\s*/i);\r\n\t\tif(ms) {\r\n\t\t\tthis.x = ms[1]||0;\r\n\t\t\tthis.y = ms[2]||0;\r\n\t\t\tif(ms[3]) {\r\n\t\t\t\tms[3] = jmUtils.trim(ms[3],', ');\r\n\t\t\t\t//如果第三位是颜色格式，则表示为颜色\r\n\t\t\t\tif(ms[3].indexOf('#')===0 || /^rgb/i.test(ms[3])) {\r\n\t\t\t\t\tthis.color = ms[3];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.blur = jmUtils.trim(ms[3],', ');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(ms[4]) {\r\n\t\t\t\tthis.color = jmUtils.trim(ms[4],', ');\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * 转为字符串格式 x,y,blur,color\r\n\t * @method toString\r\n\t * @returns {string} 阴影字符串\r\n\t */\r\n\ttoString() {\r\n\t\tlet s = this.x + ',' + this.y;\r\n\t\tif(this.blur) s += ',' + this.blur;\r\n\t\tif(this.color) s += ',' + this.color;\r\n\t\treturn s;\r\n\t}\r\n}\r\n\r\nexport { jmShadow };","import {jmUtils} from \"./jmUtils.js\";\r\nimport {jmList} from \"./jmList.js\";\r\n\r\n/**\r\n * 渐变类\r\n *\r\n * @class jmGradient\r\n * @param {object} op 渐变参数,type:[linear= 线性渐变,radial=放射性渐变] \r\n */\r\nexport default class jmGradient {\r\n\tconstructor(opt) {\r\n\t\tthis.stops = new jmList();\r\n\r\n\t\tif(opt && typeof opt == 'object') {\r\n\t\t\tfor(let k in opt) {\r\n\t\t\t\tthis[k] = opt[k];\r\n\t\t\t}\r\n\t\t}\r\n\t\t//解析字符串格式\r\n\t\t//linear-gradient(direction, color-stop1, color-stop2, ...);\r\n\t\t//radial-gradient(center, shape size, start-color, ..., last-color);\r\n\t\telse if(typeof opt == 'string') {\r\n\t\t\tthis.fromString(opt);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 添加渐变色\r\n\t * \r\n\t * @method addStop\r\n\t * @for jmGradient\r\n\t * @param {number} offset 放射渐变颜色偏移,可为百分比参数。\r\n\t * @param {string} color 当前偏移颜色值\r\n\t */\r\n\taddStop(offset, color) {\r\n\t\tthis.stops.add({\r\n\t\t\toffset: Number(offset),\r\n\t\t\tcolor: color\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * 生成为canvas的渐变对象\r\n\t *\r\n\t * @method toGradient\r\n\t * @for jmGradient\r\n\t * @param {jmControl} control 当前渐变对应的控件\r\n\t * @return {gradient} canvas渐变对象\r\n\t */\r\n\ttoGradient(control) {\r\n\t\tlet gradient;\r\n\t\tlet context = control.context || control;\r\n\t\tlet bounds = control.absoluteBounds?control.absoluteBounds:control.getAbsoluteBounds();\r\n\t\tlet x1 = this.x1||0;\r\n\t\tlet y1 = this.y1||0;\r\n\t\tlet x2 = this.x2;\r\n\t\tlet y2 = this.y2;\r\n\r\n\t\tlet location = control.getLocation();\r\n\r\n\t\tlet d = 0;\r\n\t\tif(location.radius) {\r\n\t\t\td = location.radius * 2;\t\t\t\t\r\n\t\t}\r\n\t\tif(!d) {\r\n\t\t\td = Math.min(location.width,location.height);\t\t\t\t\r\n\t\t}\r\n\r\n\t\t//let offsetLine = 1;//渐变长度或半径\r\n\t\t//处理百分比参数\r\n\t\tif(jmUtils.checkPercent(x1)) {\r\n\t\t\tx1 = jmUtils.percentToNumber(x1) * (bounds.width || d);\r\n\t\t}\r\n\t\tif(jmUtils.checkPercent(x2)) {\r\n\t\t\tx2 = jmUtils.percentToNumber(x2) * (bounds.width || d);\r\n\t\t}\r\n\t\tif(jmUtils.checkPercent(y1)) {\r\n\t\t\ty1 = jmUtils.percentToNumber(y1) * (bounds.height || d);\r\n\t\t}\r\n\t\tif(jmUtils.checkPercent(y2)) {\r\n\t\t\ty2 = jmUtils.percentToNumber(y2) * (bounds.height || d);\r\n\t\t}\t\r\n\r\n\t\tlet sx1 = Number(x1) + bounds.left;\r\n\t\tlet sy1 = Number(y1) + bounds.top;\r\n\t\tlet sx2 = Number(x2) + bounds.left;\r\n\t\tlet sy2 = Number(y2) + bounds.top;\r\n\t\tif(this.type === 'linear') {\t\t\r\n\t\t\tgradient = context.createLinearGradient(sx1, sy1, sx2, sy2);\r\n\t\t}\r\n\t\telse if(this.type === 'radial') {\r\n\t\t\tlet r1 = this.r1||0;\r\n\t\t\tlet r2 = this.r2;\r\n\t\t\tif(jmUtils.checkPercent(r1)) {\r\n\t\t\t\tr1 = jmUtils.percentToNumber(r1);\t\t\t\r\n\t\t\t\tr1 = d * r1;\r\n\t\t\t}\r\n\t\t\tif(jmUtils.checkPercent(r2)) {\r\n\t\t\t\tr2 = jmUtils.percentToNumber(r2);\r\n\t\t\t\tr2 = d * r2;\r\n\t\t\t}\t\r\n\t\t\t//offsetLine = Math.abs(r2 - r1);//二圆半径差\r\n\t\t\t//小程序的接口特殊\r\n\t\t\tif(context.createCircularGradient) { \r\n\t\t\t\tgradient = context.createCircularGradient(sx1, sy1, r2);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgradient = context.createRadialGradient(sx1, sy1, r1, sx2, sy2, r2);\t\r\n\t\t\t}\t\r\n\t\t}\r\n\t\t//颜色渐变\r\n\t\tthis.stops.each(function(i,s) {\t\r\n\t\t\tlet c = jmUtils.toColor(s.color);\r\n\t\t\t//s.offset 0.0 ~ 1.0\r\n\t\t\tgradient.addColorStop(s.offset, c);\t\t\r\n\t\t});\r\n\t\t\r\n\t\treturn gradient;\r\n\t}\r\n\r\n\t/**\r\n\t * 变换为字条串格式\r\n\t * linear-gradient(x1 y1 x2 y2, color1 step, color2 step, ...);\t//radial-gradient(x1 y1 r1 x2 y2 r2, color1 step,color2 step, ...);\r\n\t * linear-gradient线性渐变，x1 y1表示起点，x2 y2表示结束点,color表颜色，step为当前颜色偏移\r\n\t * radial-gradient径向渐变,x1 y1 r1分别表示内圆中心和半径，x2 y2 r2为结束圆 中心和半径，颜色例似线性渐变 step为0-1之间\r\n\t *\r\n\t * @method fromString\r\n\t * @for jmGradient\r\n\t * @return {string} \r\n\t */\r\n\tfromString(s) {\r\n\t\tif(!s) return;\r\n\t\tlet ms = s.match(/(linear|radial)-gradient\\s*\\(\\s*([^,]+)\\s*,\\s*((.|\\s)+)\\)/i);\r\n\t\tif(!ms || ms.length < 3) return;\r\n\t\tthis.type = ms[1].toLowerCase();\t\t\r\n\t\t\r\n\t\tconst ps = jmUtils.trim(ms[2]).split(/\\s+/);\r\n\t\t//线性渐变\r\n\t\tif(this.type == 'linear') {\r\n\t\t\tif(ps.length <= 2) {\r\n\t\t\t\tthis.x2 = ps[0];\r\n\t\t\t\tthis.y2 = ps[1]||0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.x1 = ps[0];\r\n\t\t\t\tthis.y1 = ps[1];\r\n\t\t\t\tthis.x2 = ps[2];\r\n\t\t\t\tthis.y2 = ps[3];\r\n\t\t\t}\r\n\t\t}\r\n\t\t//径向渐变\r\n\t\telse {\r\n\t\t\tif(ps.length <= 3) {\r\n\t\t\t\tthis.x2 = ps[0];\r\n\t\t\t\tthis.y2 = ps[1]||0;\r\n\t\t\t\tthis.r2 = ps[2]||0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.x1 = ps[0];\r\n\t\t\t\tthis.y1 = ps[1];\r\n\t\t\t\tthis.r1 = ps[2];\r\n\t\t\t\tthis.x2 = ps[3];\r\n\t\t\t\tthis.y2 = ps[3];\r\n\t\t\t\tthis.r2 = ps[3];\r\n\t\t\t}\r\n\t\t}\r\n\t\t//解析颜色偏移\r\n\t\t//color step\r\n\t\tconst pars = ms[3].match(/((rgb(a)?\\s*\\([\\d,\\.\\s]+\\))|(#[a-zA-Z\\d]+))\\s+([\\d\\.]+)/ig);\r\n\t\tif(pars && pars.length) {\r\n\t\t\tfor(let i=0;i<pars.length;i++) {\r\n\t\t\t\tconst par = jmUtils.trim(pars[i]);\r\n\t\t\t\tconst spindex = par.lastIndexOf(' ');\r\n\t\t\t\tif(spindex > -1) {\t\t\t\r\n\t\t\t\t\tconst offset = Number(par.substr(spindex + 1));\t\t\r\n\t\t\t\t\tconst color = jmUtils.trim(par.substr(0, spindex));\r\n\t\t\t\t\tif(!isNaN(offset) && color) {\r\n\t\t\t\t\t\tthis.addStop(offset, color);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 转换为渐变的字符串表达\r\n\t *\r\n\t * @method toString\r\n\t * @for jmGradient\r\n\t * @return {string} linear-gradient(x1 y1 x2 y2, color1 step, color2 step, ...);\t//radial-gradient(x1 y1 r1 x2 y2 r2, color1 step,color2 step, ...);\r\n\t */\r\n\ttoString() {\r\n\t\tlet str = this.type + '-gradient(';\r\n\t\tif(this.type == 'linear') {\r\n\t\t\tstr += this.x1 + ' ' + this.y1 + ' ' + this.x2 + ' ' + this.y2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstr += this.x1 + ' ' + this.y1 + ' ' + this.r1 + ' ' + this.x2 + ' ' + this.y2 + ' ' + this.r2;\r\n\t\t}\r\n\t\t//颜色渐变\r\n\t\tthis.stops.each(function(i,s) {\t\r\n\t\t\tstr += ',' + s.color + ' ' + s.offset;\r\n\t\t});\r\n\t\treturn str + ')';\r\n\t}\r\n}\r\n\r\nexport { jmGradient };\r\n\r\n\r\n\r\n","import {jmUtils} from \"./jmUtils.js\";\r\n/**\r\n * 事件模型\r\n *\r\n * @class jmEvents\r\n * @for jmGraph\r\n */\r\nexport default class jmEvents {\r\n\r\n\tconstructor(container, target) {\r\n\t\tthis.container = container;\r\n\t\tthis.target = target || container;\r\n\t\tthis.mouseHandler = new jmMouseEvent(this, container, target);\r\n\t\tthis.keyHandler = new jmKeyEvent(this, container, target);\r\n\t}\r\n\r\n\ttouchStart(evt) {\r\n\t\tevt = evt || window.event;\r\n\t\tevt.eventName = 'touchstart';\r\n\t\tthis.container.raiseEvent('touchstart',evt);\r\n\t\tlet t = evt.target || evt.srcElement;\r\n\t\tif(t == this.target) {\r\n\t\t\t//if(evt.preventDefault) evt.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\ttouchMove(evt) {\r\n\t\tevt = evt || window.event;\r\n\t\tevt.eventName = 'touchmove';\r\n\t\tthis.container.raiseEvent('touchmove',evt);\r\n\t\tlet t = evt.target || evt.srcElement;\r\n\t\tif(t == this.target) {\r\n\t\t\t//if(evt.preventDefault) evt.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\ttouchEnd(evt) {\r\n\t\tevt = evt || window.event;\r\n\t\tevt.eventName = 'touchend';\r\n\t\t\r\n\t\tthis.container.raiseEvent('touchend',evt);\r\n\t\tlet t = evt.target || evt.srcElement;\r\n\t\tif(t == this.target) {\r\n\t\t\t//if(evt.preventDefault) evt.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\ttouchCancel(evt) {\r\n\t\tevt = evt || window.event;\r\n\t\tevt.eventName = 'touchcancel';\r\n\t\t\r\n\t\tthis.container.raiseEvent('touchcancel',evt);\r\n\t\tlet t = evt.target || evt.srcElement;\r\n\t\tif(t == this.target) {\r\n\t\t\t//if(evt.preventDefault) evt.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\t// 销毁\r\n\tdestroy() {\r\n\t\tthis.mouseHandler.destroy();\r\n\t\tthis.keyHandler.destroy();\r\n\t}\r\n}\r\n\r\n/**\r\n * 鼠标事件处理对象，container 为事件主体，target为响应事件对象\r\n */\r\nclass jmMouseEvent {\r\n\tconstructor(instance, container, target) {\r\n\t\tthis.instance = instance;\r\n\t\tthis.container = container;\r\n\t\tthis.target = target || container;\r\n\r\n\t\tthis.eventEvents = {};// 所有绑定的事件\r\n\r\n\t\tthis.init(instance, container, target);\r\n\t}\r\n\t\r\n\tinit(instance, container, target) {\r\n\t\tlet canvas = this.target;\t\r\n\t\tlet doc = typeof typeof document != 'undefined'?document:null;\r\n\t\t//禁用鼠标右健系统菜单\r\n\t\t//canvas.oncontextmenu = function() {\r\n\t\t//\treturn false;\r\n\t\t//};\r\n\r\n\t\tthis.eventEvents['mousedown'] = jmUtils.bindEvent(this.target,'mousedown',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tevt.eventName = 'mousedown';\r\n\t\t\tlet r = container.raiseEvent('mousedown',evt);\r\n\t\t\t//if(r === false) {\r\n\t\t\t\t//if(evt.preventDefault) evt.preventDefault();\r\n\t\t\t\t//return false;\r\n\t\t\t//}\t\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tthis.eventEvents['mousedown'] = jmUtils.bindEvent(this.target,'mousemove',function(evt) {\t\r\n\t\t\tevt = evt || window.event;\t\t\r\n\t\t\tevt.eventName = 'mousemove';\r\n\t\t\tlet target = evt.target || evt.srcElement;\r\n\t\t\tif(target == canvas) {\r\n\t\t\t\tlet r = container.raiseEvent('mousemove',evt);\r\n\t\t\t\t//if(r === false) {\r\n\t\t\t\t\tif(evt.preventDefault) evt.preventDefault();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t//}\t\t\r\n\t\t\t}\t\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tthis.eventEvents['mousedown'] = jmUtils.bindEvent(this.target,'mouseover',function(evt) {\r\n\t\t\tevt = evt || window.event;\t\r\n\t\t\tevt.eventName = 'mouseover';\r\n\t\t\tcontainer.raiseEvent('mouseover',evt);\r\n\t\t});\r\n\t\tthis.eventEvents['mouseleave'] = jmUtils.bindEvent(this.target,'mouseleave',function(evt) {\r\n\t\t\tevt = evt || window.event;\t\r\n\t\t\tevt.eventName = 'mouseleave';\r\n\t\t\tcontainer.raiseEvent('mouseleave',evt);\r\n\t\t});\t\t\t\r\n\t\tthis.eventEvents['mouseout'] = jmUtils.bindEvent(this.target,'mouseout',function(evt) {\r\n\t\t\tevt = evt || window.event;\t\r\n\t\t\tevt.eventName = 'mouseout';\r\n\t\t\tcontainer.raiseEvent('mouseout',evt);\r\n\t\t});\r\n\t\tdoc && (this.eventEvents['mouseup'] = jmUtils.bindEvent(doc,'mouseup',function(evt) {\r\n\t\t\tevt = evt || window.event;\t\r\n\t\t\tevt.eventName = 'mouseup';\r\n\t\t\t//let target = evt.target || evt.srcElement;\r\n\t\t\t//if(target == canvas) {\t\t\t\t\t\t\r\n\t\t\t\tlet r = container.raiseEvent('mouseup',evt);\r\n\t\t\t\tif(r === false) {\r\n\t\t\t\t\tif(evt.preventDefault) evt.preventDefault();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\t\t\r\n\t\t\t//}\r\n\t\t}));\r\n\t\t\r\n\t\tthis.eventEvents['dblclick'] = jmUtils.bindEvent(this.target,'dblclick',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tevt.eventName = 'dblclick';\r\n\t\t\tcontainer.raiseEvent('dblclick',evt);\r\n\t\t});\r\n\t\tthis.eventEvents['click'] = jmUtils.bindEvent(this.target,'click',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tevt.eventName = 'click';\r\n\t\t\tcontainer.raiseEvent('click',evt);\r\n\t\t});\r\n\r\n\t\tdoc && (this.eventEvents['resize'] = jmUtils.bindEvent(doc,'resize',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tevt.eventName = 'resize';\r\n\t\t\treturn container.raiseEvent('resize',evt);\r\n\t\t}));\r\n\r\n\t\t// passive: false 为了让浏览器不告警并且preventDefault有效\r\n\t\t// 另一种处理：touch-action: none; 这样任何触摸事件都不会产生默认行为，但是 touch 事件照样触发。\r\n\t\tthis.eventEvents['touchstart'] = jmUtils.bindEvent(this.target,'touchstart', function(evt) {\r\n\t\t\tevt.eventName = 'touchstart';\r\n\t\t\treturn instance.touchStart(evt);\r\n\t\t},{ passive: false });\r\n\r\n\t\tthis.eventEvents['touchmove'] = jmUtils.bindEvent(this.target,'touchmove', function(evt) {\r\n\t\t\tevt.eventName = 'touchmove';\r\n\t\t\treturn instance.touchMove(evt);\r\n\t\t},{ passive: false });\r\n\r\n\t\tdoc && (this.eventEvents['touchend'] = jmUtils.bindEvent(doc,'touchend', function(evt) {\r\n\t\t\tevt.eventName = 'touchend';\r\n\t\t\treturn instance.touchEnd(evt);\r\n\t\t},{ passive: false }));\r\n\r\n\t\tdoc && (this.eventEvents['touchcancel'] = jmUtils.bindEvent(doc,'touchcancel', function(evt) {\r\n\t\t\tevt.eventName = 'touchcancel';\r\n\t\t\treturn instance.touchCancel(evt);\r\n\t\t},{ passive: false }));\r\n\t}\r\n\r\n\t// 销毁所有事件\r\n\tdestroy() {\r\n\t\tfor(let name in this.eventEvents) {\r\n\t\t\tconst event = this.eventEvents[name];\r\n\t\t\tif(!event || !event.fun) continue;\r\n\t\t\tjmUtils.removeEvent(event.target, name, event.fun);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * 健盘事件处理对象，container 为事件主体，target为响应事件对象\r\n */\r\nclass jmKeyEvent {\r\n\tconstructor(instance, container,target) {\r\n\t\tthis.instance = instance;\r\n\t\tthis.container = container;\r\n\t\tthis.target = target || container;\r\n\r\n\t\tthis.eventEvents = {};// 所有绑定的事件\r\n\r\n\t\tthis.init(container, target);\r\n\t}\r\n\r\n\t/**\r\n\t * 初始化健盘事件\r\n\t */\r\n\tinit(container, target) {\r\n\t\tlet doc = typeof typeof document != 'undefined'?document:null;\r\n\t\t/**\r\n\t\t * 检查是否触发健盘事件至画布\r\n\t\t * 如果触发对象为输入框等对象则不响应事件\r\n\t\t *  \r\n\t\t */\r\n\t\tlet checkKeyEvent = (evt) => {\r\n\t\t\tlet target = evt.srcElement || evt.target;\r\n\t\t\tif(target && (target.tagName == 'INPUT' \r\n\t\t\t\t|| target.tagName == 'TEXTAREA'\r\n\t\t\t\t|| target.tagName == 'ANCHOR' \r\n\t\t\t\t|| target.tagName == 'FORM' \r\n\t\t\t\t|| target.tagName == 'FILE'\r\n\t\t\t\t|| target.tagName == 'IMG'\r\n\t\t\t\t|| target.tagName == 'HIDDEN'\r\n\t\t\t\t|| target.tagName == 'RADIO'\r\n\t\t\t\t|| target.tagName == 'TEXT'\t)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tdoc && (this.eventEvents['keypress'] = jmUtils.bindEvent(doc,'keypress',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tif(!checkKeyEvent(evt)) return;//如果事件为其它输入框，则不响应\r\n\t\t\tlet r = container.raiseEvent('keypress',evt);\r\n\t\t\tif(r === false && evt.preventDefault) \r\n\t\t\t\tevt.preventDefault();\r\n\t\t\treturn r;\r\n\t\t}));\r\n\t\tdoc && (this.eventEvents['keydown'] = jmUtils.bindEvent(doc,'keydown',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tif(!checkKeyEvent(evt)) return;//如果事件为其它输入框，则不响应\r\n\t\t\tlet r = container.raiseEvent('keydown',evt);\r\n\t\t\tif(r === false && evt.preventDefault) \r\n\t\t\t\tevt.preventDefault();\r\n\t\t\treturn r;\r\n\t\t}));\r\n\t\tdoc && (this.eventEvents['keyup'] = jmUtils.bindEvent(doc,'keyup',function(evt) {\r\n\t\t\tevt = evt || window.event;\r\n\t\t\tif(!checkKeyEvent(evt)) return;//如果事件为其它输入框，则不响应\r\n\t\t\tlet r = container.raiseEvent('keyup',evt);\r\n\t\t\tif(r === false && evt.preventDefault) \r\n\t\t\t\tevt.preventDefault();\r\n\t\t\treturn r;\r\n\t\t}));\t\t\t\r\n\t}\r\n\r\n\t// 销毁所有事件\r\n\tdestroy() {\r\n\t\tfor(let name in this.eventEvents) {\r\n\t\t\tconst event = this.eventEvents[name];\r\n\t\t\tif(!event || !event.fun) continue;\r\n\t\t\tjmUtils.removeEvent(event.target, name, event.fun);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { jmEvents };\r\n","\r\nimport {jmUtils} from \"./jmUtils.js\";\r\nimport {jmList} from \"./jmList.js\";\r\nimport {jmGradient} from \"./jmGradient.js\";\r\nimport {jmShadow} from \"./jmShadow.js\";\r\nimport {jmProperty} from \"./jmProperty.js\";\r\n\r\n//样式名称，也当做白名单使用\t\t\r\nconst jmStyleMap = {\r\n\t'fill':'fillStyle',\r\n\t'stroke':'strokeStyle',\r\n\t'shadow.blur':'shadowBlur',\r\n\t'shadow.x':'shadowOffsetX',\r\n\t'shadow.y':'shadowOffsetY',\r\n\t'shadow.color':'shadowColor',\r\n\t'lineWidth' : 'lineWidth',\r\n\t'miterLimit': 'miterLimit',\r\n\t'fillStyle' : 'fillStyle',\r\n\t'strokeStyle' : 'strokeStyle',\r\n\t'font' : 'font',\r\n\t'opacity' : 'globalAlpha',\r\n\t'textAlign' : 'textAlign',\r\n\t'textBaseline' : 'textBaseline',\r\n\t'shadowBlur' : 'shadowBlur',\r\n\t'shadowOffsetX' : 'shadowOffsetX',\r\n\t'shadowOffsetY' : 'shadowOffsetY',\r\n\t'shadowColor' : 'shadowColor',\r\n\t'lineJoin': 'lineJoin',//线交汇处的形状,miter(默认，尖角),bevel(斜角),round（圆角）\r\n\t'lineCap':'lineCap' //线条终端点,butt(默认，平),round(圆),square（方）\r\n};\r\n\r\n/**\r\n * 控件基础对象\r\n * 控件的基础属性和方法\r\n *\r\n * @class jmControl\r\n * @extends jmProperty\r\n */\t\r\nexport default class jmControl extends jmProperty {\t\r\n\r\n\tconstructor(params, t) {\r\n\t\tparams = params||{};\r\n\t\tsuper();\r\n\t\tthis.__pro('type', t || new.target.name);\r\n\t\tthis.style = params && params.style ? params.style : {};\r\n\t\t//this.position = params.position || {x:0,y:0};\r\n\t\tthis.width = params.width || 0;\r\n\t\tthis.height = params.height  || 0;\r\n\r\n\t\tif(params.position) {\r\n\t\t\tthis.position = params.position;\r\n\t\t}\r\n\r\n\t\tthis.graph = params.graph || null;\r\n\t\tthis.zIndex = params.zIndex || 0;\r\n\t\tthis.interactive = typeof params.interactive == 'undefined'? true : params.interactive;\r\n\r\n\t\tthis.initializing();\t\r\n\t\t\r\n\t\tthis.on = this.bind;\r\n\t\t\r\n\t\tthis.option = params;\r\n\t}\r\n\r\n\t//# region 定义属性\r\n\t/**\r\n\t * 当前对象类型名jmRect\r\n\t *\r\n\t * @property type\r\n\t * @type string\r\n\t */\r\n\tget type() {\r\n\t\treturn this.__pro('type');\r\n\t}\r\n\r\n\t/**\r\n\t * 当前canvas的context\r\n\t * @property context\r\n\t * @type {object}\r\n\t */\r\n\tget context() {\r\n\t\tlet s = this.__pro('context');\r\n\t\tif(s) return s;\r\n\t\telse if(this.is('jmGraph') && this.canvas && this.canvas.getContext) {\r\n\t\t\treturn this.context = this.canvas.getContext('2d');\r\n\t\t}\r\n\t\tlet g = this.graph;\r\n\t\tif(g) return g.context;\r\n\t\treturn g.canvas.getContext('2d');\r\n\t}\r\n\tset context(v) {\r\n\t\treturn this.__pro('context', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 样式\r\n\t * @property style\r\n\t * @type {object}\r\n\t */\r\n\tget style() {\r\n\t\tlet s = this.__pro('style');\r\n\t\tif(!s) s = this.__pro('style', {});\r\n\t\treturn s;\r\n\t}\r\n\tset style(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.__pro('style', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 当前控件是否可见\r\n\t * @property visible\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tget visible() {\r\n\t\tlet s = this.__pro('visible');\r\n\t\tif(typeof s == 'undefined') s = this.__pro('visible', true);\r\n\t\treturn s;\r\n\t}\r\n\tset visible(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.__pro('visible', v);\r\n\t}\t\r\n\r\n\t/**\r\n\t * 当前控件是否是交互式的，如果是则会响应鼠标或touch事件。\r\n\t * 如果false则不会主动响应，但冒泡的事件依然会得到回调\r\n\t * @property interactive\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tget interactive() {\r\n\t\tlet s = this.__pro('interactive');\r\n\t\treturn s;\r\n\t}\r\n\tset interactive(v) {\r\n\t\treturn this.__pro('interactive', v);\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * 当前控件的子控件集合\r\n\t * @property children\r\n\t * @type {list}\r\n\t */\r\n\tget children() {\r\n\t\tlet s = this.__pro('children');\r\n\t\tif(!s) s = this.__pro('children', new jmList());\r\n\t\treturn s;\r\n\t}\r\n\tset children(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.__pro('children', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 宽度\r\n\t * @property width\r\n\t * @type {number}\r\n\t */\r\n\tget width() {\r\n\t\tlet s = this.__pro('width');\r\n\t\tif(typeof s == 'undefined') s = this.__pro('width', 0);\r\n\t\treturn s;\r\n\t}\r\n\tset width(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.__pro('width', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 高度\r\n\t * @property height\r\n\t * @type {number}\r\n\t */\r\n\tget height() {\r\n\t\tlet s = this.__pro('height');\r\n\t\tif(typeof s == 'undefined') s = this.__pro('height', 0);\r\n\t\treturn s;\r\n\t}\r\n\tset height(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.__pro('height', v);\r\n\t}\r\n\r\n\t/**\r\n\t * 控件层级关系，发生改变时，需要重新调整排序\r\n\t * @property zIndex\r\n\t * @type {number}\r\n\t */\r\n\tget zIndex() {\r\n\t\tlet s = this.__pro('zIndex');\r\n\t\tif(!s) s = this.__pro('zIndex', 0);\r\n\t\treturn s;\r\n\t}\r\n\tset zIndex(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\tthis.__pro('zIndex', v);\r\n\t\tthis.children.sort();//层级发生改变，需要重新排序\r\n\t\tthis.needUpdate = true;\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * 设置鼠标指针\r\n\t * css鼠标指针标识,例如:pointer,move等\r\n\t * \r\n\t * @property cursor\r\n\t * @type {string}\r\n\t */\r\n\tset cursor(cur) {\t\r\n\t\tvar graph = this.graph ;\r\n\t\tif(graph) {\t\t\r\n\t\t\tgraph.css('cursor',cur);\t\t\r\n\t\t}\r\n\t}\r\n\tget cursor() {\r\n\t\tvar graph = this.graph ;\r\n\t\tif(graph) {\t\t\r\n\t\t\treturn graph.css('cursor');\t\t\r\n\t\t}\r\n\t}\r\n\r\n\t//# end region\r\n\r\n\t/**\r\n\t * 初始化对象，设定样式，初始化子控件对象\r\n\t * 此方法为所有控件需调用的方法\r\n\t *\r\n\t * @method initializing\r\n\t * @for jmControl\r\n\t */\r\n\tinitializing() {\r\n\r\n\t\tconst self = this;\r\n\t\t//定义子元素集合\r\n\t\tthis.children = this.children || new jmList();\r\n\t\tconst oadd = this.children.add;\r\n\t\t//当把对象添加到当前控件中时，设定其父节点\r\n\t\tthis.children.add = function(obj) {\r\n\t\t\tif(typeof obj === 'object') {\r\n\t\t\t\tif(obj.parent && obj.parent != self && obj.parent.children) {\r\n\t\t\t\t\tobj.parent.children.remove(obj);//如果有父节点则从其父节点中移除\r\n\t\t\t\t}\r\n\t\t\t\tobj.parent = self;\r\n\t\t\t\t//如果存在先移除\r\n\t\t\t\tif(this.contain(obj)) {\r\n\t\t\t\t\tthis.oremove(obj);\r\n\t\t\t\t}\r\n\t\t\t\toadd.call(this, obj);\r\n\t\t\t\tobj.emit('add', obj);\r\n\r\n\t\t\t\tself.needUpdate = true;\r\n\t\t\t\tif(self.graph) obj.graph = self.graph;\r\n\t\t\t\tthis.sort();//先排序\r\n\t\t\t\t//self.emit('addChild', obj);\r\n\t\t\t\treturn obj;\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.children.oremove= this.children.remove;\r\n\t\t//当把对象从此控件中移除时，把其父节点置为空\r\n\t\tthis.children.remove = function(obj) {\r\n\t\t\tif(typeof obj === 'object') {\t\t\t\t\r\n\t\t\t\tobj.parent = null;\r\n\t\t\t\tobj.graph = null;\r\n\t\t\t\tobj.remove(true);\r\n\t\t\t\tthis.oremove(obj);\r\n\t\t\t\tself.needUpdate = true;\r\n\t\t\t\t//self.emit('removeChild', obj, index);\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * 根据控件zIndex排序，越大的越高\r\n\t\t */\r\n\t\t//const osort = this.children.sort;\r\n\t\tthis.children.sort = function() {\r\n\t\t\tconst levelItems = {};\r\n\t\t\t//提取zindex大于0的元素\r\n\t\t\t//为了保证0的层级不改变，只能把大于0的提出来。\r\n\t\t\tthis.each(function(i, obj) {\r\n\t\t\t\tif(!obj) return;\r\n\t\t\t\tlet zindex = obj.zIndex;\r\n\t\t\t\tif(!zindex && obj.style && obj.style.zIndex) {\r\n\t\t\t\t\tzindex = Number(obj.style.zIndex);\r\n\t\t\t\t\tif(isNaN(zindex)) zindex=obj.style.zIndex||0;\r\n\t\t\t\t}\r\n\t\t\t\tlet items = levelItems[zindex] || (levelItems[zindex] = []);\r\n\t\t\t\titems.push(obj);\r\n\t\t\t});\r\n\r\n\t\t\tthis.splice(0, this.length);\r\n\t\t\t\r\n\t\t\tfor(let index in levelItems) {\r\n\t\t\t\toadd.call(this, levelItems[index]);\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\tosort.call(this, (c1, c2) => {\r\n\t\t\t\tlet zindex1 = c1.zIndex || c1.style.zIndex || 0;\r\n\t\t\t\tlet zindex2 = c2.zIndex || c2.style.zIndex || 0;\r\n\t\t\t\treturn zindex1 - zindex2;\r\n\t\t\t});*/\r\n\t\t}\r\n\t\tthis.children.clear = function() {\r\n\t\t\tthis.each(function(i,obj) {\r\n\t\t\t\tthis.remove(obj);\r\n\t\t\t},true);\r\n\t\t}\r\n\t\tthis.needUpdate = true;\r\n\t} \r\n\r\n\t/**\r\n\t * 设定样式到context\r\n\t * 处理样式映射，转换渐变和阴影对象为标准canvas属性\r\n\t * 样式一览\r\n\t\t| 简化名称 | 原生名称 | 说明\r\n\t\t| :- | :- | :- | \r\n\t\t| fill | fillStyle | 用于填充绘画的颜色、渐变或模式\r\n\t\t| stroke | strokeStyle | 用于笔触的颜色、渐变或模式\r\n\t\t| shadow | 没有对应的 | 最终会解析成以下几个属性，格式：'0,0,10,#fff'或g.createShadow(0,0,20,'#000');\r\n\t\t| shadow.blur | shadowBlur | 用于阴影的模糊级别\r\n\t\t| shadow.x | shadowOffsetX | 阴影距形状的水平距离\r\n\t\t| shadow.y | shadowOffsetY | 阴影距形状的垂直距离\r\n\t\t| shadow.color | shadowColor | 阴影颜色，格式：'#000'、'#46BF86'、'rgb(255,255,255)'或'rgba(39,72,188,0.5)'\r\n\t\t| lineWidth | lineWidth | 当前的线条宽度\r\n\t\t| miterLimit | miterLimit | 最大斜接长度\r\n\t\t| font | font | 请使用下面的 fontSize 和 fontFamily\r\n\t\t| fontSize | font | 字体大小\r\n\t\t| fontFamily | font | 字体\r\n\t\t| opacity | globalAlpha | 绘图的当前 alpha 或透明值\r\n\t\t| textAlign | textAlign | 文本内容的当前对齐方式\r\n\t\t| textBaseline | textBaseline | 在绘制文本时使用的当前文本基线\r\n\t\t| lineJoin | lineJoin | 两条线相交时，所创建的拐角类型：miter(默认，尖角),bevel(斜角),round（圆角）\r\n\t\t| lineCap | lineCap | 线条的结束端点样式：butt(默认，平),round(圆),square（方）\r\n\t * \r\n\t * @method setStyle\r\n\t * @for jmControl\r\n\t * @private\r\n\t * @param {style} style 样式对象，如:{fill:'black',stroke:'red'}\r\n\t */\r\n\tsetStyle(style) {\r\n\t\tstyle = style || jmUtils.clone(this.style, true);\r\n\t\tif(!style) return;\r\n\r\n\t\t/**\r\n\t\t * 样式设定\r\n\t\t * \r\n\t\t * @method __setStyle\r\n\t\t * @private\r\n\t\t * @param {jmControl} control 当前样式对应的控件对象\r\n\t\t * @param {style} style 样式\r\n\t\t * @param {string} name 样式名称\r\n\t\t * @param {string} mpkey 样式名称在映射中的key(例如：shadow.blur为模糊值)\r\n\t\t */\r\n\t\tlet __setStyle = (style, name, mpkey) => {\r\n\t\t\t\r\n\t\t\tif(style) {\t\t\r\n\t\t\t\tlet styleValue = style;\t\t\r\n\t\t\t\tif(typeof styleValue === 'function') {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tstyleValue = styleValue.call(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(e) {\r\n\t\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet t = typeof styleValue;\t\r\n\t\t\t\tlet mpname = jmStyleMap[mpkey || name];\r\n\r\n\t\t\t\t//如果为渐变对象\r\n\t\t\t\tif((styleValue instanceof jmGradient) || (t == 'string' && styleValue.indexOf('-gradient') > -1)) {\r\n\t\t\t\t\t//如果是渐变，则需要转换\r\n\t\t\t\t\tif(t == 'string' && styleValue.indexOf('-gradient') > -1) {\r\n\t\t\t\t\t\tstyleValue = new jmGradient(styleValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t__setStyle(styleValue.toGradient(this), mpname||name);\t\r\n\t\t\t\t}\r\n\t\t\t\telse if(mpname) {\r\n\t\t\t\t\t//只有存在白名单中才处理\r\n\t\t\t\t\t//颜色转换\r\n\t\t\t\t\tif(t == 'string' && ['fillStyle', 'strokeStyle', 'shadowColor'].indexOf(mpname) > -1) {\r\n\t\t\t\t\t\tstyleValue = jmUtils.toColor(styleValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.context[mpname] = styleValue;\r\n\t\t\t\t}\t\r\n\t\t\t\telse {\r\n\t\t\t\t\tswitch(name) {\r\n\t\t\t\t\t\t//阴影样式\r\n\t\t\t\t\t\tcase 'shadow' : {\r\n\t\t\t\t\t\t\tif(t == 'string') {\r\n\t\t\t\t\t\t\t\t__setStyle(new jmShadow(styleValue), name);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor(let k in styleValue) {\r\n\t\t\t\t\t\t\t\t__setStyle(styleValue[k], k, name + '.' + k);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//平移\r\n\t\t\t\t\t\tcase 'translate' : {\r\n\t\t\t\t\t\t\tthis.context.translate(styleValue.x, styleValue.y);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//旋转\r\n\t\t\t\t\t\tcase 'rotation' : {\t\r\n\t\t\t\t\t\t\tif(!styleValue.angle) break;\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//旋 转先移位偏移量\r\n\t\t\t\t\t\t\tlet tranX = 0;\r\n\t\t\t\t\t\t\tlet tranY = 0;\r\n\t\t\t\t\t\t\t//旋转，则移位，如果有中心位则按中心旋转，否则按左上角旋转\r\n\t\t\t\t\t\t\t//这里只有style中的旋转才能生效，不然会导至子控件多次旋转\r\n\t\t\t\t\t\t\tif(styleValue.point) {\r\n\t\t\t\t\t\t\t\tlet bounds = this.absoluteBounds?this.absoluteBounds:this.getAbsoluteBounds();\r\n\t\t\t\t\t\t\t\tstyleValue = this.getRotation(styleValue);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\ttranX = styleValue.rotateX + bounds.left;\r\n\t\t\t\t\t\t\t\ttranY = styleValue.rotateY + bounds.top;\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(tranX!=0 || tranY != 0) this.context.translate(tranX,tranY);\r\n\t\t\t\t\t\t\tthis.context.rotate(styleValue.angle);\r\n\t\t\t\t\t\t\tif(tranX!=0 || tranY != 0) this.context.translate(-tranX,-tranY);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase 'transform' : {\r\n\t\t\t\t\t\t\tif(Array.isArray(styleValue)) {\r\n\t\t\t\t\t\t\t\tthis.context.transform.apply(this.context, styleValue);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if(typeof styleValue == 'object') {\r\n\t\t\t\t\t\t\t\tthis.context.transform(styleValue.scaleX,//水平缩放\r\n\t\t\t\t\t\t\t\tstyleValue.skewX,//水平倾斜\r\n\t\t\t\t\t\t\t\tstyleValue.skewY,//垂直倾斜\r\n\t\t\t\t\t\t\t\tstyleValue.scaleY,//垂直缩放\r\n\t\t\t\t\t\t\t\tstyleValue.offsetX,//水平位移\r\n\t\t\t\t\t\t\t\tstyleValue.offsetY);//垂直位移\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//鼠标指针\r\n\t\t\t\t\t\tcase 'cursor' : {\r\n\t\t\t\t\t\t\tthis.cursor = styleValue;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\r\n\t\t//一些特殊属性要先设置，否则会导致顺序不对出现错误的效果\r\n\t\tif(this.translate) {\r\n\t\t\t__setStyle(this.translate, 'translate');\r\n\t\t}\r\n\t\tif(this.transform) {\r\n\t\t\t__setStyle(this.transform, 'transform');\r\n\t\t}\r\n\t\t//设置样式\r\n\t\tfor(let k in style) {\r\n\t\t\tif(k === 'constructor') continue;\r\n\t\t\tlet t = typeof style[k];\r\n\t\t\t//先处理部分样式，以免每次都需要初始化解析\r\n\t\t\tif(t == 'string' && style[k].indexOf('-gradient') > -1) {\r\n\t\t\t\tstyle[k] = new jmGradient(style[k]);\r\n\t\t\t}\r\n\t\t\telse if(t == 'string' && k == 'shadow') {\r\n\t\t\t\tstyle[k] = new jmShadow(style[k]);\r\n\t\t\t}\r\n\t\t\t__setStyle(style[k], k);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前控件的边界\r\n\t * 通过分析控件的描点或位置加宽高得到为方形的边界\r\n\t *\r\n\t * @method getBounds\r\n\t * @for jmControl\r\n\t * @param {boolean} [isReset=false] 是否强制重新计算\r\n\t * @return {object} 控件的边界描述对象(left,top,right,bottom,width,height)\r\n\t */\r\n\tgetBounds(isReset) {\r\n\t\t//如果当次计算过，则不重复计算\r\n\t\tif(this.bounds && !isReset) return this.bounds;\r\n\r\n\t\tlet rect = {}; // left top\r\n\t\t//jmGraph，特殊处理\r\n\t\tif(this.type == 'jmGraph' && this.canvas) {\r\n\t\t\tif(typeof this.canvas.width === 'function') {\r\n\t\t\t\trect.right = this.canvas.width(); \r\n\t\t\t}\r\n\t\t\telse if(this.width) {\r\n\t\t\t\trect.right = this.width;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(typeof this.canvas.height === 'function') {\r\n\t\t\t\trect.bottom = this.canvas.height(); \r\n\t\t\t}\r\n\t\t\telse if(this.height) {\r\n\t\t\t\trect.bottom = this.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.points && this.points.length > 0) {\t\t\r\n\t\t\tfor(let i in this.points) {\r\n\t\t\t\tlet p = this.points[i];\r\n\t\t\t\tif(typeof rect.left === 'undefined' || rect.left > p.x) {\r\n\t\t\t\t\trect.left = p.x;\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof rect.top === 'undefined'  || rect.top > p.y) {\r\n\t\t\t\t\trect.top = p.y;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof rect.right === 'undefined'  || rect.right < p.x) {\r\n\t\t\t\t\trect.right = p.x;\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof rect.bottom === 'undefined' || rect.bottom < p.y) {\r\n\t\t\t\t\trect.bottom = p.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.getLocation) {\r\n\t\t\tlet p = this.getLocation();\r\n\t\t\tif(p) {\r\n\t\t\t\trect.left = p.left;\r\n\t\t\t\trect.top = p.top;\r\n\t\t\t\trect.right = p.left + p.width;\r\n\t\t\t\trect.bottom = p.top + p.height;\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\tif(!rect.left) rect.left = 0; \r\n\t\tif(!rect.top) rect.top = 0; \r\n\t\tif(!rect.right) rect.right = 0; \r\n\t\tif(!rect.bottom) rect.bottom = 0; \r\n\t\trect.width = rect.right - rect.left;\r\n\t\trect.height = rect.bottom - rect.top;\r\n\t\treturn this.bounds=rect;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前控件的位置相关参数\r\n\t * 解析百分比和margin参数\r\n\t *\r\n\t * @method getLocation\r\n\t * @return {object} 当前控件位置参数，包括中心点坐标，右上角坐标，宽高\r\n\t */\r\n\tgetLocation(clone=true) {\r\n\t\t//如果已经计算过则直接返回\r\n\t\t//在开画之前会清空此对象\r\n\t\t//if(reset !== true && this.location) return this.location;\r\n\r\n\t\tlet local = this.location = {left: 0,top: 0,width: 0,height: 0};\r\n\t\tlocal.position = typeof this.position == 'function'? this.position(): jmUtils.clone(this.position);\t\r\n\t\tlocal.center = this.center && typeof this.center === 'function'?this.center(): jmUtils.clone(this.center);//中心\r\n\t\tlocal.start = this.start && typeof this.start === 'function'?this.start(): jmUtils.clone(this.start);//起点\r\n\t\tlocal.end = this.end && typeof this.end === 'function'?this.end(): jmUtils.clone(this.end);//起点\r\n\t\tlocal.radius = this.radius;//半径\r\n\t\tlocal.width = this.width;\r\n\t\tlocal.height = this.height;\r\n\r\n\t\tlet margin = jmUtils.clone(this.style.margin, {});\r\n\t\tmargin.left = (margin.left || 0);\r\n\t\tmargin.top = (margin.top || 0);\r\n\t\tmargin.right = (margin.right || 0);\r\n\t\tmargin.bottom = (margin.bottom || 0);\r\n\t\t\r\n\t\t//如果没有指定位置，但指定了margin。则位置取margin偏移量\r\n\t\tif(local.position) {\r\n\t\t\tlocal.left = local.position.x;\r\n\t\t\tlocal.top = local.position.y;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlocal.left = margin.left;\r\n\t\t\tlocal.top = margin.top;\r\n\t\t}\r\n\r\n\t\tif(!this.parent) return local;//没有父节点则直接返回\r\n\t\tlet parentBounds = this.parent.getBounds();\t\r\n\r\n\t\t//处理百分比参数\r\n\t\tif(jmUtils.checkPercent(local.left)) {\r\n\t\t\tlocal.left = jmUtils.percentToNumber(local.left) * parentBounds.width;\r\n\t\t}\r\n\t\tif(jmUtils.checkPercent(local.top)) {\r\n\t\t\tlocal.top = jmUtils.percentToNumber(local.top) * parentBounds.height;\r\n\t\t}\r\n\t\t\r\n\t\t//如果没有指定宽度或高度，则按百分之百计算其父宽度或高度\r\n\t\tif(jmUtils.checkPercent(local.width)) {\r\n\t\t\tlocal.width = jmUtils.percentToNumber(local.width) * parentBounds.width;\r\n\t\t}\r\n\t\tif(jmUtils.checkPercent(local.height)) {\r\n\t\t\tlocal.height = jmUtils.percentToNumber(local.height) * parentBounds.height;\r\n\t\t}\r\n\t\t//处理中心点\r\n\t\tif(local.center) {\r\n\t\t\t//处理百分比参数\r\n\t\t\tif(jmUtils.checkPercent(local.center.x)) {\r\n\t\t\t\tlocal.center.x = jmUtils.percentToNumber(local.center.x) * parentBounds.width;\r\n\t\t\t}\r\n\t\t\tif(jmUtils.checkPercent(local.center.y)) {\r\n\t\t\t\tlocal.center.y = jmUtils.percentToNumber(local.center.y) * parentBounds.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(local.radius) {\r\n\t\t\t//处理百分比参数\r\n\t\t\tif(jmUtils.checkPercent(local.radius)) {\r\n\t\t\t\tlocal.radius = jmUtils.percentToNumber(local.radius) * Math.min(parentBounds.width, parentBounds.height);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn local;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前控制的旋转信息\r\n\t * @returns {object} 旋转中心和角度\r\n\t */\r\n\tgetRotation(rotation) {\r\n\t\trotation = rotation || this.style.rotation;\r\n\t\tif(!rotation) {\r\n\t\t\t//如果本身没有，则可以继承父级的\r\n\t\t\trotation = this.parent && this.parent.getRotation?this.parent.getRotation():null;\r\n\t\t\t//如果父级有旋转，则把坐标转换为当前控件区域\r\n\t\t\tif(rotation) {\r\n\t\t\t\tlet bounds = this.getBounds();\r\n\t\t\t\trotation.rotateX -= bounds.left;\r\n\t\t\t\trotation.rotateY -= bounds.top;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet bounds = this.getBounds();\r\n\t\t\trotation.rotateX = rotation.point.x;\r\n\t\t\tif(jmUtils.checkPercent(rotation.rotateX)) {\r\n\t\t\t\trotation.rotateX  = jmUtils.percentToNumber(rotation.rotateX) * bounds.width;\r\n\t\t\t}\r\n\r\n\t\t\trotation.rotateY = rotation.point.y;\r\n\t\t\tif(jmUtils.checkPercent(rotation.rotateY)) {\r\n\t\t\t\trotation.rotateY  = jmUtils.percentToNumber(rotation.rotateY) * bounds.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rotation;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * 移除当前控件\r\n\t * 如果是VML元素，则调用其删除元素\r\n\t *\r\n\t * @method remove \r\n\t */\r\n\tremove() {\t\r\n\t\tif(this.parent) {\r\n\t\t\tthis.parent.children.remove(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 对控件进行平移\r\n\t * 遍历控件所有描点或位置，设置其偏移量。\r\n\t *\r\n\t * @method offset\r\n\t * @param {number} x x轴偏移量\r\n\t * @param {number} y y轴偏移量\r\n\t * @param {boolean} [trans] 是否传递,监听者可以通过此属性是否决定是否响应移动事件,默认=true\r\n\t * @param {object} [evt] 如果是事件触发，则传递move事件参数\r\n\t */\r\n\toffset(x, y, trans, evt) {\r\n\t\ttrans = trans === false?false:true;\t\r\n\t\tlet local = this.getLocation(true);\t\t\r\n\t\tlet offseted = false;\r\n\t\t\r\n\t\tif(local.position) {\r\n\t\t\tlocal.left += x;\r\n\t\t\tlocal.top += y;\r\n\t\t\t// 由于local是clone出来的对象，为了保留位移，则要修改原属性\r\n\t\t\tthis.position.x = local.left;\r\n\t\t\tthis.position.y = local.top;\r\n\t\t\toffseted = true;\r\n\t\t}\r\n\r\n\t\tif(local.center) {\t\t\r\n\t\t\tthis.center.x = local.center.x + x;\r\n\t\t\tthis.center.y = local.center.y + y;\r\n\t\t\toffseted = true;\r\n\t\t}\r\n\r\n\t\tif(local.start && typeof local.start == 'object') {\t\r\n\t\t\tthis.start.x = local.start.x + x;\r\n\t\t\tthis.start.y = local.start.y + y;\r\n\t\t\toffseted = true;\r\n\t\t}\r\n\r\n\t\tif(local.end && typeof local.end == 'object') {\t\t\r\n\t\t\tthis.end.x = local.end.x + x;\r\n\t\t\tthis.end.y = local.end.y + y;\r\n\t\t\toffseted = true;\r\n\t\t}\r\n\r\n\r\n\t\tif(offseted == false && this.cpoints) {\r\n\t\t\tlet p = typeof this.cpoints == 'function'?this.cpoints:this.cpoints;\r\n\t\t\tif(p) {\t\t\t\r\n\t\t\t\tlet len = p.length;\r\n\t\t\t\tfor(let i=0; i < len;i++) {\r\n\t\t\t\t\tp[i].x += x;\r\n\t\t\t\t\tp[i].y += y;\r\n\t\t\t\t}\t\t\r\n\t\t\t\toffseted = true;\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif(offseted == false && this.points) {\r\n\t\t\tlet len = this.points.length;\r\n\t\t\tfor(let i=0; i < len;i++) {\r\n\t\t\t\tthis.points[i].x += x;\r\n\t\t\t\tthis.points[i].y += y;\r\n\t\t\t}\r\n\t\t\toffseted = true;\r\n\t\t}\r\n\t\t\r\n\t\t//触发控件移动事件\t\r\n\t\tthis.emit('move',{\r\n\t\t\toffsetX: x,\r\n\t\t\toffsetY: y,\r\n\t\t\ttrans: trans,\r\n\t\t\tevt: evt\r\n\t\t});\r\n\r\n\t\tthis.needUpdate = true;\r\n\t}\r\n\r\n\t/**\r\n\t * 把图形旋转一个角度\r\n\t * @param {number} angle 旋转角度\r\n\t * @param {object} point 旋转坐标，可以是百分比,例如：{x: '50%',y: '50%'}\r\n\t */\r\n\trotate(angle, point) {\t\r\n\t\t/*this.children.each(function(i,c){\r\n\t\t\tc.rotate(angle);\r\n\t\t});*/\r\n\t\tthis.style.rotation = {\r\n\t\t\tangle: angle,\r\n\t\t\tpoint: point\r\n\t\t};\r\n\r\n\t\tthis.needUpdate = true;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取控件相对于画布的绝对边界，\r\n\t * 与getBounds不同的是：getBounds获取的是相对于父容器的边界.\r\n\t *\r\n\t * @method getAbsoluteBounds\r\n\t * @return {object} 边界对象(left,top,right,bottom,width,height)\r\n\t */\r\n\tgetAbsoluteBounds() {\r\n\t\t//当前控件的边界，\r\n\t\tlet rec = this.getBounds();\r\n\t\tif(this.parent && this.parent.absoluteBounds) {\r\n\t\t\t//父容器的绝对边界\r\n\t\t\tlet prec = this.parent.absoluteBounds || this.parent.getAbsoluteBounds();\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\tleft : prec.left + rec.left,\r\n\t\t\t\ttop : prec.top + rec.top,\r\n\t\t\t\tright : prec.left + rec.right,\r\n\t\t\t\tbottom : prec.top + rec.bottom,\r\n\t\t\t\twidth : rec.width,\r\n\t\t\t\theight : rec.height\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn rec;\r\n\t}\r\n\r\n\t/**\r\n\t * 画控件前初始化\r\n\t * 执行beginPath开始控件的绘制\r\n\t * \r\n\t * @method beginDraw\r\n\t */\r\n\tbeginDraw() {\t\r\n\t\tthis.getLocation(true);//重置位置信息\r\n\t\tthis.context.beginPath();\t\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * 结束控件绘制\r\n\t *\r\n\t * @method endDraw\r\n\t */\r\n\tendDraw() {\r\n\t\t//如果当前为封闭路径\r\n\t\tif(this.style.close) {\r\n\t\t\tthis.context.closePath();\r\n\t\t}\r\n\t\t\r\n\t\tif(this.style['fill']) {\r\n\t\t\tthis.context.fill();\r\n\t\t}\r\n\t\tif(this.style['stroke'] || !this.style['fill']) {\r\n\t\t\tthis.context.stroke();\r\n\t\t}\r\n\r\n\t\tthis.needUpdate = false;\r\n\t}\r\n\r\n\t/**\r\n\t * 绘制控件\r\n\t * 在画布上描点\r\n\t * \r\n\t * @method draw\r\n\t */\r\n\tdraw() {\t\r\n\t\tif(this.points && this.points.length > 0) {\r\n\t\t\t//获取当前控件的绝对位置\r\n\t\t\tlet bounds = this.parent && this.parent.absoluteBounds?this.parent.absoluteBounds:this.absoluteBounds;\r\n\t\t\t\r\n\t\t\tthis.context.moveTo(this.points[0].x + bounds.left,this.points[0].y + bounds.top);\r\n\t\t\tlet len = this.points.length;\t\t\t\r\n\t\t\tfor(let i=1; i < len;i++) {\r\n\t\t\t\tlet p = this.points[i];\r\n\t\t\t\t//移至当前坐标\r\n\t\t\t\tif(p.m) {\r\n\t\t\t\t\tthis.context.moveTo(p.x + bounds.left,p.y + bounds.top);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.context.lineTo(p.x+ bounds.left,p.y + bounds.top);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\t\t\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * 绘制当前控件\r\n\t * 协调控件的绘制，先从其子控件开始绘制，再往上冒。\r\n\t *\r\n\t * @method paint\r\n\t */\r\n\tpaint(v) {\r\n\t\tif(v !== false && this.visible !== false) {\t\t\r\n\t\t\tif(this.initPoints) this.initPoints();\r\n\t\t\t//计算当前边界\r\n\t\t\tthis.bounds = null;\r\n\t\t\tthis.absoluteBounds = this.getAbsoluteBounds();\r\n\t\t\tlet needDraw = true;//是否需要绘制\r\n\t\t\tif(!this.is('jmGraph') && this.graph) {\r\n\t\t\t\tif(this.absoluteBounds.left >= this.graph.width) needDraw = false;\r\n\t\t\t\telse if(this.absoluteBounds.top >= this.graph.height) needDraw = false;\r\n\t\t\t\telse if(this.absoluteBounds.right <= 0) needDraw = false;\r\n\t\t\t\telse if(this.absoluteBounds.bottom <= 0) needDraw = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.context.save();\r\n\r\n\t\t\tthis.emit('beginDraw', this);\r\n\t\t\t\r\n\t\t\tthis.setStyle();//设定样式\r\n\r\n\t\t\tif(needDraw && this.beginDraw) this.beginDraw();\r\n\t\t\tif(needDraw && this.draw) this.draw();\t\r\n\t\t\tif(needDraw && this.endDraw) this.endDraw();\r\n\r\n\t\t\tif(this.children) {\r\n\t\t\t\tthis.children.each(function(i,item) {\r\n\t\t\t\t\tif(item && item.paint) item.paint();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.emit('endDraw',this);\t\r\n\t\t\tthis.context.restore();\r\n\t\t\t\r\n\t\t\tthis.needUpdate = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取指定事件的集合\r\n\t * 比如mousedown,mouseup等\r\n\t *\r\n\t * @method getEvent\r\n\t * @param {string} name 事件名称\r\n\t * @return {list} 事件委托的集合\r\n\t */\r\n\tgetEvent(name) {\t\t\r\n\t\treturn this.__events?this.__events[name]:null;\r\n\t}\r\n\r\n\t/**\r\n\t * 绑定控件的事件\r\n\t *\r\n\t * @method bind\r\n\t * @param {string} name 事件名称\r\n\t * @param {function} handle 事件委托\r\n\t */\r\n\tbind(name, handle) {\t\r\n\t\tif(name && name.indexOf(' ') > -1) {\r\n\t\t\tname = name.split(' ');\r\n\t\t\tfor(let n of name) {\r\n\t\t\t\tn && this.bind(n, handle);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\t\r\n\t\t/**\r\n\t\t * 添加事件的集合\r\n\t\t *\r\n\t\t * @method _setEvent\r\n\t\t * @private\r\n\t\t */\r\n\t\tfunction _setEvent(name, events) {\r\n\t\t\tif(!this.__events) this.__events = {};\r\n\t\t\treturn this.__events[name] = events;\r\n\t\t}\r\n\t\tlet eventCollection = this.getEvent(name) || _setEvent.call(this, name, new jmList());\r\n\t\tif(!eventCollection.contain(handle)) {\r\n\t\t\teventCollection.add(handle);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 移除控件的事件\r\n\t *\r\n\t * @method unbind \r\n\t * @param {string} name 事件名称\r\n\t * @param {function} handle 从控件中移除事件的委托\r\n\t */\r\n\tunbind(name, handle) {\t\r\n\t\tif(name && name.indexOf(' ') > -1) {\r\n\t\t\tname = name.split(' ');\r\n\t\t\tfor(let n of name) {\r\n\t\t\t\tn && this.unbind(n, handle);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\t\r\n\t\tlet eventCollection = this.getEvent(name) ;\t\t\r\n\t\tif(eventCollection) {\r\n\t\t\tif(handle) eventCollection.remove(handle);\r\n\t\t\telse eventCollection.clear();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 执行监听回调\r\n\t * \r\n\t * @method emit\r\n\t * @for jmControl\r\n\t * @param {string} name 触发事件的名称\r\n\t * @param {array} args 事件参数数组\r\n\t */\r\n\temit(...args) {\t\t\t\r\n\t\tthis.runEventHandle(args[0], args.slice(1));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * 独立执行事件委托\r\n\t *\r\n\t * @method runEventHandle\r\n\t * @param {string} 将执行的事件名称\r\n\t * @param {object} 事件执行的参数，包括触发事件的对象和位置\r\n\t */\r\n\trunEventHandle(name, args) {\r\n\t\tlet events = this.getEvent(name);\t\t\r\n\t\tif(events) {\r\n\t\t\tvar self = this;\r\n\t\t\tif(!Array.isArray(args)) args = [args];\t\r\n\t\t\tevents.each(function(i, handle) {\r\n\t\t\t\t//只要有一个事件被阻止，则不再处理同级事件，并设置冒泡被阻断\r\n\t\t\t\tif(false === handle.apply(self, args)) {\r\n\t\t\t\t\targs.cancel = true;\r\n\t\t\t\t}\r\n\t\t\t});\t\t\r\n\t\t}\t\r\n\t\treturn args.cancel;\r\n\t}\r\n\r\n\t/**\r\n\t * 检 查坐标是否落在当前控件区域中..true=在区域内\r\n\t *\r\n\t * @method checkPoint\r\n\t * @param {point} p 位置参数\r\n\t * @param {number} [pad] 可选参数，表示线条多远内都算在线上\r\n\t * @return {boolean} 当前位置如果在区域内则为true,否则为false。\r\n\t */\r\n\tcheckPoint(p, pad) {\r\n\t\t//jmGraph 需要判断dom位置\r\n\t\tif(this.type == 'jmGraph') {\r\n\t\t\t//获取dom位置\r\n\t\t\tlet position = this.getPosition();\r\n\t\t\t// 由于高清屏会有放大坐标，所以这里用pagex就只能用真实的canvas大小\r\n\t\t\tconst right = position.left + this.width;\r\n\t\t\tconst bottom = position.top + this.height;\r\n\t\t\tif(p.pageX > right || p.pageX < position.left) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(p.pageY > bottom || p.pageY < position.top) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\t\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\tlet bounds = this.getBounds();\t\r\n\t\tlet rotation = this.getRotation();//获取当前旋转参数\r\n\t\tlet ps = this.points;\r\n\t\t//如果不是路径组成，则采用边界做为顶点\r\n\t\tif(!ps || !ps.length) {\r\n\t\t\tps = [];\r\n\t\t\tps.push({x: bounds.left, y: bounds.top}); //左上角\r\n\t\t\tps.push({x: bounds.right, y: bounds.top});//右上角\r\n\t\t\tps.push({x: bounds.right, y: bounds.bottom});//右下角\r\n\t\t\tps.push({x: bounds.left, y: bounds.bottom}); //左下\r\n\t\t\tps.push({x: bounds.left, y: bounds.top}); //左上角   //闭合\r\n\t\t}\r\n\t\t//如果有指定padding 表示接受区域加宽，命中更易\r\n\t\tpad = Number(pad || this.style['touchPadding'] || this.style['lineWidth'] || 1);\r\n\t\tif(ps && ps.length) {\r\n\t\t\t\r\n\t\t\t//如果有旋转参数，则需要转换坐标再处理\r\n\t\t\tif(rotation && rotation.angle != 0) {\r\n\t\t\t\tps = jmUtils.clone(ps, true);//拷贝一份数据\r\n\t\t\t\t//rotateX ,rotateY 是相对当前控件的位置\r\n\t\t\t\tps = jmUtils.rotatePoints(ps, {\r\n\t\t\t\t\tx: rotation.rotateX + bounds.left,\r\n\t\t\t\t\ty: rotation.rotateY + bounds.top\r\n\t\t\t\t}, rotation.angle);\r\n\t\t\t}\r\n\t\t\t//如果当前路径不是实心的\r\n\t\t\t//就只用判断点是否在边上即可\t\r\n\t\t\tif(ps.length > 2 && (!this.style['fill'] || this.style['stroke'])) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet count = ps.length;\r\n\t\t\t\tfor(let j = i+1; j <= count; j = (++i + 1)) {\r\n\t\t\t\t\t//如果j超出最后一个\r\n\t\t\t\t\t//则当为封闭图形时跟第一点连线处理.否则直接返回false\r\n\t\t\t\t\tif(j == count) {\r\n\t\t\t\t\t\tif(this.style.close) {\r\n\t\t\t\t\t\t\tlet r = jmUtils.pointInPolygon(p,[ps[i],ps[0]], pad);\r\n\t\t\t\t\t\t\tif(r) return true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} \r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t//判断是否在点i,j连成的线上\r\n\t\t\t\t\t\tlet s = jmUtils.pointInPolygon(p,[ps[i],ps[j]], pad);\r\n\t\t\t\t\t\tif(s) return true;\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t//不是封闭的图形，则直接返回\r\n\t\t\t\tif(!this.style['fill']) return false;\r\n\t\t\t}\r\n\r\n\t\t\tlet r = jmUtils.pointInPolygon(p,ps, pad);\t\t\r\n\t\t\treturn r;\r\n\t\t}\r\n\r\n\t\tif(p.x > bounds.right || p.x < bounds.left) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(p.y > bounds.bottom || p.y < bounds.top) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 触发控件事件，组合参数并按控件层级关系执行事件冒泡。\r\n\t *\r\n\t * @method raiseEvent\r\n\t * @param {string} name 事件名称\r\n\t * @param {object} args 事件执行参数\r\n\t * @return {boolean} 如果事件被组止冒泡则返回false,否则返回true\r\n\t */\r\n\traiseEvent(name, args) {\r\n\t\tif(this.visible === false) return ;//如果不显示则不响应事件\t\r\n\t\tif(!args.position) {\t\t\r\n\t\t\tconst graph = this.graph;\r\n\r\n\t\t\tconst srcElement = args.srcElement || args.target;\t\t\t\r\n\t\t\t\r\n\t\t\tconst position = jmUtils.getEventPosition(args, graph.scaleSize);//初始化事件位置\r\n\t\t\r\n\t\t\targs = {\r\n\t\t\t\tposition: position,\r\n\t\t\t\tbutton: args.button == 0 || position.isTouch? 1: args.button,\r\n\t\t\t\tkeyCode: args.keyCode || args.charCode || args.which,\r\n\t\t\t\tctrlKey: args.ctrlKey,\r\n\t\t\t\tcancel : false,\r\n\t\t\t\tevent: args, // 原生事件\r\n\t\t\t\tsrcElement : srcElement\r\n\t\t\t};\t\t\r\n\t\t}\r\n\t\targs.path = args.path||[]; //事件冒泡路径\r\n\r\n\t\t//先执行子元素事件，如果事件没有被阻断，则向上冒泡\r\n\t\tlet stoped = false;\r\n\t\tif(this.children) {\r\n\t\t\tthis.children.each(function(j, el) {\r\n\t\t\t\t//未被阻止才执行\t\t\t\r\n\t\t\t\tif(args.cancel !== true) {\r\n\t\t\t\t\t//如果被阻止冒泡，\r\n\t\t\t\t\tstoped = el.raiseEvent(name, args) === false? true: stoped;\r\n\t\t\t\t\t// 不再响应其它元素\r\n\t\t\t\t\tif(stoped) return false;\r\n\t\t\t\t}\r\n\t\t\t}, true);//按逆序处理\r\n\t\t}\r\n\t\t// 如果已被阻止，不再响应上级事件\r\n\t\tif(stoped) return false;\r\n\t\t\r\n\t\t//获取当前对象的父元素绝对位置\r\n\t\t//生成当前坐标对应的父级元素的相对位置\r\n\t\tlet abounds = this.parent && this.parent.absoluteBounds?this.parent.absoluteBounds : this.absoluteBounds;\r\n\t\tif(!abounds) return false;\t\r\n\t\t//args = jmUtils.clone(args);//参数副本\r\n\t\targs.position.x = args.position.offsetX - abounds.left;\r\n\t\targs.position.y = args.position.offsetY - abounds.top;\r\n\r\n\t\t// 是否在当前控件内操作\r\n\t\tconst inpos = this.interactive !== false && this.checkPoint(args.position);\r\n\t\t\r\n\t\t//事件发生在边界内或健盘事件发生在画布中才触发\r\n\t\tif(inpos) {\r\n\t\t\t//如果没有指定触发对象，则认为当前为第一触发对象\r\n\t\t\tif(!args.target) {\r\n\t\t\t\targs.target = this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.runEventAndPopEvent(name, args);\r\n\r\n\t\t\tif(!this.focused && (name === 'mousemove' || name === 'touchmove')) {\r\n\t\t\t\tthis.focused = true;//表明当前焦点在此控件中\r\n\t\t\t\tthis.raiseEvent(name === 'mousemove'? 'mouseover': 'touchover', args);\r\n\t\t\t}\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//如果焦点不在，且原焦点在，则触发mouseleave事件\r\n\t\t\tif(this.interactive !== false && !inpos &&\r\n\t\t\t\tthis.focused && \r\n\t\t\t\t(name === 'mousemove' || name === 'touchmove')) {\r\n\r\n\t\t\t\tthis.focused = false;//表明当前焦点离开\r\n\t\t\t\tthis.runEventHandle(name === 'mousemove'? 'mouseleave' : 'touchleave', args);//执行事件\t\r\n\t\t\t}\t\r\n\t\t}\r\n\t\t\t\r\n\t\treturn args.cancel === false;//如果被阻止则返回false,否则返回true\r\n\t}\r\n\r\n\t/**\r\n\t * 执行事件，并进行冒泡\r\n\t * @param {string} name 事件名称 \r\n\t * @param {object} args 事件参数\r\n\t */\r\n\trunEventAndPopEvent(name, args) {\t\r\n\r\n\t\tif(args.cancel !== true) {\r\n\t\t\t// 添加到触发路径\r\n\t\t\targs.path.push(this);\r\n\r\n\t\t\t//如果返回true则阻断冒泡\r\n\t\t\tthis.runEventHandle(name, args);//执行事件\r\n\r\n\t\t\t// // 向父节点冒泡事件\t\t\r\n\t\t\t// if(args.cancel !== true && this.parent && this.parent.runEventAndPopEvent) {\r\n\t\t\t// \t// 相对位置需要改为父节点的\r\n\t\t\t// \tif(args.position) {\r\n\t\t\t// \t\tlet bounds = this.parent.getBounds();\r\n\t\t\t// \t\targs.position.x += bounds.left;\r\n\t\t\t// \t\targs.position.y += bounds.top;\r\n\t\t\t// \t}\r\n\t\t\t// \tthis.parent.runEventAndPopEvent(name, args);\r\n\t\t\t// }\t\t\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 清空控件指定事件\r\n\t *\r\n\t * @method clearEvents\r\n\t * @param {string} name 需要清除的事件名称\r\n\t */\r\n\tclearEvents(name) {\r\n\t\tvar eventCollection = this.getEvent(name) ;\t\t\r\n\t\tif(eventCollection) {\r\n\t\t\teventCollection.clear;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 查找其父级类型为type的元素，直到找到指定的对象或到最顶级控件后返回空。\r\n\t *\r\n\t * @method findParent \r\n\t * @param {object} 类型名称或类型对象\r\n\t * @return {object} 指定类型的实例\r\n\t */\r\n\tfindParent(type) {\r\n\t\t//如果为类型名称，则返回名称相同的类型对象\r\n\t\tif(typeof type === 'string') {\r\n\t\t\tif(this.type == type)\r\n\t\t\t\treturn this;\r\n\t\t}\r\n\t\telse if(this.is(type)) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif(this.parent) {\r\n\t\t\treturn this.parent.findParent(type);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * 设定是否可以移动\r\n\t * 此方法需指定jmgraph或在控件添加到jmgraph后再调用才能生效。\r\n\t *\r\n\t * @method canMove\r\n\t * @param {boolean} m true=可以移动，false=不可移动或清除移动。\r\n\t * @param {jmGraph} [graph] 当前画布，如果为空的话必需是已加入画布的控件，否则得指定画布。\r\n\t */\r\n\tcanMove(m, graph) {\r\n\t\tif(!this.__mvMonitor) {\r\n\t\t\t/**\r\n\t\t\t * 控制控件移动对象\r\n\t\t\t * \r\n\t\t\t * @property __mvMonitor\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis.__mvMonitor = {};\r\n\t\t\tthis.__mvMonitor.mouseDown = false;\r\n\t\t\tthis.__mvMonitor.curposition={x:0,y:0};\r\n\t\t\tvar self = this;\r\n\t\t\t/**\r\n\t\t\t * 控件移动鼠标事件\r\n\t\t\t *\r\n\t\t\t * @method mv\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis.__mvMonitor.mv = function(evt) {\r\n\t\t\t\tlet _this = self;\r\n\t\t\t\t//如果鼠标经过当前可移动控件，则显示可移动指针\r\n\t\t\t\t//if(evt.path && evt.path.indexOf(_this)>-1) {\r\n\t\t\t\t//\t_this.cursor('move');\t\r\n\t\t\t\t//}\r\n\r\n\t\t\t\tif(_this.__mvMonitor.mouseDown) {\r\n\t\t\t\t\t_this.parent.bounds = null;\r\n\t\t\t\t\tlet parentbounds = _this.parent.getAbsoluteBounds();\t\t\r\n\t\t\t\t\tlet offsetx = evt.position.offsetX - _this.__mvMonitor.curposition.x;\r\n\t\t\t\t\tlet offsety = evt.position.offsetY - _this.__mvMonitor.curposition.y;\t\t\t\t\r\n\t\t\t\t\t//console.log(offsetx + ',' + offsety);\r\n\t\t\t\t\t//如果锁定边界\r\n\t\t\t\t\tif(_this.lockSide) {\r\n\t\t\t\t\t\tlet thisbounds = _this.bounds || _this.getAbsoluteBounds();\t\t\t\t\t\r\n\t\t\t\t\t\t//检查边界出界\r\n\t\t\t\t\t\tlet outside = jmUtils.checkOutSide(parentbounds,thisbounds,{x:offsetx,y:offsety});\r\n\t\t\t\t\t\tif(outside.left < 0) {\r\n\t\t\t\t\t\t\tif(_this.lockSide.left) offsetx -= outside.left;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(outside.right > 0) {\r\n\t\t\t\t\t\t\tif(_this.lockSide.right) offsetx -= outside.right;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(outside.top < 0) {\r\n\t\t\t\t\t\t\tif(_this.lockSide.top) offsety -= outside.top;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(outside.bottom > 0) {\r\n\t\t\t\t\t\t\tif(_this.lockSide.bottom) offsety -= outside.bottom;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(offsetx || offsety) {\r\n\t\t\t\t\t\t_this.offset(offsetx, offsety, true, evt);\r\n\t\t\t\t\t\t_this.__mvMonitor.curposition.x = evt.position.offsetX;\r\n\t\t\t\t\t\t_this.__mvMonitor.curposition.y = evt.position.offsetY;\t\r\n\t\t\t\t\t\t//console.log(offsetx + '.' + offsety);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 控件移动鼠标松开事件\r\n\t\t\t *\r\n\t\t\t * @method mu\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis.__mvMonitor.mu = function(evt) {\r\n\t\t\t\tlet _this = self;\r\n\t\t\t\tif(_this.__mvMonitor.mouseDown) {\r\n\t\t\t\t\t_this.__mvMonitor.mouseDown = false;\r\n\t\t\t\t\t//_this.cursor('default');\r\n\t\t\t\t\t_this.emit('moveend',{position:_this.__mvMonitor.curposition});\t\r\n\t\t\t\t\t//return false;\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 控件移动鼠标离开事件\r\n\t\t\t *\r\n\t\t\t * @method ml\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis.__mvMonitor.ml = function() {\r\n\t\t\t\tlet _this = self;\r\n\t\t\t\tif(_this.__mvMonitor.mouseDown) {\r\n\t\t\t\t\t_this.__mvMonitor.mouseDown = false;\r\n\t\t\t\t\t//_this.cursor('default');\t\r\n\t\t\t\t\t_this.emit('moveend',{position:_this.__mvMonitor.curposition});\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * 控件移动鼠标按下事件\r\n\t\t\t *\r\n\t\t\t * @method md\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis.__mvMonitor.md = function(evt) {\r\n\t\t\t\t\r\n\t\t\t\tif(this.__mvMonitor.mouseDown) return;\r\n\t\t\t\tif(evt.button == 0 || evt.button == 1) {\r\n\t\t\t\t\tthis.__mvMonitor.mouseDown = true;\r\n\t\t\t\t\t//this.cursor('move');\r\n\t\t\t\t\t//var parentbounds = this.parent.absoluteBounds || this.parent.getAbsoluteBounds();\t\r\n\t\t\t\t\tthis.__mvMonitor.curposition.x = evt.position.offsetX;//evt.position.x + parentbounds.left;\r\n\t\t\t\t\tthis.__mvMonitor.curposition.y = evt.position.offsetY;//evt.position.y + parentbounds.top;\r\n\t\t\t\t\t//触发控件移动事件\r\n\t\t\t\t\tthis.emit('movestart',{position:this.__mvMonitor.curposition});\r\n\t\t\t\t\t\r\n\t\t\t\t\tevt.cancel = true;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tgraph = graph || this.graph ;//获取最顶级元素画布\r\n\t\t\r\n\t\tif(m !== false) {\t\t\t\r\n\t\t\tgraph.bind('mousemove',this.__mvMonitor.mv);\r\n\t\t\tgraph.bind('mouseup',this.__mvMonitor.mu);\r\n\t\t\tgraph.bind('mouseleave',this.__mvMonitor.ml);\r\n\t\t\tthis.bind('mousedown',this.__mvMonitor.md);\r\n\t\t\tgraph.bind('touchmove',this.__mvMonitor.mv);\r\n\t\t\tgraph.bind('touchend',this.__mvMonitor.mu);\r\n\t\t\tthis.bind('touchstart',this.__mvMonitor.md);\r\n\t\t}\r\n\t\telse {\t\t\t\r\n\t\t\tgraph.unbind('mousemove',this.__mvMonitor.mv);\r\n\t\t\tgraph.unbind('mouseup',this.__mvMonitor.mu);\r\n\t\t\tgraph.unbind('mouseleave',this.__mvMonitor.ml);\r\n\t\t\tthis.unbind('mousedown',this.__mvMonitor.md);\r\n\t\t\tgraph.unbind('touchmove',this.__mvMonitor.mv);\r\n\t\t\tgraph.unbind('touchend',this.__mvMonitor.mu);\r\n\t\t\tthis.unbind('touchstart',this.__mvMonitor.md);\t\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\nexport { jmControl };","import {jmControl} from \"./jmControl.js\";\r\n/**\r\n * 基础路径,大部分图型的基类\r\n * 指定一系列点，画出图形\r\n *\r\n * @class jmPath\r\n * @extends jmControl\r\n * @param {object} params 路径参数 points=所有描点\r\n */\r\n\r\nexport default class jmPath extends jmControl {\t\r\n\r\n\tconstructor(params, t='jmPath') {\r\n\t\tsuper(params, t);\t\t\r\n\t\tthis.points = params && params.points ? params.points : [];\t\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * 描点集合\r\n\t * point格式：{x:0,y:0,m:true}\r\n\t * @property points\r\n\t * @type {array}\r\n\t */\r\n\tget points() {\r\n\t\tlet s = this.__pro('points');\r\n\t\treturn s;\r\n\t}\r\n\tset points(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\treturn this.__pro('points', v);\r\n\t}\r\n}\r\n\r\nexport { jmPath };\r\n","import {jmUtils} from \"./jmUtils.js\";\r\nimport {jmList} from \"./jmList.js\";\r\nimport {jmProperty} from './jmProperty.js';\r\nimport {jmShadow} from \"./jmShadow.js\";\r\nimport {jmGradient} from \"./jmGradient.js\";\r\nimport {jmEvents} from \"./jmEvents.js\";\r\nimport {jmControl} from \"./jmControl.js\";\r\nimport {jmPath} from \"./jmPath.js\";\r\n\r\n/**\r\n * jmGraph画图类库\r\n * 对canvas画图api进行二次封装，使其更易调用，省去很多重复的工作。\r\n *\r\n * @module jmGraph\r\n * @class jmGraph\r\n * @extends jmControl\r\n * @param {element} canvas 标签canvas\r\n * @param {object} option 参数：{width:宽,height:高}\r\n * @param {function} callback 初始化后的回调\r\n */\r\nexport default class jmGraph extends jmControl {\r\n\r\n\tconstructor(canvas, option, callback) {\r\n\t\tif(typeof option == 'function') {\r\n\t\t\tcallback = option;\r\n\t\t\toption = {};\r\n\t\t}\r\n\t\r\n\t\toption = option || {};\r\n\t\toption.mode = option.mode || '2d'; // webgl | 2d\r\n\t\toption.interactive = true;\r\n\t\t\r\n\t\tsuper(option, 'jmGraph');\r\n\r\n\t\tthis.option = option || {};\r\n\t\t\r\n\t\tthis.devicePixelRatio = 1; // 根据屏幕的缩放倍数\r\n\r\n\t\t/**\r\n\t\t * 工具类\r\n\t\t * @property utils/util\r\n\t\t * @type {jmUtils}\r\n\t\t */\r\n\t\tthis.util = this.utils = jmUtils;\t\t\r\n\r\n\t\t//如果是小程序\r\n\t\tif(typeof wx != 'undefined' && wx.canIUse && wx.canIUse('canvas')) {\t\t\t\r\n\t\t\tif(typeof canvas === 'string') canvas = wx.createSelectorQuery().select('#' + canvas);\r\n\t\t\tthis.isWXMiniApp = true;// 微信小程序平台\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif(typeof canvas === 'string' && typeof document != 'undefined') {\r\n\t\t\t\tcanvas = document.getElementById(canvas);\r\n\t\t\t}\r\n\t\t\telse if(canvas.length) {\r\n\t\t\t\tcanvas = canvas[0];\r\n\t\t\t}\r\n\r\n\t\t\tif(canvas.tagName != 'CANVAS') {\r\n\t\t\t\tthis.container = canvas;\r\n\t\t\t\tlet cn = document.createElement('canvas');\r\n\t\t\t\tcanvas.appendChild(cn);\r\n\t\t\t\tcn.width = canvas.offsetWidth||canvas.clientWidth;\r\n\t\t\t\tcn.height = canvas.offsetHeight||canvas.clientHeight;\r\n\t\t\t\tcanvas = cn;\r\n\t\t\t}\t\r\n\t\t\telse {\r\n\t\t\t\tthis.container = canvas.parentElement;\r\n\t\t\t}\r\n\t\t}\t\r\n\t\tthis.canvas = canvas;\t\r\n\t\tthis.context = canvas.getContext('2d');\r\n\t\tthis.__init(callback);\r\n\t}\r\n\r\n\t/**\r\n\t * 初始化画布\r\n\t * @method init\r\n\t */\r\n\t__init(callback) {\r\n\t\t/**\r\n\t\t * 当前所有图形类型\r\n\t\t * @property shapes\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis.shapes = Object.assign({\r\n\t\t\t\"path\": jmPath,\r\n\t\t}, this.option.shapes);\r\n\t\t\r\n\t\t/**\r\n\t\t * 画控件前初始化\r\n\t\t * 为了解决一像素线条问题\r\n\t\t */\r\n\t\tthis.on('beginDraw', function() {\t\r\n\t\t\tthis.context.translate(0.5, 0.5);\r\n\t\t});\r\n\t\t/**\r\n\t\t * 结束控件绘制 为了解决一像素线条问题\r\n\t\t */\r\n\t\tthis.on('endDraw', function() {\t\r\n\t\t\tthis.context.translate(-0.5, -0.5);\t\t\r\n\t\t});\r\n\r\n\t\t// devicePixelRatio初始化\r\n\t\tlet dpr = typeof window != 'undefined' && window.devicePixelRatio > 1? window.devicePixelRatio : 1;\r\n\t\tif(this.isWXMiniApp) {\r\n\t\t\tdpr = wx.getSystemInfoSync().pixelRatio || 1;\r\n\t\t}\t\t\r\n\t\tthis.devicePixelRatio = dpr;\r\n\t\t// 为了解决锯齿问题，先放大canvas再缩放\r\n\t\tthis.dprScaleSize = this.devicePixelRatio > 1? this.devicePixelRatio : 2;\r\n\r\n\t\tif(this.option.width > 0) this.width = this.option.width;\r\n\t\tif(this.option.height > 0) this.height = this.option.height;\t\r\n\t\tthis.resize();\t\t\r\n\r\n\t\t//绑定事件\r\n\t\tthis.eventHandler = new jmEvents(this, this.canvas.canvas || this.canvas);\t\r\n\r\n\t\t//如果指定了自动刷新\r\n\t\tif(this.option.autoRefresh) {\r\n\t\t\tthis.autoRefresh();\r\n\t\t}\r\n\r\n\t\tif(callback) callback(this);\t\t\r\n\t}\r\n\r\n\t//  重置canvas大小，并判断高清屏，画图先放大二倍\r\n\tresize(w, h) {\r\n\t\tif(!this.canvas) return;\r\n\r\n\t\tthis.__normalSize = this.__normalSize || { width: 0, height: 0};\r\n\t\tw = w || this.__normalSize.width || this.width, h = h || this.__normalSize.height || this.height;\r\n\r\n\t\tif(w) this.__normalSize.width = w;\r\n\t\tif(h) this.__normalSize.height = h;\r\n\t\r\n\t\tthis.css('width', w + \"px\");\r\n\t\tthis.css('height', h + \"px\");\r\n\t\tthis.canvas.height = h * this.dprScaleSize;\r\n\t\tthis.canvas.width = w * this.dprScaleSize;\r\n\t\tthis.context.scale(this.dprScaleSize, this.dprScaleSize);\t\r\n\t}\r\n\r\n\t/**\r\n\t * 内部坐标转为页面坐标，这里主要是有devicePixelRatio倍数问题\r\n\t * @param {x, y} point 内部坐标\r\n\t */\r\n\tpointToPixes(point) {\r\n\t\tif(this.dprScaleSize && this.dprScaleSize !== 1) {\r\n\t\t\tpoint = Object.assign({}, point, {\r\n\t\t\t\tx: point.x / this.dprScaleSize,\r\n\t\t\t\ty: point.y / this.dprScaleSize\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn point;\r\n\t}\r\n\r\n\t/**\r\n\t * 宽度\r\n\t * @property width\r\n\t * @type {number}\r\n\t */\r\n\tget width() {\r\n\t\tif(this.__normalSize && this.__normalSize.width) return this.__normalSize.width;\r\n\t\tif(this.canvas) return this.canvas.width;\r\n\t\treturn 0;\r\n\t}\r\n\tset width(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\tif(this.canvas) {\r\n\t\t\tthis.resize(v);\r\n\t\t}\t\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * 高度\r\n\t * @property height\r\n\t * @type {number}\r\n\t */\r\n\tget height() {\r\n\t\tif(this.__normalSize && this.__normalSize.height) return this.__normalSize.height;\r\n\t\tif(this.canvas) return this.canvas.height;\r\n\t\treturn 0;\r\n\t}\r\n\tset height(v) {\r\n\t\tthis.needUpdate = true;\r\n\t\tif(this.canvas) {\r\n\t\t\tthis.resize(0, v);\r\n\t\t}\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * 创建jmGraph的静态对象\r\n\t *\r\n\t * @method create\r\n\t * @return {jmGraph} jmGraph实例对象\r\n\t */\r\n\tstatic create(...args) {\r\n\t\treturn new jmGraph(...args);\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前画布在浏览器中的绝对定位\r\n\t *\r\n\t * @method getPosition\r\n\t * @return {postion} 返回定位坐标\r\n\t */\r\n\tgetPosition() {\r\n\t\tlet p = jmUtils.getElementPosition(this.canvas.canvas || this.canvas);\r\n\t\tp.width = this.width;\r\n\t\tp.height = this.height;\r\n\t\tp.right = p.left + p.width;\r\n\t\tp.bottom = p.top + p.height;\r\n\t\treturn p;\r\n\t}\r\n\r\n\t/**\r\n\t * 注册图形类型,图形类型必需有统一的构造函数。参数为画布句柄和参数对象。\r\n\t *\r\n\t * @method registerShape \r\n\t * @param {string} name 控件图形名称\r\n\t * @param {class} shape 图形控件类型\r\n\t */\r\n\tregisterShape(name, shape) {\r\n\t\tthis.shapes[name] = shape;\r\n\t}\r\n\r\n\t/**\r\n\t * 从已注册的图形类创建图形\r\n\t * 简单直观创建对象\r\n\t *\r\n\t * @method createShape \r\n\t * @param {string} shape 注册控件的名称 也可以直接是控件类型\r\n\t * @param {object} args 实例化控件的参数\r\n\t * @return {object} 已实例化控件的对象\r\n\t */\r\n\tcreateShape(shape, args) {\r\n\t\tif(typeof shape === 'string') {\r\n\t\t\tshape = this.shapes[shape];\r\n\t\t}\r\n\t\tif(shape) {\r\n\t\t\tif(!args) args = {};\r\n\t\t\targs.graph = this;\r\n\t\t\tlet obj = new shape(args);\r\n\t\t\treturn obj;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 生成阴影对象\r\n\t *\r\n\t * @method createShadow\r\n\t * @param {number} x x偏移量\r\n\t * @param {number} y y偏移量\r\n\t * @param {number} blur 模糊值\r\n\t * @param {string} color 颜色\r\n\t * @return {jmShadow} 阴影对象\r\n\t */\r\n\tcreateShadow(x, y, blur, color) {\r\n\t\tlet sh = new jmShadow(x, y, blur, color);\r\n\t\treturn sh;\r\n\t}\r\n\r\n\t/**\r\n\t * 生成线性渐变对象\r\n\t *\r\n\t * @method createLinearGradient\r\n\t * @param {number} x1 线性渐变起始点X坐标\r\n\t * @param {number} y1 线性渐变起始点Y坐标\r\n\t * @param {number} x2 线性渐变结束点X坐标\r\n\t * @param {number} y2 线性渐变结束点Y坐标\r\n\t * @return {jmGradient} 线性渐变对象\r\n\t */\r\n\tcreateLinearGradient(x1, y1, x2, y2) {\r\n\t\tlet gradient = new jmGradient({\r\n\t\t\ttype:'linear',\r\n\t\t\tx1: x1,\r\n\t\t\ty1: y1,\r\n\t\t\tx2: x2,\r\n\t\t\ty2: y2\r\n\t\t});\r\n\t\treturn gradient;\r\n\t}\r\n\r\n\t/**\r\n\t * 生成放射渐变对象\r\n\t *\r\n\t * @method createRadialGradient\r\n\t * @param {number} x1 放射渐变小圆中心X坐标\r\n\t * @param {number} y1 放射渐变小圆中心Y坐标\r\n\t * @param {number} r1 放射渐变小圆半径\r\n\t * @param {number} x2 放射渐变大圆中心X坐标\r\n\t * @param {number} y2 放射渐变大圆中心Y坐标\r\n\t * @param {number} r2 放射渐变大圆半径\r\n\t * @return {jmGradient} 放射渐变对象\r\n\t */\r\n\tcreateRadialGradient(x1, y1, r1, x2, y2, r2) {\t\r\n\t\tlet gradient = new jmGradient({\r\n\t\t\ttype:'radial',\r\n\t\t\tx1: x1,\r\n\t\t\ty1: y1,\r\n\t\t\tr1: r1,\r\n\t\t\tx2: x2,\r\n\t\t\ty2: y2,\r\n\t\t\tr2: r2\r\n\t\t});\r\n\t\treturn gradient;\r\n\t}\r\n\r\n\t/**\r\n\t * 重新刷新整个画板\r\n\t * 以加入动画事件触发延时10毫秒刷新，保存最尽的调用只刷新一次，加强性能的效果。\r\n\t *\r\n\t * @method refresh\r\n\t */\r\n\trefresh() {\t\r\n\t\t//加入动画，触发redraw，会导致多次refresh只redraw一次\r\n\t\t/*this.animate(function() {\r\n\t\t\treturn false;\r\n\t\t},100,'jmgraph_refresh');*/\r\n\t\tthis.redraw();\r\n\t}\r\n\r\n\t/**\r\n\t * 重新刷新整个画板\r\n\t * 此方法直接重画，与refresh效果类似\r\n\t *\r\n\t * @method redraw\r\n\t * @param {number} [w] 清除画布的宽度\r\n\t * @param {number} [h] 清除画布的高度\r\n\t */\r\n\tredraw(w, h) {\t\r\n\t\tthis.clear(w||this.width, h||this.height);\r\n\t\tthis.paint();\r\n\t}\r\n\r\n\t/**\r\n\t * 清除画布\r\n\t * \r\n\t * @method clear\r\n\t * @param {number} [w] 清除画布的宽度\r\n\t * @param {number} [h] 清除画布的高度\r\n\t */\r\n\tclear(w, h) {\r\n\t\tif(!w || !h) {\r\n\t\t\tw = this.width;\r\n\t\t\th = this.height;\r\n\t\t\t/*if(this.scaleSize) {\r\n\t\t\t\tw = w / this.scaleSize.x;\r\n\t\t\t\th = h / this.scaleSize.y;\r\n\t\t\t}*/\r\n\t\t}\r\n\t\t//如果有指定背景，则等到draw再全屏绘制一次，也同样达到清除画布的功能\r\n\t\tif(this.style && this.style.fill) {\r\n\t\t\tthis.points = [\r\n\t\t\t\t{x:0,y:0},\r\n\t\t\t\t{x:w,y:0},\r\n\t\t\t\t{x:w,y:h},\r\n\t\t\t\t{x:0,y:h}\r\n\t\t\t];\r\n\t\t}\r\n\t\telse if(this.context.clearRect) this.context.clearRect(0,0,w,h);\r\n\t}\r\n\r\n\t/**\r\n\t* 设置画布样式，此处只是设置其css样式\r\n\t*\r\n\t* @method css\r\n\t* @param {string} name 样式名\r\n\t* @param {string} value 样式值\r\n\t*/\r\n\tcss(name, value) {\r\n\t\tif(this.canvas && this.canvas.style) {\r\n\t\t\tif(typeof value != 'undefined') this.canvas.style[name] = value;\r\n\t\t\treturn this.canvas.style[name];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 生成路径对象\r\n\t *\r\n\t * @method createPath\r\n\t * @param {array} points 路径中的描点集合\r\n\t * @param {style} style 当前路径的样式\r\n\t * @return {jmPath} 路径对象jmPath\r\n\t */\r\n\tcreatePath(points, style) {\r\n\t\tlet path = this.createShape('path',{\r\n\t\t\tpoints: points,\r\n\t\t\tstyle: style\r\n\t\t});\r\n\t\treturn path;\r\n\t}\r\n\r\n\t/**\r\n\t * 生成直线\r\n\t * \r\n\t * @method createLine\r\n\t * @param {point} start 直线的起点\r\n\t * @param {point} end 直线的终点\r\n\t * @param {style} 直线的样式\r\n\t * @return {jmLine} 直线对象\r\n\t */\r\n\tcreateLine(start, end, style) {\r\n\t\tlet line = this.createShape('line', {\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\t\t\tstyle: style\r\n\t\t});\r\n\t\treturn line;\r\n\t}\r\n\r\n\t/**\r\n\t * 缩小整个画布按比例0.9\r\n\t * \r\n\t * @method zoomOut\r\n\t */\r\n\tzoomOut() {\r\n\t\tthis.scale(0.9 ,0.9);\r\n\t}\r\n\r\n\t/**\r\n\t * 放大 每次增大0.1的比例\r\n\t * \r\n\t * @method zoomIn\r\n\t */\r\n\tzoomIn() {\t\t\r\n\t\tthis.scale(1.1 ,1.1);\r\n\t}\r\n\r\n\t/**\r\n\t * 大小复原\r\n\t * \r\n\t * @method zoomActual\r\n\t */\r\n\tzoomActual() {\r\n\t\tif(this.scaleSize) {\r\n\t\t\tthis.scale(1 / this.scaleSize.x ,1 / this.scaleSize.y);\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.scale(1 ,1);\t\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * 放大缩小画布\r\n\t * \r\n\t * @method scale\r\n\t * @param {number} dx 缩放X轴比例\r\n\t * @param {number} dy 缩放Y轴比例\r\n\t */\r\n\tscale(dx, dy) {\r\n\t\tif(!this.normalSize) {\r\n\t\t\tthis.normalSize = {\r\n\t\t\t\twidth: this.canvas.width,\r\n\t\t\t\theight: this.canvas.height\r\n\t\t\t};\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.context.scale(dx,dy);\r\n\t\tif(!this.scaleSize) {\r\n\t\t\tthis.scaleSize = {x:dx,y:dy};\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.scaleSize = {x:dx * this.scaleSize.x, y:dy * this.scaleSize.y};\r\n\t\t}\r\n\t\tthis.refresh();\r\n\t}\r\n\r\n\t/**\r\n\t * 保存为base64图形数据\r\n\t * \r\n\t * @method toDataURL\r\n\t * @return {string} 当前画布图的base64字符串\r\n\t */\r\n\ttoDataURL() {\r\n\t\tlet data = this.canvas.toDataURL?this.canvas.toDataURL():'';\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/** \r\n\t * 自动刷新画版\r\n\t * @param {function} callback 执行回调\r\n\t */\r\n\tautoRefresh(callback) {\r\n\t\tif(this.___isAutoRefreshing) return;\r\n\t\tconst self = this;\r\n\t\tthis.___isAutoRefreshing = true;\r\n\t\t\r\n\t\tfunction update() {\r\n\t\t\tif(self.destroyed) {\r\n\t\t\t\tself.___isAutoRefreshing = false;\r\n\t\t\t\treturn;// 已销毁\r\n\t\t\t}\r\n\t\t\tif(self.needUpdate) self.redraw();\r\n\t\t\t// 触发刷新事件\r\n\t\t\tself.emit('update');\r\n\r\n\t\t\tself.__requestAnimationFrameFunHandler && this.cancelAnimationFrame(self.__requestAnimationFrameFunHandler);\r\n\t\t\tself.__requestAnimationFrameFunHandler = this.requestAnimationFrame(update);\r\n\t\t\tif(callback) callback();\r\n\t\t}\r\n\t\tself.__requestAnimationFrameFunHandler && this.cancelAnimationFrame(self.__requestAnimationFrameFunHandler);\r\n\t\tself.__requestAnimationFrameFunHandler = this.requestAnimationFrame(update);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t// 销毁当前对象\r\n\tdestroy() {\r\n\t\tthis.eventHandler.destroy();\r\n\t\tthis.destroyed = true;// 标记已销毁\r\n\t}\r\n}\r\n\r\nexport { \r\n\tjmGraph, \r\n\tjmUtils,\r\n\tjmList,\r\n\tjmProperty,\r\n\tjmShadow,\r\n\tjmGradient,\r\n\tjmEvents,\r\n\tjmControl,\r\n\tjmPath,\r\n };\r\n"],"names":["jmList","Array","ps","arg","length","isArray","i","push","option","type","obj","this","includes","_typeof","removeAt","index","splice","removeHandler","call","find","cb","inverse","len","handler","count","jmUtils","source","target","deep","copyHandler","deepIndex","undefined","isType","dest","clone","slice","k","__proto__","name","fun","opt","indexOf","ns","split","bindEvent","attachEvent","addEventListener","removeEventListener","detachEvent","el","pos","offsetParent","top","offsetTop","left","offsetLeft","x","y","evt","scale","isTouch","touches","event","changedTouches","targetTouches","srcElement","px","pageX","clientX","document","documentElement","scrollLeft","body","py","pageY","clientY","scrollTop","ox","offsetX","oy","offsetY","p","getElementPosition","layerX","layerY","screenX","screenY","constructor","pt","polygon","offset","j","n","inside","redo","Math","abs","min","max","f","l","sqrt","_x","parentBounds","targetBounds","result","right","bottom","rp","r","cos","sin","x1","y1","c","sc","substring","trimStart","trimEnd","per","trim","tmp","checkPercent","h","v","toLowerCase","iv","floor","hex","color","a","substr","g","b","hexToNumber","toFixed","hexToRGBA","callback","win","requestAnimationFrame","window","setTimeout","cancelAnimationFrame","clearTimeout","jmObject","graph","is","arguments","animateHandles","params","add","millisec","handle","self","dispatcher","_this","overduehandles","curTimes","Date","getTime","each","ani","times","apply","e","console","info","toString","remove","animate","PROPERTY_KEY","Symbol","jmProperty","pars","pros","value","args","oldValue","newValue","emit","__pro","needUpdate","findParent","canvas","jmShadow","blur","fromString","s","ms","match","test","jmGradient","stops","Number","control","gradient","context","bounds","absoluteBounds","getAbsoluteBounds","x2","y2","location","getLocation","d","radius","width","height","percentToNumber","sx1","sy1","sx2","sy2","createLinearGradient","r1","r2","createCircularGradient","createRadialGradient","toColor","addColorStop","par","spindex","lastIndexOf","isNaN","addStop","str","jmEvents","container","mouseHandler","jmMouseEvent","keyHandler","jmKeyEvent","eventName","raiseEvent","destroy","instance","eventEvents","init","doc","preventDefault","touchStart","passive","touchMove","touchEnd","touchCancel","removeEvent","checkKeyEvent","tagName","jmStyleMap","jmControl","t","style","position","zIndex","interactive","initializing","on","_this2","bind","getContext","children","sort","css","cur","oadd","parent","contain","oremove","levelItems","zindex","clear","__setStyle","mpkey","styleValue","_this3","warn","mpname","toGradient","translate","angle","tranX","tranY","point","getRotation","rotateX","rotateY","rotate","transform","scaleX","skewX","skewY","scaleY","cursor","isReset","rect","points","local","center","start","end","margin","getBounds","rotation","trans","offseted","cpoints","rec","prec","beginPath","close","closePath","fill","stroke","moveTo","m","lineTo","visible","initPoints","needDraw","save","setStyle","beginDraw","draw","endDraw","item","paint","restore","__events","eventCollection","getEvent","events","unbind","runEventHandle","cancel","pad","getPosition","rotatePoints","pointInPolygon","getEventPosition","scaleSize","button","keyCode","charCode","which","ctrlKey","path","stoped","abounds","inpos","checkPoint","runEventAndPopEvent","focused","__mvMonitor","mouseDown","curposition","mv","outside","parentbounds","offsetx","offsety","lockSide","thisbounds","checkOutSide","mu","ml","md","jmPath","jmGraph","mode","devicePixelRatio","util","utils","wx","canIUse","createSelectorQuery","select","isWXMiniApp","getElementById","cn","createElement","appendChild","offsetWidth","clientWidth","offsetHeight","clientHeight","parentElement","__init","shapes","Object","assign","dpr","getSystemInfoSync","pixelRatio","dprScaleSize","resize","eventHandler","autoRefresh","w","__normalSize","shape","redraw","clearRect","createShape","dx","dy","normalSize","refresh","toDataURL","___isAutoRefreshing","__requestAnimationFrameFunHandler","update","destroyed"],"mappings":"wjHAOqBA,mBAAeC,wDAExBC,EAAK,sBADEC,2BAAAA,qBAERA,GAAOA,EAAIC,QAAUH,MAAMI,QAAQF,EAAI,IAAK,KACvC,IAAIG,EAAE,EAAGA,EAAGH,EAAI,GAAGC,OAAQE,IAAKJ,EAAGK,KAAKJ,EAAI,GAAGG,mCAC1CJ,iCAKRM,OAAS,KACTC,KAAO,2CAShB,SAAIC,MACGA,GAAOT,MAAMI,QAAQK,GAAM,KACtB,IAAIJ,EAAE,EAAGA,EAAII,EAAIN,OAAQE,IACrBK,KAAKC,SAASF,EAAIJ,KAAKK,KAAKJ,KAAKG,EAAIJ,WAEtCI,QAEM,UAAdG,EAAOH,IAAmBC,KAAKC,SAASF,SACtCH,KAAKG,GAD8CA,wBAY5D,SAAOA,OACC,IAAIJ,EAAIK,KAAKP,OAAQ,EAAM,GAAHE,EAAMA,IAC3BK,KAAKL,IAAMI,QACLI,SAASR,2BAY1B,SAASS,OAEGL,EADLC,KAAKP,OAASW,IACTL,EAAMC,KAAKI,QACVC,OAAOD,EAAM,GACfJ,KAAKH,OAAOS,eAAgBN,KAAKH,OAAOS,cAAcC,KAAKP,KAAMD,EAAKK,2BAWjF,SAAQL,UACGC,KAAKC,SAASF,sBAWzB,SAAIK,SACmB,mBAATA,EACCJ,KAAKQ,KAAKJ,GAGVJ,KAAKI,uBAYpB,SAAKK,EAAIC,MACFD,GAAmB,mBAANA,KAETC,OACK,IAAIf,EAAIK,KAAKP,OAAS,EAAK,GAAHE,EAAMA,QAErB,IADDc,EAAGF,KAAKP,KAAML,EAAGK,KAAKL,IACd,mBAIhBgB,EAAMX,KAAKP,OACRE,EAAK,EAAGA,EAAIgB,EAAIhB,QAEV,IADDc,EAAGF,KAAKP,KAAML,EAAGK,KAAKL,IACd,2BAchC,SAAMiB,MACCA,GAA6B,mBAAXA,EAAuB,SACpCC,EAAQ,EACRF,EAAMX,KAAKP,OACPE,EAAK,EAAGA,EAAEgB,EAAIhB,IACfiB,EAAQZ,KAAKL,KACZkB,WAGDA,SAEJb,KAAKP,4BAShB,gBACSY,OAAO,EAAGL,KAAKP,iBC/IPqB,iFAYJC,EAAQC,OAAQC,0DAAcC,yDAAc,KAAMC,yDAAY,KAE7C,mBAAhBD,EAA4B,KAC5BnB,EAAMmB,EAAYH,EAAQE,EAAME,MACnCpB,EAAK,OAAOA,KAIE,kBAAXiB,IACNC,EAAOD,EACPA,OAASI,GAIE,MARfD,SASWH,KAGRD,GAA4B,WAAlBb,EAAOa,GAAqB,IACrCC,EAASA,GAAU,GAGhBhB,KAAKqB,OAAON,EAAQ1B,UACZ,IAAIA,EAAO0B,GAEjB,GAAGzB,MAAMI,QAAQqB,GAAS,IAExBE,EAAM,SACDK,EAAO,GACH3B,EAAE,EAAGA,EAAEoB,EAAOtB,OAAQE,IAC1B2B,EAAK1B,KAAKI,KAAKuB,MAAMR,EAAOpB,GAAIqB,EAAOrB,GAAIsB,EAAMC,EAAaC,WAE3DG,SAEJP,EAAOS,MAAM,OAKpB,IAAIC,KAFLV,EAAOW,YAAWV,EAAOU,UAAYX,EAAOW,WAElCX,EACA,gBAANU,IAEqB,WAArBvB,EAAOc,EAAOS,UAAwC,IAAdT,EAAOS,KAC9CT,EAAOS,GAAKzB,KAAKuB,MAAMR,EAAOU,GAAIT,EAAOS,GAAIR,EAAMC,EAAaC,YAGjEH,EAEN,YAAoB,IAAVA,EACJA,EAGJD,2BAaX,SAAiBC,EAAQW,EAAMC,EAAKC,MAC7BF,GAASA,EAAKG,UAAiC,GAAtBH,EAAKG,QAAQ,aACjCC,EAAKJ,EAAKK,MAAM,KACZrC,EAAE,EAAEA,EAAEoC,EAAGtC,OAAOE,SACfsC,UAAUjB,EAAQe,EAAGpC,GAAIiC,EAAKC,UAGxCb,EAAOkB,YACNlB,EAAOkB,YAAY,KAAKP,EAAMC,EAAKC,GAE/Bb,EAAOmB,kBACXnB,EAAOmB,iBAAiBR,EAAMC,EAAKC,GAEhC,CACHF,KAAAA,EACAX,OAAAA,EACAY,IAAAA,8BAaR,SAAmBZ,EAAQW,EAAMC,UAC1BZ,EAAOoB,oBACCpB,EAAOoB,oBAAoBT,EAAMC,GAAK,GAEzCZ,EAAOqB,aACXrB,EAAOqB,YAAY,KAAOV,EAAMC,IACzB,QAGPZ,EAAO,KAAOW,GAAQ,wCAY9B,SAA0BW,OAClBC,EAAM,KAAQ,OAAW,OACzBD,EAAI,OAAOC,KAEXD,EAAGE,kBACIF,EAAGE,cACND,EAAIE,KAAOH,EAAGI,UACdH,EAAII,MAAQL,EAAGM,WACfN,EAAKA,EAAGE,kBAGRF,EAAGO,EACPN,EAAII,MAAQL,EAAGO,EAEXP,EAAGO,IACPN,EAAIE,KAAOH,EAAGQ,UAEXP,kCAWX,SAAyBQ,EAAKC,OAGtBC,GAAU,EACVC,GAHJH,EAAMA,GAAOI,OAGKC,gBAAkBL,EAAIM,eAAiBN,EAAIG,QACzDlC,EAAS+B,EAAI/B,QAAU+B,EAAIO,WAC5BJ,GAAWA,EAAQzD,UAClBsD,EAAMG,EAAQ,IACNlC,SAAQ+B,EAAI/B,OAASA,GAC7BiC,GAAU,OAEVM,EAAKR,EAAIS,OAAST,EAAIF,OACV,IAANU,IAAoBA,EAAKR,EAAIU,SAAWC,SAASC,gBAAgBC,YAAcF,SAASG,KAAKD,iBACnGE,EAAKf,EAAIgB,OAAShB,EAAID,OACV,IAANgB,IAAoBA,EAAKf,EAAIiB,SAAWN,SAASC,gBAAgBM,WAAaP,SAASG,KAAKI,gBAElGC,EAAKnB,EAAIoB,QACTC,EAAKrB,EAAIsB,oBACI,IAAPH,QAAoC,IAAPE,IAEnCF,EAAIX,GADAe,EAAItE,KAAKuE,mBAAmBvD,IACrB2B,KACXyB,EAAKN,EAAKQ,EAAE7B,KAEbO,IACIA,EAAMH,IAAGqB,GAAUlB,EAAMH,GACzBG,EAAMF,IAAGsB,GAAUpB,EAAMF,IAGzB,CACHU,MAAOD,EACPQ,MAAOD,EACPL,QAASV,EAAIU,QACbO,QAASjB,EAAIiB,QAEbG,QAASD,EACTG,QAASD,EACTI,OAAQzB,EAAIyB,OACZC,OAAQ1B,EAAI0B,OACZC,QAAS3B,EAAI2B,QACbC,QAAS5B,EAAI4B,QACb9B,EAAGqB,EACHpB,EAAGsB,EACHnB,QAASA,EACTC,QAAAA,yBAaR,SAAclC,EAAQlB,YACdkB,GAA4B,WAAlBd,EAAOc,KAClBA,EAAO4D,cAAgB9E,gCAqB9B,SAAsB+E,EAAIC,EAASC,GAC/BA,EAASA,GAAU,EACnBA,GAAkB,MACdpF,EAAGqF,EAAGC,EAAIH,EAAQrF,OAClByF,GAAS,EAAOC,GAAO,MAEvBL,GAAgB,GAALG,EAAQ,OAAO,KACtB,GAALA,SACQG,KAAKC,IAAIP,EAAQ,GAAGjC,EAAIgC,EAAGhC,IAAMkC,GAAUK,KAAKC,IAAIP,EAAQ,GAAGhC,EAAI+B,EAAG/B,IAAMiC,EAIlF,GAAQ,GAALE,EAAQ,IAETG,KAAKE,IAAIR,EAAQ,GAAGjC,EAAEiC,EAAQ,GAAGjC,GAAKgC,EAAGhC,EAAIkC,GAC5CF,EAAGhC,EAAIuC,KAAKG,IAAIT,EAAQ,GAAGjC,EAAEiC,EAAQ,GAAGjC,GAAKkC,SACtC,KAGRK,KAAKE,IAAIR,EAAQ,GAAGhC,EAAEgC,EAAQ,GAAGhC,GAAK+B,EAAG/B,EAAIiC,GAC5CF,EAAG/B,EAAIsC,KAAKG,IAAIT,EAAQ,GAAGhC,EAAEgC,EAAQ,GAAGhC,GAAKiC,SACtC,KAIRD,EAAQ,GAAGjC,GAAKiC,EAAQ,GAAGjC,SAClBuC,KAAKC,IAAIP,EAAQ,GAAGjC,EAAIgC,EAAGhC,IAAMkC,IAAWF,EAAG/B,EAAIgC,EAAQ,GAAGhC,IAAM+B,EAAG/B,EAAIgC,EAAQ,GAAGhC,IAAM,EAAI,EAAE,KAG3GgC,EAAQ,GAAGhC,GAAKgC,EAAQ,GAAGhC,SAClBsC,KAAKC,IAAIP,EAAQ,GAAGhC,EAAI+B,EAAG/B,IAAMiC,IAAWF,EAAGhC,EAAIiC,EAAQ,GAAGjC,IAAMgC,EAAGhC,EAAIiC,EAAQ,GAAGjC,IAAM,EAAI,EAAE,KAG3GuC,KAAKC,IAAIP,EAAQ,GAAGjC,EAAIgC,EAAGhC,GAAKkC,GAAUK,KAAKC,IAAIP,EAAQ,GAAGhC,EAAI+B,EAAG/B,GAAKiC,SAClE,KAERK,KAAKC,IAAIP,EAAQ,GAAGjC,EAAIgC,EAAGhC,GAAKkC,GAAUK,KAAKC,IAAIP,EAAQ,GAAGhC,EAAI+B,EAAG/B,GAAKiC,SAClE,KAIRF,EAAG/B,GAAKgC,EAAQ,GAAGhC,GAAK+B,EAAG/B,GAAKgC,EAAQ,GAAGhC,SAQvC,MANC0C,GAAKV,EAAQ,GAAGjC,EAAIiC,EAAQ,GAAGjC,IAAMiC,EAAQ,GAAGhC,EAAIgC,EAAQ,GAAGhC,IAAM+B,EAAG/B,EAAIgC,EAAQ,GAAGhC,GAEvF2C,GADMZ,EAAG/B,EAAIgC,EAAQ,GAAGhC,GAAKsC,KAAKM,KAAKF,EAAIA,GAAKX,EAAG/B,EAAIgC,EAAQ,GAAGhC,IAAM+B,EAAG/B,EAAIgC,EAAQ,GAAGhC,KAChF+B,EAAGhC,EAAIiC,EAAQ,GAAGjC,EAAI2C,UAE7BJ,KAAKC,IAAII,IAAMV,EAAQ,EAAE,MAKnCpF,EAAI,EAAEA,EAAIsF,IAAItF,KACXmF,EAAQnF,GAAGkD,GAAKgC,EAAGhC,GACnBiC,EAAQnF,GAAGmD,GAAK+B,EAAG/B,SACZ,OAKRqC,OAEHD,EADAC,GAAO,EAEFxF,EAAI,EAAEqF,EAAIC,EAAI,EAAEtF,EAAIsF,EAAED,EAAIrF,OACrBmF,EAAQnF,GAAGmD,EAAI+B,EAAG/B,GAAK+B,EAAG/B,EAAIgC,EAAQE,GAAGlC,GAC1CgC,EAAQE,GAAGlC,EAAI+B,EAAG/B,GAAK+B,EAAG/B,EAAIgC,EAAQnF,GAAGmD,MACtC+B,EAAGhC,GAAKiC,EAAQnF,GAAGkD,GAAKgC,EAAGhC,GAAKiC,EAAQE,GAAGnC,EAAG,KAC1C8C,GAAMd,EAAG/B,EAAEgC,EAAQnF,GAAGmD,IAAIgC,EAAQE,GAAGnC,EAAEiC,EAAQnF,GAAGkD,IAAIiC,EAAQE,GAAGlC,EAAEgC,EAAQnF,GAAGmD,GAAGgC,EAAQnF,GAAGkD,KAC5FgC,EAAGhC,EAAI8C,EACPT,GAAUA,OACT,GAAIL,EAAGhC,GAAK8C,SAEN,QAId,GAAKd,EAAG/B,GAAKgC,EAAQnF,GAAGmD,MACrB+B,EAAGhC,EAAIiC,EAAQnF,GAAGkD,EAAG,CAClBiC,EAAQnF,GAAGmD,EAAIgC,EAAQE,GAAGlC,IACvB+B,EAAG/B,IAGH+B,EAAG/B,EAETqC,GAAO,cAIV,GAAKL,EAAQnF,GAAGmD,GAAMgC,EAAQE,GAAGlC,GAClC+B,EAAG/B,GAAKgC,EAAQnF,GAAGmD,IAChBgC,EAAQnF,GAAGkD,EAAIgC,EAAGhC,GAAKgC,EAAGhC,EAAIiC,EAAQE,GAAGnC,GAC3CiC,EAAQE,GAAGnC,EAAIgC,EAAGhC,GAAKgC,EAAGhC,EAAIiC,EAAQnF,GAAGkD,GAAO,CACjDqC,GAAS,eAMdA,EAAS,EAAE,8BA6EtB,SAAoBU,EAAcC,EAAcd,OACxCe,EAAS,CAACnD,KAAK,EAAEoD,MAAM,EAAEtD,IAAI,EAAEuD,OAAO,UACvCjB,EAAOlC,EAAI,EACViD,EAAOnD,KAAOkD,EAAalD,KAAOoC,EAAOlC,EAAI+C,EAAajD,KAE3C,EAAXoC,EAAOlC,IACXiD,EAAOC,MAAQF,EAAaE,MAAQhB,EAAOlC,EAAI+C,EAAaG,OAG7DhB,EAAOjC,EAAI,EACVgD,EAAOrD,IAAMoD,EAAapD,IAAMsC,EAAOjC,EAAI8C,EAAanD,IAEzC,EAAXsC,EAAOjC,IACXgD,EAAOE,OAASH,EAAaG,OAASjB,EAAOjC,EAAI8C,EAAaI,QAE3DF,8BAYX,SAAoBxB,EAAG2B,EAAIC,OACnBA,IAAM5B,EAAG,OAAOA,MAChB6B,EAAMf,KAAKe,IAAID,GACfE,EAAMhB,KAAKgB,IAAIF,MAChB5B,EAAE7E,WACG,IAEI4G,EACAC,EAHA3G,EAAE,EAAEA,EAAE2E,EAAE7E,OAAOE,IACf2E,EAAE3E,KACF0G,EAAK/B,EAAE3E,GAAGkD,EAAIoD,EAAGpD,EACjByD,EAAKhC,EAAE3E,GAAGmD,EAAImD,EAAGnD,EACrBwB,EAAE3E,GAAGkD,EAAIwD,EAAKF,EAAMG,EAAKF,EAAMH,EAAGpD,EAClCyB,EAAE3E,GAAGmD,EAAIuD,EAAKD,EAAME,EAAKH,EAAMF,EAAGnD,OAGrC,KACGuD,EAAK/B,EAAEzB,EAAIoD,EAAGpD,EACdyD,EAAKhC,EAAExB,EAAImD,EAAGnD,EAClBwB,EAAEzB,EAAIwD,EAAKF,EAAMG,EAAKF,EAAMH,EAAGpD,EAC/ByB,EAAExB,EAAIuD,EAAKD,EAAME,EAAKH,EAAMF,EAAGnD,SAE5BwB,2BAYX,SAAiBvD,EAAQwF,MACrBA,EAAIA,GAAK,IACNxF,GAA0B,EAAhBA,EAAOtB,OAAY,KACxB+G,EAAKzF,EAAO,MACbyF,IAAOD,GAAsB,GAAjBA,EAAEzE,QAAQ0E,UACrBzF,EAASA,EAAO0F,UAAU,GACnBzG,KAAK0G,UAAU3F,EAAOwF,UAG9BxF,yBAYX,SAAeA,EAAQwF,MACnBA,EAAIA,GAAK,IACNxF,GAA0B,EAAhBA,EAAOtB,OAAY,KACxB+G,EAAKzF,EAAOA,EAAOtB,OAAS,MAC7B+G,IAAOD,GAAsB,GAAjBA,EAAEzE,QAAQ0E,UACrBzF,EAASA,EAAO0F,UAAU,EAAE1F,EAAOtB,OAAS,GACrCO,KAAK0G,UAAU3F,EAAOwF,UAG9BxF,sBAYX,SAAYA,EAAOwF,UACRvG,KAAK2G,QAAQ3G,KAAK0G,UAAU3F,EAAOwF,GAAGA,+BAWjD,SAAoBK,MACE,iBAARA,GAEoB,MAD1BA,EAAM5G,KAAK6G,KAAKD,IACTA,EAAInH,OAAS,UACTmH,iCAanB,SAAuBA,OAEXE,QADU,iBAARF,IACFE,EAAM9G,KAAK+G,aAAaH,MAExBA,EAAM5G,KAAK6G,KAAKC,EAAI,MACpBF,GAAY,KAGbA,6BAWX,SAAmBI,MACC,iBAANA,EAAgB,OAAOA,UAI7BC,EAAI,EACJxB,GAHJuB,EAAIA,EAAEE,eAGIzH,OACFE,EAAE,EAAEA,EAAE8F,EAAE9F,IAAK,KACbwH,EAJE,mBAIOrF,QAAQkF,EAAErH,OACd,GAANwH,OAEC,IAAInC,EAAE,EAAEA,EAAES,EAAI9F,EAAEqF,IAChBmC,GAAM,GAEVF,GAAKE,UAEFF,6BAWX,SAAmBA,WAGXD,EAAI,GACE,EAAJC,GAAO,CAETD,EALM,mBAIEC,EAAI,IACCD,EACbC,EAAI7B,KAAKgC,MAAMH,EAAI,WAEhBD,2BAOX,SAAiBK,MAIA,MAHbA,EAAMrH,KAAK6G,KAAKQ,IAGT,GAAW,KACRC,EAAQ,CACVC,EAAG,MAEU,GAAdF,EAAI5H,cACH6H,EAAMC,EAAIF,EAAIG,OAAO,EAAE,GACvBF,EAAMG,EAAIJ,EAAIG,OAAO,EAAE,GACvBF,EAAMI,EAAIL,EAAIG,OAAO,EAAE,GACvBF,EAAMpB,EAAImB,EAAIG,OAAO,EAAE,GAEvBF,EAAMC,GAAKvH,KAAK2H,YAAYL,EAAMC,GAAK,KAAKK,QAAQ,GAEpDN,EAAMpB,EAAIlG,KAAK2H,YAAYL,EAAMpB,GAAG,GACpCoB,EAAMG,EAAIzH,KAAK2H,YAAYL,EAAMG,GAAG,GACpCH,EAAMI,EAAI1H,KAAK2H,YAAYL,EAAMI,GAAG,GAC7BJ,EAGN,GAAkB,IAAfD,EAAI5H,QAA+B,IAAf4H,EAAI5H,cAEV,IAAf4H,EAAI5H,QACH6H,EAAMG,EAAIJ,EAAIG,OAAO,EAAG,GACxBF,EAAMG,EAAIH,EAAMG,EAAIH,EAAMG,EAC1BH,EAAMI,EAAIL,EAAIG,OAAO,EAAG,GACxBF,EAAMI,EAAIJ,EAAMI,EAAIJ,EAAMI,EAC1BJ,EAAMpB,EAAImB,EAAIG,OAAO,EAAG,GACxBF,EAAMpB,EAAIoB,EAAMpB,EAAIoB,EAAMpB,IAG1BoB,EAAMG,EAAIJ,EAAIG,OAAO,EAAG,GACxBF,EAAMI,EAAIL,EAAIG,OAAO,EAAG,GACxBF,EAAMpB,EAAImB,EAAIG,OAAO,EAAG,IAG5BF,EAAMpB,EAAIlG,KAAK2H,YAAYL,EAAMpB,GAAG,GACpCoB,EAAMG,EAAIzH,KAAK2H,YAAYL,EAAMG,GAAG,GACpCH,EAAMI,EAAI1H,KAAK2H,YAAYL,EAAMI,GAAG,GAE7BJ,EAGN,GAAkB,IAAfD,EAAI5H,cACR6H,EAAMC,EAAIF,EAAIG,OAAO,EAAE,GACvBF,EAAMG,EAAIJ,EAAIG,OAAO,EAAE,GACvBF,EAAMI,EAAIL,EAAIG,OAAO,EAAE,GACvBF,EAAMpB,EAAImB,EAAIG,OAAO,EAAE,GAEvBF,EAAMpB,EAAIlG,KAAK2H,YAAYL,EAAMpB,GAAG,GACpCoB,EAAMG,EAAIzH,KAAK2H,YAAYL,EAAMG,GAAG,GACpCH,EAAMI,EAAI1H,KAAK2H,YAAYL,EAAMI,GAAG,GAEpCJ,EAAMC,GAAKvH,KAAK2H,YAAYL,EAAMC,GAAK,KAAKK,QAAQ,GAC7CN,SAGRD,yBAWX,SAAenB,EAAGuB,EAAGC,EAAGH,MACJ,iBAANrB,GAAkBA,EAAG,IAGf,OAFZA,EAAIlG,KAAK6G,KAAKX,IAET,KAA4B,IAAbA,EAAEzG,QAA6B,IAAbyG,EAAEzG,QAAe,OAAOyG,MAExDoB,EAAQtH,KAAK6H,UAAU3B,MACT,iBAAVoB,EAAoB,OAAOA,EAErCpB,EAAIoB,EAAMpB,GAAKA,EACfuB,EAAIH,EAAMG,GAAKA,EACfC,EAAIJ,EAAMI,GAAKA,EACfH,EAAID,EAAMC,GAAKA,cAEJ,IAALrB,QAAgC,IAALuB,QAAgC,IAALC,OAC7C,IAALH,EACC,QAAUrB,EAAI,IAAMuB,EAAI,IAAMC,EAAI,IAAMH,EAAI,IAG5C,OAASrB,EAAI,IAAMuB,EAAI,IAAMC,EAAI,IAGzCxB,uCAGX,SAA6B4B,EAAUC,UACzBA,GAAOA,EAAIC,sBAAuBD,EAAIC,sBAA0C,oBAAXC,QAA0BA,OAAOD,sBAAuBC,OAAOD,sBAAuBE,YAChKJ,EAAU,wCAEnB,SAA4BlH,EAASmH,UACvBA,GAAOA,EAAII,qBAAsBJ,EAAII,qBAAyC,oBAAXF,QAA0BA,OAAOE,qBAAsBF,OAAOE,qBAAsBC,cAC5JxH,YC5rBQyH,wBAERZ,aACRA,GAAe,WAAVA,EAAE3H,YACJwI,MAAQb,+BAaf,SAAG3H,SACgB,iBAARA,EACFE,KAAKF,MAAQA,EAEdE,gBAAgBF,yBAWxB,cACIE,KAAKuI,GAAG,WAAY,IACL,EAAdC,UAAK/I,OAAY,CACfO,KAAKyI,iBAAgBzI,KAAKyI,eAAiB,IAAIpJ,OAE/CqJ,EAAS,MACI,EAAdF,UAAK/I,WACH,IAAIE,EAAE,EAAEA,EAAE6I,UAAK/I,OAAOE,IACzB+I,EAAO9I,KAAUD,uBAAAA,mBAAAA,SAGd8I,eAAeE,IAAI,CACvBC,oDAAqB,GACrBC,+CACAH,OAAOA,QAKHI,EAFH9I,KAAKyI,gBAC0B,EAA9BzI,KAAKyI,eAAe5H,WAClBiI,EAAO9I,MAEN+I,WAAab,WAAW,SAASc,GACrCA,EAAQA,GAASF,MAsBTnJ,EApBJsJ,EAAiB,GACjBC,GAAW,IAAIC,MAAOC,cAmBlBzJ,KAlBRqJ,EAAMP,eAAeY,KAAK,SAAS1J,EAAE2J,OAEhCA,GAAOA,EAAIT,UAAYS,EAAIC,OAASL,EAAWI,EAAIC,OAASD,EAAIV,aAEzD,IADDU,EAAIT,OAAOW,MAAMR,EAAOM,EAAIZ,SAEnCO,EAAerJ,KAAK0J,GAErBA,EAAIC,MAAQL,GAId,MAAMO,GACFxB,OAAOyB,SAAWzB,OAAOyB,QAAQC,MACnC1B,OAAOyB,QAAQC,KAAKF,EAAEG,YAEpBN,GAAKL,EAAerJ,KAAK0J,MAGjBL,EACZD,EAAMP,eAAeoB,OAAOZ,EAAetJ,IAE5CqJ,EAAMc,WACL,GAAG9J,WAIH,KACAsI,EAAQtI,KAAKsI,MACdA,GACFA,EAAMwB,cAANxB,uBC9FEyB,EAAeC,OAAO,cASPC,iBAAmB5B,mEAKjC0B,GAAgB,oCAUtB,sCAASG,2BAAAA,qBACLA,EAAM,KACJC,EAAOnK,KAAK+J,GACZpI,EAAOuI,EAAK,MACC,EAAdA,EAAKzK,OAAY,KACf2K,EAAQF,EAAK,GACbG,EAAO,CAACC,SAAUH,EAAKxI,GAAO4I,SAAUH,UAC5CD,EAAKxI,GAAQuI,EAAK,GACflK,KAAKwK,MAAMxK,KAAKwK,KAAK,iBAAkB7I,EAAM0I,GACzCH,EAAK,GAER,GAAkB,GAAfA,EAAKzK,cACL0K,EAAKxI,4BAUf,kBACQ3B,KAAKyK,MAAM,mBAEnB,SAAexD,QACTwD,MAAM,aAAcxD,GAEtBA,IAAMjH,KAAKuI,GAAG,YAAcvI,KAAKsI,aAC9BA,MAAMoC,YAAa,sBAS1B,kBACS1K,KAAKyK,MAAM,UACTzK,KAAKyK,MAAM,QAASzK,KAAK2K,WAAW,iBAG/C,SAAU1D,UACFjH,KAAKyK,MAAM,QAASxD,wCAO5B,SAAsBrG,UACdE,EAAQkH,sBAAsBpH,EAASZ,KAAKsI,MAAOtI,KAAKsI,MAAMsC,OAAQ,0CAO9E,SAAqBhK,UACbE,EAAQqH,qBAAqBvH,EAASZ,KAAKsI,MAAOtI,KAAKsI,MAAMsC,OAAQ,eC5EzDC,wBACRhI,EAAGC,EAAGgI,EAAMxD,aACR,iBAALzE,GAAkBC,GAAMgI,GAASxD,QAIrCzE,EAAIA,OACJC,EAAIA,OACJgI,KAAOA,OACPxD,MAAQA,QANRyD,WAAWlI,uCAclB,SAAWmI,MACNA,GACAC,EAAKD,EAAEE,MAAM,iEACdD,SACGpI,EAAIoI,EAAG,IAAI,OACXnI,EAAImI,EAAG,IAAI,EACbA,EAAG,KACLA,EAAG,GAAKnK,EAAQ+F,KAAKoE,EAAG,GAAG,MAEH,IAArBA,EAAG,GAAGnJ,QAAQ,MAAY,QAAQqJ,KAAKF,EAAG,SACvC3D,MAAQ2D,EAAG,QAGXH,KAAOhK,EAAQ+F,KAAKoE,EAAG,GAAG,OAG9BA,EAAG,UACA3D,MAAQxG,EAAQ+F,KAAKoE,EAAG,GAAG,QAG3BjL,8BAQR,eACKgL,EAAIhL,KAAK6C,EAAI,IAAM7C,KAAK8C,SACzB9C,KAAK8K,OAAME,GAAK,IAAMhL,KAAK8K,MAC3B9K,KAAKsH,QAAO0D,GAAK,IAAMhL,KAAKsH,OACxB0D,WCpDYI,wBACRvJ,qBACNwJ,MAAQ,IAAIhM,EAEdwC,GAAqB,UAAd3B,EAAO2B,OACZ,IAAIJ,KAAKI,OACPJ,GAAKI,EAAIJ,OAMM,iBAAPI,QACTkJ,WAAWlJ,oCAWlB,SAAQkD,EAAQuC,QACV+D,MAAM1C,IAAI,CACd5D,OAAQuG,OAAOvG,GACfuC,MAAOA,8BAYT,SAAWiE,OACNC,EACAC,EAAUF,EAAQE,SAAWF,EAC7BG,EAASH,EAAQI,gBAAsCJ,EAAQK,oBAC/DvF,EAAKrG,KAAKqG,IAAI,EACdC,EAAKtG,KAAKsG,IAAI,EACduF,EAAK7L,KAAK6L,GACVC,EAAK9L,KAAK8L,GAEVC,EAAWR,EAAQS,cAEnBC,EAAI,EAKPA,GAHAA,EADEF,EAASG,OACW,EAAlBH,EAASG,OAEVD,IACC7G,KAAKE,IAAIyG,EAASI,MAAMJ,EAASK,QAKnCtL,EAAQiG,aAAaV,KACvBA,EAAKvF,EAAQuL,gBAAgBhG,IAAOqF,EAAOS,OAASF,IAElDnL,EAAQiG,aAAa8E,KACvBA,EAAK/K,EAAQuL,gBAAgBR,IAAOH,EAAOS,OAASF,IAElDnL,EAAQiG,aAAaT,KACvBA,EAAKxF,EAAQuL,gBAAgB/F,IAAOoF,EAAOU,QAAUH,IAEnDnL,EAAQiG,aAAa+E,KACvBA,EAAKhL,EAAQuL,gBAAgBP,IAAOJ,EAAOU,QAAUH,IAGlDK,EAAMhB,OAAOjF,GAAMqF,EAAO/I,KAC1B4J,EAAMjB,OAAOhF,GAAMoF,EAAOjJ,IAC1B+J,EAAMlB,OAAOO,GAAMH,EAAO/I,KAC1B8J,EAAMnB,OAAOQ,GAAMJ,EAAOjJ,UACb,WAAdzC,KAAKF,KACP0L,EAAWC,EAAQiB,qBAAqBJ,EAAKC,EAAKC,EAAKC,GAElC,WAAdzM,KAAKF,OACR6M,EAAK3M,KAAK2M,IAAI,EACdC,EAAK5M,KAAK4M,GACX9L,EAAQiG,aAAa4F,KACvBA,EAAK7L,EAAQuL,gBAAgBM,GAC7BA,GAAKV,GAEHnL,EAAQiG,aAAa6F,KACvBA,EAAK9L,EAAQuL,gBAAgBO,GAC7BA,GAAKX,GAKLT,EADEC,EAAQoB,uBACCpB,EAAQoB,uBAAuBP,EAAKC,EAAKK,GAGzCnB,EAAQqB,qBAAqBR,EAAKC,EAAKI,EAAIH,EAAKC,EAAKG,SAI7DvB,MAAMhC,KAAK,SAAS1J,EAAEqL,OACtBzE,EAAIzF,EAAQiM,QAAQ/B,EAAE1D,OAE1BkE,EAASwB,aAAahC,EAAEjG,OAAQwB,KAG1BiF,4BAaR,SAAWR,MACNA,OACAC,EAAKD,EAAEE,MAAM,iEACbD,KAAMA,EAAGxL,OAAS,SACjBK,KAAOmL,EAAG,GAAG/D,cAEZ3H,EAAKuB,EAAQ+F,KAAKoE,EAAG,IAAIjJ,MAAM,OAErB,UAAbhC,KAAKF,KACJP,EAAGE,QAAU,QACVoM,GAAKtM,EAAG,QACRuM,GAAKvM,EAAG,IAAI,SAGZ8G,GAAK9G,EAAG,QACR+G,GAAK/G,EAAG,QACRsM,GAAKtM,EAAG,QACRuM,GAAKvM,EAAG,IAKXA,EAAGE,QAAU,QACVoM,GAAKtM,EAAG,QACRuM,GAAKvM,EAAG,IAAI,OACZqN,GAAKrN,EAAG,IAAI,SAGZ8G,GAAK9G,EAAG,QACR+G,GAAK/G,EAAG,QACRoN,GAAKpN,EAAG,QACRsM,GAAKtM,EAAG,QACRuM,GAAKvM,EAAG,QACRqN,GAAKrN,EAAG,QAKT2K,EAAOe,EAAG,GAAGC,MAAM,gEACtBhB,GAAQA,EAAKzK,WACX,IAAIE,EAAE,EAAEA,EAAEuK,EAAKzK,OAAOE,IAAK,KAIvBoF,EAHDkI,EAAMnM,EAAQ+F,KAAKqD,EAAKvK,IACxBuN,EAAUD,EAAIE,YAAY,MAClB,EAAXD,IACInI,EAASuG,OAAO2B,EAAIzF,OAAO0F,EAAU,IACrC5F,EAAQxG,EAAQ+F,KAAKoG,EAAIzF,OAAO,EAAG0F,KACrCE,MAAMrI,IAAWuC,QACf+F,QAAQtI,EAAQuC,+BAc1B,eACKgG,EAAMtN,KAAKF,KAAO,mBACN,UAAbE,KAAKF,KACPwN,GAAOtN,KAAKqG,GAAK,IAAMrG,KAAKsG,GAAK,IAAMtG,KAAK6L,GAAK,IAAM7L,KAAK8L,GAG5DwB,GAAOtN,KAAKqG,GAAK,IAAMrG,KAAKsG,GAAK,IAAMtG,KAAK2M,GAAK,IAAM3M,KAAK6L,GAAK,IAAM7L,KAAK8L,GAAK,IAAM9L,KAAK4M,QAGxFvB,MAAMhC,KAAK,SAAS1J,EAAEqL,GAC1BsC,GAAO,IAAMtC,EAAE1D,MAAQ,IAAM0D,EAAEjG,SAEzBuI,EAAM,aCnMMC,wBAERC,EAAWxM,kBACjBwM,UAAYA,OACZxM,OAASA,GAAUwM,OACnBC,aAAe,IAAIC,EAAa1N,KAAMwN,EAAWxM,QACjD2M,WAAa,IAAIC,EAAW5N,KAAMwN,EAAWxM,uCAGnD,SAAW+B,OACVA,EAAMA,GAAOkF,OAAO9E,OAChB0K,UAAY,kBACXL,UAAUM,WAAW,aAAa/K,IAC/BA,EAAI/B,QAAU+B,EAAIO,aAClBtD,KAAKgB,cAEL,2BAIT,SAAU+B,OACTA,EAAMA,GAAOkF,OAAO9E,OAChB0K,UAAY,iBACXL,UAAUM,WAAW,YAAY/K,IAC9BA,EAAI/B,QAAU+B,EAAIO,aAClBtD,KAAKgB,cAEL,0BAIT,SAAS+B,OACRA,EAAMA,GAAOkF,OAAO9E,OAChB0K,UAAY,gBAEXL,UAAUM,WAAW,WAAW/K,IAC7BA,EAAI/B,QAAU+B,EAAIO,aAClBtD,KAAKgB,cAEL,6BAIT,SAAY+B,OACXA,EAAMA,GAAOkF,OAAO9E,OAChB0K,UAAY,mBAEXL,UAAUM,WAAW,cAAc/K,IAChCA,EAAI/B,QAAU+B,EAAIO,aAClBtD,KAAKgB,cAEL,yCAMHyM,aAAaM,eACbJ,WAAWI,mBAOZL,wBACOM,EAAUR,EAAWxM,kBAC3BgN,SAAWA,OACXR,UAAYA,OACZxM,OAASA,GAAUwM,OAEnBS,YAAc,QAEdC,KAAKF,EAAUR,EAAWxM,iCAGhC,SAAKgN,EAAUR,EAAWxM,OACrB4J,EAAS5K,KAAKgB,OACdmN,OAAgC,yBAAZzK,uBAAAA,WAAwBA,SAAS,UAMpDuK,YAAL,UAAgCnN,EAAQmB,UAAUjC,KAAKgB,OAAO,YAAY,SAAS+B,IAClFA,EAAMA,GAAOkF,OAAO9E,OAChB0K,UAAY,YACRL,EAAUM,WAAW,YAAY/K,UAOrCkL,YAAL,UAAgCnN,EAAQmB,UAAUjC,KAAKgB,OAAO,YAAY,SAAS+B,OAClFA,EAAMA,GAAOkF,OAAO9E,OAChB0K,UAAY,aACH9K,EAAI/B,QAAU+B,EAAIO,aAClBsH,SACJ4C,EAAUM,WAAW,YAAY/K,GAErCA,EAAIqL,gBAAgBrL,EAAIqL,kBACpB,SAKLH,YAAL,UAAgCnN,EAAQmB,UAAUjC,KAAKgB,OAAO,YAAY,SAAS+B,IAClFA,EAAMA,GAAOkF,OAAO9E,OAChB0K,UAAY,YAChBL,EAAUM,WAAW,YAAY/K,UAE7BkL,YAAL,WAAiCnN,EAAQmB,UAAUjC,KAAKgB,OAAO,aAAa,SAAS+B,IACpFA,EAAMA,GAAOkF,OAAO9E,OAChB0K,UAAY,aAChBL,EAAUM,WAAW,aAAa/K,UAE9BkL,YAAL,SAA+BnN,EAAQmB,UAAUjC,KAAKgB,OAAO,WAAW,SAAS+B,IAChFA,EAAMA,GAAOkF,OAAO9E,OAChB0K,UAAY,WAChBL,EAAUM,WAAW,WAAW/K,KAEjCoL,IAAQnO,KAAKiO,YAAL,QAA8BnN,EAAQmB,UAAUkM,EAAI,UAAU,SAASpL,SAC9EA,EAAMA,GAAOkF,OAAO9E,OAChB0K,UAAY,aAGPL,EAAUM,WAAW,UAAU/K,UAEnCA,EAAIqL,gBAAgBrL,EAAIqL,kBACpB,UAKLH,YAAL,SAA+BnN,EAAQmB,UAAUjC,KAAKgB,OAAO,WAAW,SAAS+B,IAChFA,EAAMA,GAAOkF,OAAO9E,OAChB0K,UAAY,WAChBL,EAAUM,WAAW,WAAW/K,UAE5BkL,YAAL,MAA4BnN,EAAQmB,UAAUjC,KAAKgB,OAAO,QAAQ,SAAS+B,IAC1EA,EAAMA,GAAOkF,OAAO9E,OAChB0K,UAAY,QAChBL,EAAUM,WAAW,QAAQ/K,KAG9BoL,IAAQnO,KAAKiO,YAAL,OAA6BnN,EAAQmB,UAAUkM,EAAI,SAAS,SAASpL,UAC5EA,EAAMA,GAAOkF,OAAO9E,OAChB0K,UAAY,SACTL,EAAUM,WAAW,SAAS/K,WAKjCkL,YAAL,WAAiCnN,EAAQmB,UAAUjC,KAAKgB,OAAO,aAAc,SAAS+B,UACrFA,EAAI8K,UAAY,aACTG,EAASK,WAAWtL,IAC1B,CAAEuL,SAAS,SAERL,YAAL,UAAgCnN,EAAQmB,UAAUjC,KAAKgB,OAAO,YAAa,SAAS+B,UACnFA,EAAI8K,UAAY,YACTG,EAASO,UAAUxL,IACzB,CAAEuL,SAAS,IAEbH,IAAQnO,KAAKiO,YAAL,SAA+BnN,EAAQmB,UAAUkM,EAAI,WAAY,SAASpL,UACjFA,EAAI8K,UAAY,WACTG,EAASQ,SAASzL,IACxB,CAAEuL,SAAS,KAEbH,IAAQnO,KAAKiO,YAAL,YAAkCnN,EAAQmB,UAAUkM,EAAI,cAAe,SAASpL,UACvFA,EAAI8K,UAAY,cACTG,EAASS,YAAY1L,IAC3B,CAAEuL,SAAS,4BAId,eACK,IAAI3M,KAAQ3B,KAAKiO,YAAa,KAC3B9K,EAAQnD,KAAKiO,YAAYtM,GAC3BwB,GAAUA,EAAMvB,KACpBd,EAAQ4N,YAAYvL,EAAMnC,OAAQW,EAAMwB,EAAMvB,eAQ3CgM,wBACOI,EAAUR,EAAUxM,kBAC1BgN,SAAWA,OACXR,UAAYA,OACZxM,OAASA,GAAUwM,OAEnBS,YAAc,QAEdC,KAAKV,EAAWxM,iCAMtB,SAAKwM,EAAWxM,GAOK,SAAhB2N,EAAiB5L,WAChB/B,EAAS+B,EAAIO,YAAcP,EAAI/B,SACH,SAAlBA,EAAO4N,SACC,YAAlB5N,EAAO4N,SACW,UAAlB5N,EAAO4N,SACW,QAAlB5N,EAAO4N,SACW,QAAlB5N,EAAO4N,SACW,OAAlB5N,EAAO4N,SACW,UAAlB5N,EAAO4N,SACW,SAAlB5N,EAAO4N,SACW,QAAlB5N,EAAO4N,YAhBRT,OAAgC,yBAAZzK,uBAAAA,WAAwBA,SAAS,KAsBzDyK,IAAQnO,KAAKiO,YAAL,SAA+BnN,EAAQmB,UAAUkM,EAAI,WAAW,SAASpL,MAChFA,EAAMA,GAAOkF,OAAO9E,MAChBwL,EAAc5L,QACdmD,EAAIsH,EAAUM,WAAW,WAAW/K,UAC/B,IAANmD,GAAenD,EAAIqL,gBACrBrL,EAAIqL,iBACElI,MAERiI,IAAQnO,KAAKiO,YAAL,QAA8BnN,EAAQmB,UAAUkM,EAAI,UAAU,SAASpL,MAC9EA,EAAMA,GAAOkF,OAAO9E,MAChBwL,EAAc5L,QACdmD,EAAIsH,EAAUM,WAAW,UAAU/K,UAC9B,IAANmD,GAAenD,EAAIqL,gBACrBrL,EAAIqL,iBACElI,MAERiI,IAAQnO,KAAKiO,YAAL,MAA4BnN,EAAQmB,UAAUkM,EAAI,QAAQ,SAASpL,MAC1EA,EAAMA,GAAOkF,OAAO9E,MAChBwL,EAAc5L,QACdmD,EAAIsH,EAAUM,WAAW,QAAQ/K,UAC5B,IAANmD,GAAenD,EAAIqL,gBACrBrL,EAAIqL,iBACElI,6BAKT,eACK,IAAIvE,KAAQ3B,KAAKiO,YAAa,KAC3B9K,EAAQnD,KAAKiO,YAAYtM,GAC3BwB,GAAUA,EAAMvB,KACpBd,EAAQ4N,YAAYvL,EAAMnC,OAAQW,EAAMwB,EAAMvB,eC/P3CiN,EAAa,MACX,mBACE,4BACK,wBACH,2BACA,+BACI,wBACD,uBACA,uBACA,wBACE,mBACP,eACG,wBACE,yBACG,0BACF,2BACG,8BACA,4BACF,uBACJ,mBACF,WAUUC,iBAAkB7E,yBAE1BvB,EAAQqG,0BACnBrG,EAASA,GAAQ,oBAEZ+B,MAAM,OAAQsE,+CAAgBpN,QAC9BqN,MAAQtG,GAAUA,EAAOsG,MAAQtG,EAAOsG,MAAQ,KAEhD7C,MAAQzD,EAAOyD,OAAS,IACxBC,OAAS1D,EAAO0D,QAAW,EAE7B1D,EAAOuG,aACJA,SAAWvG,EAAOuG,YAGnB3G,MAAQI,EAAOJ,OAAS,OACxB4G,OAASxG,EAAOwG,QAAU,IAC1BC,iBAA2C,IAAtBzG,EAAOyG,aAAmCzG,EAAOyG,cAEtEC,iBAEAC,GAAKC,EAAKC,OAEV1P,OAAS6I,gCAUf,kBACQ1I,KAAKyK,MAAM,6BAQnB,eACKO,EAAIhL,KAAKyK,MAAM,cAChBO,EAAG,OAAOA,EACR,GAAGhL,KAAKuI,GAAG,YAAcvI,KAAK4K,QAAU5K,KAAK4K,OAAO4E,kBACjDxP,KAAKyL,QAAUzL,KAAK4K,OAAO4E,WAAW,MAE1C/H,EAAIzH,KAAKsI,aACVb,EAAUA,EAAEgE,QACRhE,EAAEmD,OAAO4E,WAAW,WAE5B,SAAYvI,UACJjH,KAAKyK,MAAM,UAAWxD,sBAQ9B,kBACSjH,KAAKyK,MAAM,UACRzK,KAAKyK,MAAM,QAAS,SAGhC,SAAUxD,eACJyD,YAAa,EACX1K,KAAKyK,MAAM,QAASxD,wBAS5B,eACK+D,EAAIhL,KAAKyK,MAAM,kBACSO,OAAb,IAALA,EAAsBhL,KAAKyK,MAAM,WAAW,GAC/CO,OAER,SAAY/D,eACNyD,YAAa,EACX1K,KAAKyK,MAAM,UAAWxD,4BAU9B,kBACSjH,KAAKyK,MAAM,oBAGpB,SAAgBxD,UACRjH,KAAKyK,MAAM,cAAexD,yBAQlC,kBACSjH,KAAKyK,MAAM,aACRzK,KAAKyK,MAAM,WAAY,IAAIpL,QAGvC,SAAa4H,eACPyD,YAAa,EACX1K,KAAKyK,MAAM,WAAYxD,sBAQ/B,eACK+D,EAAIhL,KAAKyK,MAAM,gBACSO,OAAb,IAALA,EAAsBhL,KAAKyK,MAAM,QAAS,GAC7CO,OAER,SAAU/D,eACJyD,YAAa,EACX1K,KAAKyK,MAAM,QAASxD,uBAQ5B,eACK+D,EAAIhL,KAAKyK,MAAM,iBACSO,OAAb,IAALA,EAAsBhL,KAAKyK,MAAM,SAAU,GAC9CO,OAER,SAAW/D,eACLyD,YAAa,EACX1K,KAAKyK,MAAM,SAAUxD,uBAQ7B,kBACSjH,KAAKyK,MAAM,WACRzK,KAAKyK,MAAM,SAAU,QAGjC,SAAWxD,eACLyD,YAAa,OACbD,MAAM,SAAUxD,QAChBwI,SAASC,YACThF,YAAa,EACXzD,sBAgBR,eACKqB,EAAQtI,KAAKsI,SACdA,SACKA,EAAMqH,IAAI,eATnB,SAAWC,OACNtH,EAAQtI,KAAKsI,MACdA,GACFA,EAAMqH,IAAI,SAASC,+BAmBrB,eAEO9G,EAAO9I,UAERyP,SAAWzP,KAAKyP,UAAY,IAAIpQ,MAC/BwQ,EAAO7P,KAAKyP,SAAS9G,SAEtB8G,SAAS9G,IAAM,SAAS5I,MACV,WAAfG,EAAOH,UACNA,EAAI+P,QAAU/P,EAAI+P,QAAUhH,GAAQ/I,EAAI+P,OAAOL,UACjD1P,EAAI+P,OAAOL,SAAS5F,OAAO9J,GAE5BA,EAAI+P,OAAShH,EAEV9I,KAAK+P,QAAQhQ,SACViQ,QAAQjQ,GAEd8P,EAAKtP,KAAKP,KAAMD,GAChBA,EAAIyK,KAAK,MAAOzK,GAEhB+I,EAAK4B,YAAa,EACf5B,EAAKR,QAAOvI,EAAIuI,MAAQQ,EAAKR,YAC3BoH,OAEE3P,QAGJ0P,SAASO,QAAShQ,KAAKyP,SAAS5F,YAEhC4F,SAAS5F,OAAS,SAAS9J,GACb,WAAfG,EAAOH,KACTA,EAAI+P,OAAS,KACb/P,EAAIuI,MAAQ,KACZvI,EAAI8J,QAAO,QACNmG,QAAQjQ,GACb+I,EAAK4B,YAAa,SAQf+E,SAASC,KAAO,eAiBZtP,EAhBF6P,EAAa,OAgBX7P,UAbHiJ,KAAK,SAAS1J,EAAGI,OAEjBmQ,EADAnQ,MACAmQ,EAASnQ,EAAImP,SACHnP,EAAIiP,OAASjP,EAAIiP,MAAME,SACpCgB,EAAS5E,OAAOvL,EAAIiP,MAAME,QACvB9B,MAAM8C,KAASA,EAAOnQ,EAAIiP,MAAME,QAAQ,KAEhCe,EAAWC,KAAYD,EAAWC,GAAU,KAClDtQ,KAAKG,WAGPM,OAAO,EAAGL,KAAKP,QAEHwQ,EAChBJ,EAAKtP,KAAKP,KAAMiQ,EAAW7P,UASxBqP,SAASU,MAAQ,gBAChB9G,KAAK,SAAS1J,EAAEI,QACf8J,OAAO9J,KACX,SAEE2K,YAAa,0BAgCnB,SAASsE,iBACRA,EAAQA,GAASlO,EAAQS,MAAMvB,KAAKgP,OAAO,QAoHnCvN,EAEHsN,EAzGDqB,EAAa,SAAbA,EAAcpB,EAAOrN,EAAM0O,MAE3BrB,EAAO,IAEgB,mBADrBsB,EAAatB,OAGfsB,EAAaA,EAAW/P,KAAKgQ,GAE9B,MAAM9G,eACLC,QAAQ8G,KAAK/G,OAIXsF,IAAWuB,GACXG,EAAS5B,EAAWwB,GAAS1O,MAG7B2O,aAAsBlF,GAAqB,UAAL2D,IAAoD,EAAnCuB,EAAWxO,QAAQ,aAK7EsO,GAFCE,EADO,UAALvB,IAAoD,EAAnCuB,EAAWxO,QAAQ,aACzB,IAAIsJ,EAAWkF,GAElBA,GAAWI,WAAWH,GAAOE,GAAQ9O,QAE5C,GAAG8O,EAGC,UAAL1B,IAAgF,EAA/D,CAAC,YAAa,cAAe,eAAejN,QAAQ2O,KACvEH,EAAaxP,EAAQiM,QAAQuD,IAE9BC,EAAK9E,QAAQgF,GAAUH,cAGhB3O,OAED,YACI,UAALoN,EAAe,CACjBqB,EAAW,IAAIvF,EAASyF,GAAa3O,aAGlC,IAAIF,KAAK6O,EACZF,EAAWE,EAAW7O,GAAIA,EAAGE,EAAO,IAAMF,aAKvC,YACJ8O,EAAK9E,QAAQkF,UAAUL,EAAWzN,EAAGyN,EAAWxN,aAI5C,eACAwN,EAAWM,MAAO,UAOjBlF,EACJ4E,EANGO,EAAQ,EACRC,EAAQ,EAGTR,EAAWS,QACTrF,EAAS6E,EAAK5E,gBAAmC4E,EAAK3E,oBAG1DiF,GAFAP,EAAaC,EAAKS,YAAYV,IAEXW,QAAUvF,EAAO/I,KACpCmO,EAAQR,EAAWY,QAAUxF,EAAOjJ,KAG3B,GAAPoO,GAAqB,GAATC,GAAYP,EAAK9E,QAAQkF,UAAUE,EAAMC,GACxDP,EAAK9E,QAAQ0F,OAAOb,EAAWM,OACrB,GAAPC,GAAqB,GAATC,GAAYP,EAAK9E,QAAQkF,WAAWE,GAAOC,aAGtD,YACDxR,MAAMI,QAAQ4Q,GAChBC,EAAK9E,QAAQ2F,UAAU5H,MAAM+G,EAAK9E,QAAS6E,GAEf,UAArBpQ,EAAOoQ,IACdC,EAAK9E,QAAQ2F,UAAUd,EAAWe,OAClCf,EAAWgB,MACXhB,EAAWiB,MACXjB,EAAWkB,OACXlB,EAAWnM,QACXmM,EAAWjM,mBAKR,SACJkM,EAAKkB,OAASnB,SAgBX7O,KAPLzB,KAAK2Q,WACPP,EAAWpQ,KAAK2Q,UAAW,aAEzB3Q,KAAKoR,WACPhB,EAAWpQ,KAAKoR,UAAW,aAGfpC,EACH,gBAANvN,IAGK,WAFJsN,IAAWC,EAAMvN,OAEgC,EAAjCuN,EAAMvN,GAAGK,QAAQ,aACpCkN,EAAMvN,GAAK,IAAI2J,EAAW4D,EAAMvN,IAEpB,UAALsN,GAAsB,UAALtN,IACxBuN,EAAMvN,GAAK,IAAIoJ,EAASmE,EAAMvN,KAE/B2O,EAAWpB,EAAMvN,GAAIA,8BAavB,SAAUiQ,MAEN1R,KAAK0L,SAAWgG,EAAS,OAAO1R,KAAK0L,WAEpCiG,EAAO,MAEK,WAAb3R,KAAKF,MAAqBE,KAAK4K,OACD,mBAAtB5K,KAAK4K,OAAOuB,MACrBwF,EAAK5L,MAAQ/F,KAAK4K,OAAOuB,QAElBnM,KAAKmM,QACZwF,EAAK5L,MAAQ/F,KAAKmM,OAGc,mBAAvBnM,KAAK4K,OAAOwB,OACrBuF,EAAK3L,OAAShG,KAAK4K,OAAOwB,SAEnBpM,KAAKoM,SACZuF,EAAK3L,OAAShG,KAAKoM,aAGhB,GAAGpM,KAAK4R,QAA+B,EAArB5R,KAAK4R,OAAOnS,WAC9B,IAAIE,KAAKK,KAAK4R,OAAQ,CACrBtN,EAAItE,KAAK4R,OAAOjS,SACI,IAAdgS,EAAKhP,MAAwBgP,EAAKhP,KAAO2B,EAAEzB,KACpD8O,EAAKhP,KAAO2B,EAAEzB,SAEQ,IAAb8O,EAAKlP,KAAwBkP,EAAKlP,IAAM6B,EAAExB,KACnD6O,EAAKlP,IAAM6B,EAAExB,SAGW,IAAf6O,EAAK5L,OAA0B4L,EAAK5L,MAAQzB,EAAEzB,KACvD8O,EAAK5L,MAAQzB,EAAEzB,SAEU,IAAhB8O,EAAK3L,QAA0B2L,EAAK3L,OAAS1B,EAAExB,KACxD6O,EAAK3L,OAAS1B,EAAExB,QAIX9C,KAAKgM,cACR1H,EAAItE,KAAKgM,iBAEZ2F,EAAKhP,KAAO2B,EAAE3B,KACdgP,EAAKlP,IAAM6B,EAAE7B,IACbkP,EAAK5L,MAAQzB,EAAE3B,KAAO2B,EAAE6H,MACxBwF,EAAK3L,OAAS1B,EAAE7B,IAAM6B,EAAE8H,eAGtBuF,EAAKhP,OAAMgP,EAAKhP,KAAO,GACvBgP,EAAKlP,MAAKkP,EAAKlP,IAAM,GACrBkP,EAAK5L,QAAO4L,EAAK5L,MAAQ,GACzB4L,EAAK3L,SAAQ2L,EAAK3L,OAAS,GAC/B2L,EAAKxF,MAAQwF,EAAK5L,MAAQ4L,EAAKhP,KAC/BgP,EAAKvF,OAASuF,EAAK3L,OAAS2L,EAAKlP,IAC1BzC,KAAK0L,OAAOiG,6BAUpB,eAKKE,EAAQ7R,KAAK+L,SAAW,CAACpJ,KAAM,EAAEF,IAAK,EAAE0J,MAAO,EAAEC,OAAQ,GAC7DyF,EAAM5C,SAAmC,mBAAjBjP,KAAKiP,SAAwBjP,KAAKiP,WAAYnO,EAAQS,MAAMvB,KAAKiP,UACzF4C,EAAMC,OAAS9R,KAAK8R,QAAiC,mBAAhB9R,KAAK8R,OAAsB9R,KAAK8R,SAAUhR,EAAQS,MAAMvB,KAAK8R,QAClGD,EAAME,MAAQ/R,KAAK+R,OAA+B,mBAAf/R,KAAK+R,MAAqB/R,KAAK+R,QAASjR,EAAQS,MAAMvB,KAAK+R,OAC9FF,EAAMG,IAAMhS,KAAKgS,KAA2B,mBAAbhS,KAAKgS,IAAmBhS,KAAKgS,MAAOlR,EAAQS,MAAMvB,KAAKgS,KACtFH,EAAM3F,OAASlM,KAAKkM,OACpB2F,EAAM1F,MAAQnM,KAAKmM,MACnB0F,EAAMzF,OAASpM,KAAKoM,WAEhB6F,EAASnR,EAAQS,MAAMvB,KAAKgP,MAAMiD,OAAQ,OAC9CA,EAAOtP,KAAQsP,EAAOtP,MAAQ,EAC9BsP,EAAOxP,IAAOwP,EAAOxP,KAAO,EAC5BwP,EAAOlM,MAASkM,EAAOlM,OAAS,EAChCkM,EAAOjM,OAAUiM,EAAOjM,QAAU,EAG/B6L,EAAM5C,UACR4C,EAAMlP,KAAOkP,EAAM5C,SAASpM,EAC5BgP,EAAMpP,IAAMoP,EAAM5C,SAASnM,IAG3B+O,EAAMlP,KAAOsP,EAAOtP,KACpBkP,EAAMpP,IAAMwP,EAAOxP,MAGhBzC,KAAK8P,OAAQ,OAAO+B,EACpBjM,EAAe5F,KAAK8P,OAAOoC,mBAG5BpR,EAAQiG,aAAa8K,EAAMlP,QAC7BkP,EAAMlP,KAAO7B,EAAQuL,gBAAgBwF,EAAMlP,MAAQiD,EAAauG,OAE9DrL,EAAQiG,aAAa8K,EAAMpP,OAC7BoP,EAAMpP,IAAM3B,EAAQuL,gBAAgBwF,EAAMpP,KAAOmD,EAAawG,QAI5DtL,EAAQiG,aAAa8K,EAAM1F,SAC7B0F,EAAM1F,MAAQrL,EAAQuL,gBAAgBwF,EAAM1F,OAASvG,EAAauG,OAEhErL,EAAQiG,aAAa8K,EAAMzF,UAC7ByF,EAAMzF,OAAStL,EAAQuL,gBAAgBwF,EAAMzF,QAAUxG,EAAawG,QAGlEyF,EAAMC,SAELhR,EAAQiG,aAAa8K,EAAMC,OAAOjP,KACpCgP,EAAMC,OAAOjP,EAAI/B,EAAQuL,gBAAgBwF,EAAMC,OAAOjP,GAAK+C,EAAauG,OAEtErL,EAAQiG,aAAa8K,EAAMC,OAAOhP,KACpC+O,EAAMC,OAAOhP,EAAIhC,EAAQuL,gBAAgBwF,EAAMC,OAAOhP,GAAK8C,EAAawG,SAGvEyF,EAAM3F,QAELpL,EAAQiG,aAAa8K,EAAM3F,UAC7B2F,EAAM3F,OAASpL,EAAQuL,gBAAgBwF,EAAM3F,QAAU9G,KAAKE,IAAIM,EAAauG,MAAOvG,EAAawG,SAG5FyF,6BAOR,SAAYM,OAOLzG,SANNyG,EAAWA,GAAYnS,KAAKgP,MAAMmD,WAY7BzG,EAAS1L,KAAKkS,YAClBC,EAASlB,QAAUkB,EAASpB,MAAMlO,EAC/B/B,EAAQiG,aAAaoL,EAASlB,WAChCkB,EAASlB,QAAWnQ,EAAQuL,gBAAgB8F,EAASlB,SAAWvF,EAAOS,OAGxEgG,EAASjB,QAAUiB,EAASpB,MAAMjO,EAC/BhC,EAAQiG,aAAaoL,EAASjB,WAChCiB,EAASjB,QAAWpQ,EAAQuL,gBAAgB8F,EAASjB,SAAWxF,EAAOU,UAjBxE+F,EAAWnS,KAAK8P,QAAU9P,KAAK8P,OAAOkB,YAAYhR,KAAK8P,OAAOkB,cAAc,QAGvEtF,EAAS1L,KAAKkS,YAClBC,EAASlB,SAAWvF,EAAO/I,KAC3BwP,EAASjB,SAAWxF,EAAOjJ,KAetB0P,wBAUR,WACInS,KAAK8P,aACFA,OAAOL,SAAS5F,OAAO7J,4BAc9B,SAAO6C,EAAGC,EAAGsP,EAAOrP,GACnBqP,GAAkB,IAAVA,MACJP,EAAQ7R,KAAKgM,aAAY,GACzBqG,GAAW,KAEZR,EAAM5C,WACR4C,EAAMlP,MAAQE,EACdgP,EAAMpP,KAAOK,OAERmM,SAASpM,EAAIgP,EAAMlP,UACnBsM,SAASnM,EAAI+O,EAAMpP,IACxB4P,GAAW,GAGTR,EAAMC,cACHA,OAAOjP,EAAIgP,EAAMC,OAAOjP,EAAIA,OAC5BiP,OAAOhP,EAAI+O,EAAMC,OAAOhP,EAAIA,EACjCuP,GAAW,GAGTR,EAAME,OAA+B,UAAtB7R,EAAO2R,EAAME,cACzBA,MAAMlP,EAAIgP,EAAME,MAAMlP,EAAIA,OAC1BkP,MAAMjP,EAAI+O,EAAME,MAAMjP,EAAIA,EAC/BuP,GAAW,GAGTR,EAAMG,KAA2B,UAApB9R,EAAO2R,EAAMG,YACvBA,IAAInP,EAAIgP,EAAMG,IAAInP,EAAIA,OACtBmP,IAAIlP,EAAI+O,EAAMG,IAAIlP,EAAIA,EAC3BuP,GAAW,GAIG,GAAZA,GAAqBrS,KAAKsS,QAAS,KACjChO,GAAWtE,KAAKsS,QAAsBtS,KAAKsS,YAC5ChO,EAAG,SACD3D,EAAM2D,EAAE7E,OACJE,EAAE,EAAGA,EAAIgB,EAAIhB,IACpB2E,EAAE3E,GAAGkD,GAAKA,EACVyB,EAAE3E,GAAGmD,GAAKA,EAEXuP,GAAW,MAIE,GAAZA,GAAqBrS,KAAK4R,OAAQ,SAChCjR,EAAMX,KAAK4R,OAAOnS,OACdE,EAAE,EAAGA,EAAIgB,EAAIhB,SACfiS,OAAOjS,GAAGkD,GAAKA,OACf+O,OAAOjS,GAAGmD,GAAKA,EAErBuP,GAAW,OAIP7H,KAAK,OAAO,CAChBrG,QAAStB,EACTwB,QAASvB,EACTsP,MAAOA,EACPrP,IAAKA,SAGD2H,YAAa,wBAQnB,SAAOkG,EAAOG,QAIR/B,MAAMmD,SAAW,CACrBvB,MAAOA,EACPG,MAAOA,QAGHrG,YAAa,mCAUnB,eAEK6H,EAAMvS,KAAKkS,eACZlS,KAAK8P,QAAU9P,KAAK8P,OAAOnE,eAAgB,KAEzC6G,EAAOxS,KAAK8P,OAAOnE,gBAAkB3L,KAAK8P,OAAOlE,0BAE9C,CACNjJ,KAAO6P,EAAK7P,KAAO4P,EAAI5P,KACvBF,IAAM+P,EAAK/P,IAAM8P,EAAI9P,IACrBsD,MAAQyM,EAAK7P,KAAO4P,EAAIxM,MACxBC,OAASwM,EAAK/P,IAAM8P,EAAIvM,OACxBmG,MAAQoG,EAAIpG,MACZC,OAASmG,EAAInG,eAGRmG,2BASR,gBACMvG,aAAY,QACZP,QAAQgH,mCAQd,WAEIzS,KAAKgP,MAAM0D,YACRjH,QAAQkH,YAGX3S,KAAKgP,MAAL,WACGvD,QAAQmH,QAEX5S,KAAKgP,MAAL,QAAyBhP,KAAKgP,MAAL,WACtBvD,QAAQoH,cAGTnI,YAAa,sBASnB,cACI1K,KAAK4R,QAA+B,EAArB5R,KAAK4R,OAAOnS,OAAY,KAErCiM,GAAS1L,KAAK8P,QAAU9P,KAAK8P,OAAOnE,eAAe3L,KAAK8P,OAAsB9P,MAAf2L,oBAE9DF,QAAQqH,OAAO9S,KAAK4R,OAAO,GAAG/O,EAAI6I,EAAO/I,KAAK3C,KAAK4R,OAAO,GAAG9O,EAAI4I,EAAOjJ,aACzE9B,EAAMX,KAAK4R,OAAOnS,OACdE,EAAE,EAAGA,EAAIgB,EAAIhB,IAAK,KACrB2E,EAAItE,KAAK4R,OAAOjS,GAEjB2E,EAAEyO,OACCtH,QAAQqH,OAAOxO,EAAEzB,EAAI6I,EAAO/I,KAAK2B,EAAExB,EAAI4I,EAAOjJ,UAG9CgJ,QAAQuH,OAAO1O,EAAEzB,EAAG6I,EAAO/I,KAAK2B,EAAExB,EAAI4I,EAAOjJ,4BAYtD,SAAMwE,IACI,IAANA,IAAgC,IAAjBjH,KAAKiT,UACnBjT,KAAKkT,YAAYlT,KAAKkT,kBAEpBxH,OAAS,UACTC,eAAiB3L,KAAK4L,oBACvBuH,GAAW,GACXnT,KAAKuI,GAAG,YAAcvI,KAAKsI,QAC3BtI,KAAK2L,eAAehJ,MAAQ3C,KAAKsI,MAAM6D,OAClCnM,KAAK2L,eAAelJ,KAAOzC,KAAKsI,MAAM8D,QACtCpM,KAAK2L,eAAe5F,OAAS,GAC7B/F,KAAK2L,eAAe3F,QAAU,KAHWmN,GAAW,QAMxD1H,QAAQ2H,YAER5I,KAAK,YAAaxK,WAElBqT,WAEFF,GAAYnT,KAAKsT,WAAWtT,KAAKsT,YACjCH,GAAYnT,KAAKuT,MAAMvT,KAAKuT,OAC5BJ,GAAYnT,KAAKwT,SAASxT,KAAKwT,UAE/BxT,KAAKyP,eACFA,SAASpG,KAAK,SAAS1J,EAAE8T,GAC1BA,GAAQA,EAAKC,OAAOD,EAAKC,eAIzBlJ,KAAK,UAAUxK,WACfyL,QAAQkI,eAERjJ,YAAa,2BAYpB,SAAS/I,UACD3B,KAAK4T,SAAS5T,KAAK4T,SAASjS,GAAM,yBAU1C,SAAKA,EAAMkH,MACPlH,IAA6B,EAArBA,EAAKG,QAAQ,gBACvBH,EAAOA,EAAKK,MAAM,qCACC,KAAXiD,UACPA,GAAKjF,KAAKuP,KAAKtK,EAAG4D,wCAchBgL,EAAkB7T,KAAK8T,SAASnS,aAJjBA,EAAMoS,UACpB/T,KAAK4T,WAAU5T,KAAK4T,SAAW,IAC5B5T,KAAK4T,SAASjS,GAAQoS,GAEyBxT,KAAKP,KAAM2B,EAAM,IAAItC,GACxEwU,EAAgB9D,QAAQlH,IAC3BgL,EAAgBlL,IAAIE,0BAWtB,SAAOlH,EAAMkH,MACTlH,IAA6B,EAArBA,EAAKG,QAAQ,gBACvBH,EAAOA,EAAKK,MAAM,qCACC,KAAXiD,UACPA,GAAKjF,KAAKgU,OAAO/O,EAAG4D,wCAIlBgL,EAAkB7T,KAAK8T,SAASnS,GACjCkS,IACChL,EAAQgL,EAAgBhK,OAAOhB,GAC7BgL,EAAgB1D,8BAavB,sCAAQ9F,2BAAAA,8BACF4J,eAAe5J,EAAK,GAAIA,EAAK7I,MAAM,IACjCxB,mCAUR,SAAe2B,EAAM0I,OAGfvB,EAFDiL,EAAS/T,KAAK8T,SAASnS,UACxBoS,IACEjL,EAAO9I,KACPV,MAAMI,QAAQ2K,KAAOA,EAAO,CAACA,IACjC0J,EAAO1K,KAAK,SAAS1J,EAAGkJ,IAEpB,IAAUA,EAAOW,MAAMV,EAAMuB,KAC/BA,EAAK6J,QAAS,MAIV7J,EAAK6J,iCAWb,SAAW5P,EAAG6P,MAEG,WAAbnU,KAAKF,KAAmB,KAEtBmP,EAAWjP,KAAKoU,cAEdrO,EAAQkJ,EAAStM,KAAO3C,KAAKmM,MAC7BnG,EAASiJ,EAASxM,IAAMzC,KAAKoM,cAChC9H,EAAEd,MAAQuC,GAASzB,EAAEd,MAAQyL,EAAStM,MACjC,IAEL2B,EAAEP,MAAQiC,GAAU1B,EAAEP,MAAQkL,EAASxM,SAMvCiJ,EAAS1L,KAAKkS,YACdC,EAAWnS,KAAKgR,cAChBzR,EAAKS,KAAK4R,UAEVrS,GAAOA,EAAGE,UACbF,EAAK,IACFK,KAAK,CAACiD,EAAG6I,EAAO/I,KAAMG,EAAG4I,EAAOjJ,MACnClD,EAAGK,KAAK,CAACiD,EAAG6I,EAAO3F,MAAOjD,EAAG4I,EAAOjJ,MACpClD,EAAGK,KAAK,CAACiD,EAAG6I,EAAO3F,MAAOjD,EAAG4I,EAAO1F,SACpCzG,EAAGK,KAAK,CAACiD,EAAG6I,EAAO/I,KAAMG,EAAG4I,EAAO1F,SACnCzG,EAAGK,KAAK,CAACiD,EAAG6I,EAAO/I,KAAMG,EAAG4I,EAAOjJ,OAGpC0R,EAAM7I,OAAO6I,GAAOnU,KAAKgP,MAAL,cAA8BhP,KAAKgP,MAAL,WAA2B,GAC1EzP,GAAMA,EAAGE,OAAQ,IAGhB0S,GAA8B,GAAlBA,EAASvB,QACvBrR,EAAKuB,EAAQS,MAAMhC,GAAI,GAEvBA,EAAKuB,EAAQuT,aAAa9U,EAAI,CAC7BsD,EAAGsP,EAASlB,QAAUvF,EAAO/I,KAC7BG,EAAGqP,EAASjB,QAAUxF,EAAOjJ,KAC3B0P,EAASvB,QAIE,EAAZrR,EAAGE,UAAgBO,KAAKgP,MAAL,MAAsBhP,KAAKgP,MAAL,QAAuB,SAC9DrP,EAAI,EACJkB,EAAQtB,EAAGE,OACPuF,EAAIrF,EAAE,EAAGqF,GAAKnE,EAAOmE,IAAOrF,EAAI,KAGpCqF,GAAKnE,MACJb,KAAKgP,MAAM0D,SACL5R,EAAQwT,eAAehQ,EAAE,CAAC/E,EAAGI,GAAGJ,EAAG,IAAK4U,GAC1C,OAAO,UAKNrT,EAAQwT,eAAehQ,EAAE,CAAC/E,EAAGI,GAAGJ,EAAGyF,IAAKmP,GAC1C,OAAO,MAIXnU,KAAKgP,MAAL,KAAoB,OAAO,SAGxBlO,EAAQwT,eAAehQ,EAAE/E,EAAI4U,WAInC7P,EAAEzB,EAAI6I,EAAO3F,OAASzB,EAAEzB,EAAI6I,EAAO/I,SAGnC2B,EAAExB,EAAI4I,EAAO1F,QAAU1B,EAAExB,EAAI4I,EAAOjJ,+BAgBxC,SAAWd,EAAM0I,OACI,IAAjBrK,KAAKiT,aAMDhE,EALH5E,EAAK4E,WACF3G,EAAQtI,KAAKsI,MAEbhF,EAAa+G,EAAK/G,YAAc+G,EAAKrJ,OAErCiO,EAAWnO,EAAQyT,iBAAiBlK,EAAM/B,EAAMkM,WAEtDnK,EAAO,CACN4E,SAAUA,EACVwF,OAAuB,GAAfpK,EAAKoK,QAAexF,EAAShM,QAAS,EAAGoH,EAAKoK,OACtDC,QAASrK,EAAKqK,SAAWrK,EAAKsK,UAAYtK,EAAKuK,MAC/CC,QAASxK,EAAKwK,QACdX,QAAS,EACT/Q,MAAOkH,EACP/G,WAAaA,IAGf+G,EAAKyK,KAAOzK,EAAKyK,MAAM,OAGnBC,GAAS,KACV/U,KAAKyP,eACFA,SAASpG,KAAK,SAASrE,EAAG1C,OAEX,IAAhB+H,EAAK6J,SAEPa,GAAuC,IAA9BzS,EAAGwL,WAAWnM,EAAM0I,IAAuB0K,GAEzC,OAAO,IAEjB,GAGDA,EAAQ,OAAO,MAIdC,GAAUhV,KAAK8P,QAAU9P,KAAK8P,OAAOnE,eAAe3L,KAAK8P,OAAwB9P,MAAjB2L,mBAChEqJ,EAAS,OAAO,EAEpB3K,EAAK4E,SAASpM,EAAIwH,EAAK4E,SAAS9K,QAAU6Q,EAAQrS,KAClD0H,EAAK4E,SAASnM,EAAIuH,EAAK4E,SAAS5K,QAAU2Q,EAAQvS,IAG5CwS,GAA6B,IAArBjV,KAAKmP,aAAyBnP,KAAKkV,WAAW7K,EAAK4E,iBAG9DgG,GAEE5K,EAAKrJ,SACRqJ,EAAKrJ,OAAShB,WAGVmV,oBAAoBxT,EAAM0I,GAE3BrK,KAAKoV,SAAqB,cAATzT,GAAiC,cAATA,SACvCyT,SAAU,OACVtH,WAAoB,cAATnM,EAAsB,YAAa,YAAa0I,MAKzC,IAArBrK,KAAKmP,aAA0B8F,IACjCjV,KAAKoV,SACK,cAATzT,GAAiC,cAATA,SAEpByT,SAAU,OACVnB,eAAwB,cAATtS,EAAsB,aAAe,aAAc0I,KAIlD,IAAhBA,EAAK6J,2CAQb,SAAoBvS,EAAM0I,IAEN,IAAhBA,EAAK6J,SAEP7J,EAAKyK,KAAKlV,KAAKI,WAGViU,eAAetS,EAAM0I,+BAqB5B,SAAY1I,GACPkS,EAAkB7T,KAAK8T,SAASnS,GACjCkS,GACFA,EAAgB1D,gCAWlB,SAAWrQ,MAES,iBAATA,MACNE,KAAKF,MAAQA,EACf,OAAOE,UAEJ,GAAGA,KAAKuI,GAAGzI,UACRE,YAELA,KAAK8P,OACA9P,KAAK8P,OAAOnF,WAAW7K,GAExB,4BAWR,SAAQiT,EAAGzK,OAWLQ,SAVD9I,KAAKqV,mBAOHA,YAAc,QACdA,YAAYC,WAAY,OACxBD,YAAYE,YAAY,CAAC1S,EAAE,EAAEC,EAAE,IAChCgG,EAAO9I,MAONqV,YAAYG,GAAK,SAASzS,OAC1BiG,EAAQF,KAMTE,EAAMqM,YAAYC,UAAW,CAC/BtM,EAAM8G,OAAOpE,OAAS,SASjB+J,EARDC,EAAe1M,EAAM8G,OAAOlE,oBAC5B+J,EAAU5S,EAAIkM,SAAS9K,QAAU6E,EAAMqM,YAAYE,YAAY1S,EAC/D+S,EAAU7S,EAAIkM,SAAS5K,QAAU2E,EAAMqM,YAAYE,YAAYzS,SAGhEkG,EAAM6M,WACJC,EAAa9M,EAAM0C,QAAU1C,EAAM4C,qBAEnC6J,EAAU3U,EAAQiV,aAAaL,EAAaI,EAAW,CAACjT,EAAE8S,EAAQ7S,EAAE8S,KAC7DjT,KAAO,EACdqG,EAAM6M,SAASlT,OAAMgT,GAAWF,EAAQ9S,MAEpB,EAAhB8S,EAAQ1P,OACZiD,EAAM6M,SAAS9P,QAAO4P,GAAWF,EAAQ1P,OAE1C0P,EAAQhT,IAAM,EACbuG,EAAM6M,SAASpT,MAAKmT,GAAWH,EAAQhT,KAElB,EAAjBgT,EAAQzP,QACZgD,EAAM6M,SAAS7P,SAAQ4P,GAAWH,EAAQzP,UAI5C2P,GAAWC,KACb5M,EAAMjE,OAAO4Q,EAASC,GAAS,EAAM7S,GACrCiG,EAAMqM,YAAYE,YAAY1S,EAAIE,EAAIkM,SAAS9K,QAC/C6E,EAAMqM,YAAYE,YAAYzS,EAAIC,EAAIkM,SAAS5K,UAGzC,SASJgR,YAAYW,GAAK,SAASjT,OAC1BiG,EAAQF,EACTE,EAAMqM,YAAYC,YACpBtM,EAAMqM,YAAYC,WAAY,EAE9BtM,EAAMwB,KAAK,UAAU,CAACyE,SAASjG,EAAMqM,YAAYE,qBAU9CF,YAAYY,GAAK,eACjBjN,EAAQF,KACTE,EAAMqM,YAAYC,iBACpBtM,EAAMqM,YAAYC,WAAY,EAE9BtM,EAAMwB,KAAK,UAAU,CAACyE,SAASjG,EAAMqM,YAAYE,eAC1C,QASJF,YAAYa,GAAK,SAASnT,OAE3B/C,KAAKqV,YAAYC,iBACH,GAAdvS,EAAI0R,QAA6B,GAAd1R,EAAI0R,aACpBY,YAAYC,WAAY,OAGxBD,YAAYE,YAAY1S,EAAIE,EAAIkM,SAAS9K,aACzCkR,YAAYE,YAAYzS,EAAIC,EAAIkM,SAAS5K,aAEzCmG,KAAK,YAAY,CAACyE,SAASjP,KAAKqV,YAAYE,gBAEjDxS,EAAImR,QAAS,aAKhB5L,EAAQA,GAAStI,KAAKsI,OAEb,IAANyK,GACFzK,EAAMiH,KAAK,YAAYvP,KAAKqV,YAAYG,IACxClN,EAAMiH,KAAK,UAAUvP,KAAKqV,YAAYW,IACtC1N,EAAMiH,KAAK,aAAavP,KAAKqV,YAAYY,SACpC1G,KAAK,YAAYvP,KAAKqV,YAAYa,IACvC5N,EAAMiH,KAAK,YAAYvP,KAAKqV,YAAYG,IACxClN,EAAMiH,KAAK,WAAWvP,KAAKqV,YAAYW,SAClCzG,KAAK,aAAavP,KAAKqV,YAAYa,MAGxC5N,EAAM0L,OAAO,YAAYhU,KAAKqV,YAAYG,IAC1ClN,EAAM0L,OAAO,UAAUhU,KAAKqV,YAAYW,IACxC1N,EAAM0L,OAAO,aAAahU,KAAKqV,YAAYY,SACtCjC,OAAO,YAAYhU,KAAKqV,YAAYa,IACzC5N,EAAM0L,OAAO,YAAYhU,KAAKqV,YAAYG,IAC1ClN,EAAM0L,OAAO,WAAWhU,KAAKqV,YAAYW,SACpChC,OAAO,aAAahU,KAAKqV,YAAYa,KAEpClW,cC3zCYmW,iBAAerH,yBAEvBpG,OAAQqG,yDAAE,yCACfrG,EAAQqG,IACT6C,OAASlJ,GAAUA,EAAOkJ,OAASlJ,EAAOkJ,OAAS,mCAUzD,kBACS5R,KAAKyK,MAAM,eAGpB,SAAWxD,eACLyD,YAAa,EACX1K,KAAKyK,MAAM,SAAUxD,YCVTmP,iBAAgBtH,yBAExBlE,EAAQ/K,EAAQiI,0BACP,mBAAVjI,IACTiI,EAAWjI,EACXA,EAAS,KAGVA,EAASA,GAAU,IACZwW,KAAOxW,EAAOwW,MAAQ,KAC7BxW,EAAOsP,aAAc,iBAEftP,EAAQ,YAETA,OAASA,GAAU,KAEnByW,iBAAmB,IAOnBC,KAAOvN,EAAKwN,MAAQ1V,EAGT,oBAAN2V,IAAqBA,GAAGC,SAAWD,GAAGC,QAAQ,WAClC,iBAAX9L,IAAqBA,EAAS6L,GAAGE,sBAAsBC,OAAO,IAAMhM,MACzEiM,aAAc,IAGE,iBAAXjM,GAA0C,oBAAZlH,SACvCkH,EAASlH,SAASoT,eAAelM,GAE1BA,EAAOnL,SACdmL,EAASA,EAAO,IAGI,UAAlBA,EAAOgE,WACJpB,UAAY5C,EACbmM,EAAKrT,SAASsT,cAAc,UAChCpM,EAAOqM,YAAYF,GACnBA,EAAG5K,MAAQvB,EAAOsM,aAAatM,EAAOuM,YACtCJ,EAAG3K,OAASxB,EAAOwM,cAAcxM,EAAOyM,aACxCzM,EAASmM,KAGJvJ,UAAY5C,EAAO0M,iBAGrB1M,OAASA,IACTa,QAAUb,EAAO4E,WAAW,QAC5B+H,OAAOzP,qCAOb,SAAOA,QAMD0P,OAASC,OAAOC,OAAO,MACnBvB,GACNnW,KAAKH,OAAO2X,aAMVnI,GAAG,YAAa,gBACf5D,QAAQkF,UAAU,GAAK,WAKxBtB,GAAG,UAAW,gBACb5D,QAAQkF,WAAW,IAAM,UAI3BgH,EAAuB,oBAAV1P,QAAmD,EAA1BA,OAAOqO,iBAAsBrO,OAAOqO,iBAAmB,EAC9FtW,KAAK6W,cACPc,EAAMlB,GAAGmB,oBAAoBC,YAAc,QAEvCvB,iBAAmBqB,OAEnBG,aAAuC,EAAxB9X,KAAKsW,iBAAsBtW,KAAKsW,iBAAmB,EAEhD,EAApBtW,KAAKH,OAAOsM,QAAWnM,KAAKmM,MAAQnM,KAAKH,OAAOsM,OAC3B,EAArBnM,KAAKH,OAAOuM,SAAYpM,KAAKoM,OAASpM,KAAKH,OAAOuM,aAChD2L,cAGAC,aAAe,IAAIzK,EAASvN,KAAMA,KAAK4K,OAAOA,QAAU5K,KAAK4K,QAG/D5K,KAAKH,OAAOoY,kBACTA,cAGHnQ,GAAUA,EAAS9H,4BAIvB,SAAOkY,EAAGlR,GACLhH,KAAK4K,cAEJuN,aAAenY,KAAKmY,cAAgB,CAAEhM,MAAO,EAAGC,OAAQ,GAC7D8L,EAAIA,GAAKlY,KAAKmY,aAAahM,OAASnM,KAAKmM,MAAOnF,EAAIA,GAAKhH,KAAKmY,aAAa/L,QAAUpM,KAAKoM,OAEvF8L,IAAGlY,KAAKmY,aAAahM,MAAQ+L,GAC7BlR,IAAGhH,KAAKmY,aAAa/L,OAASpF,QAE5B2I,IAAI,QAASuI,EAAI,WACjBvI,IAAI,SAAU3I,EAAI,WAClB4D,OAAOwB,OAASpF,EAAIhH,KAAK8X,kBACzBlN,OAAOuB,MAAQ+L,EAAIlY,KAAK8X,kBACxBrM,QAAQzI,MAAMhD,KAAK8X,aAAc9X,KAAK8X,2CAO5C,SAAa/G,UAEXA,EADE/Q,KAAK8X,cAAsC,IAAtB9X,KAAK8X,aACpBL,OAAOC,OAAO,GAAI3G,EAAO,CAChClO,EAAGkO,EAAMlO,EAAI7C,KAAK8X,aAClBhV,EAAGiO,EAAMjO,EAAI9C,KAAK8X,eAGb/G,qBAQR,kBACI/Q,KAAKmY,cAAgBnY,KAAKmY,aAAahM,MAAcnM,KAAKmY,aAAahM,MACvEnM,KAAK4K,OAAe5K,KAAK4K,OAAOuB,MAC5B,OAER,SAAUlF,eACJyD,YAAa,EACf1K,KAAK4K,aACFmN,OAAO9Q,GAENA,sBAQR,kBACIjH,KAAKmY,cAAgBnY,KAAKmY,aAAa/L,OAAepM,KAAKmY,aAAa/L,OACxEpM,KAAK4K,OAAe5K,KAAK4K,OAAOwB,OAC5B,OAER,SAAWnF,eACLyD,YAAa,EACf1K,KAAK4K,aACFmN,OAAO,EAAG9Q,GAETA,4CAoBH3C,EAAIxD,EAAQyD,mBAAmBvE,KAAK4K,OAAOA,QAAU5K,KAAK4K,eAC9DtG,EAAE6H,MAAQnM,KAAKmM,MACf7H,EAAE8H,OAASpM,KAAKoM,OAChB9H,EAAEyB,MAAQzB,EAAE3B,KAAO2B,EAAE6H,MACrB7H,EAAE0B,OAAS1B,EAAE7B,IAAM6B,EAAE8H,OACd9H,+BAUR,SAAc3C,EAAMyW,QACdZ,OAAO7V,GAAQyW,6BAYrB,SAAYA,EAAO/N,MAEjB+N,EADmB,iBAAVA,EACDpY,KAAKwX,OAAOY,GAElBA,SACQ/N,EAANA,GAAa,IACZ/B,MAAQtI,KACH,IAAIoY,EAAM/N,+BAetB,SAAaxH,EAAGC,EAAGgI,EAAMxD,UACf,IAAIuD,EAAShI,EAAGC,EAAGgI,EAAMxD,uCAcnC,SAAqBjB,EAAIC,EAAIuF,EAAIC,UACjB,IAAIV,EAAW,CAC7BtL,KAAK,SACLuG,GAAIA,EACJC,GAAIA,EACJuF,GAAIA,EACJC,GAAIA,wCAiBN,SAAqBzF,EAAIC,EAAIqG,EAAId,EAAIC,EAAIc,UACzB,IAAIxB,EAAW,CAC7BtL,KAAK,SACLuG,GAAIA,EACJC,GAAIA,EACJqG,GAAIA,EACJd,GAAIA,EACJC,GAAIA,EACJc,GAAIA,2BAWN,gBAKMyL,+BAWN,SAAOH,EAAGlR,QACJmJ,MAAM+H,GAAGlY,KAAKmM,MAAOnF,GAAGhH,KAAKoM,aAC7BsH,6BAUN,SAAMwE,EAAGlR,GACJkR,GAAMlR,IACTkR,EAAIlY,KAAKmM,MACTnF,EAAIhH,KAAKoM,QAOPpM,KAAKgP,OAAShP,KAAKgP,MAAM4D,UACtBhB,OAAS,CACb,CAAC/O,EAAE,EAAEC,EAAE,GACP,CAACD,EAAEqV,EAAEpV,EAAE,GACP,CAACD,EAAEqV,EAAEpV,EAAEkE,GACP,CAACnE,EAAE,EAAEC,EAAEkE,IAGDhH,KAAKyL,QAAQ6M,WAAWtY,KAAKyL,QAAQ6M,UAAU,EAAE,EAAEJ,EAAElR,sBAU9D,SAAIrF,EAAMyI,MACNpK,KAAK4K,QAAU5K,KAAK4K,OAAOoE,kBACV,IAAT5E,IAAsBpK,KAAK4K,OAAOoE,MAAMrN,GAAQyI,GACnDpK,KAAK4K,OAAOoE,MAAMrN,6BAY3B,SAAWiQ,EAAQ5C,UACPhP,KAAKuY,YAAY,OAAO,CAClC3G,OAAQA,EACR5C,MAAOA,8BAcT,SAAW+C,EAAOC,EAAKhD,UACXhP,KAAKuY,YAAY,OAAQ,CACnCxG,MAAOA,EACPC,IAAKA,EACLhD,MAAOA,2BAUT,gBACMhM,MAAM,GAAK,0BAQjB,gBACMA,MAAM,IAAK,+BAQjB,WACIhD,KAAKwU,eACFxR,MAAM,EAAIhD,KAAKwU,UAAU3R,EAAG,EAAI7C,KAAKwU,UAAU1R,QAG/CE,MAAM,EAAG,wBAWhB,SAAMwV,EAAIC,GACLzY,KAAK0Y,kBACHA,WAAa,CACjBvM,MAAOnM,KAAK4K,OAAOuB,MACnBC,OAAQpM,KAAK4K,OAAOwB,cAIjBX,QAAQzI,MAAMwV,EAAGC,GAClBzY,KAAKwU,eAIHA,UAAY,CAAC3R,EAAE2V,EAAKxY,KAAKwU,UAAU3R,EAAGC,EAAE2V,EAAKzY,KAAKwU,UAAU1R,QAH5D0R,UAAY,CAAC3R,EAAE2V,EAAG1V,EAAE2V,QAKrBE,mCASN,kBACY3Y,KAAK4K,OAAOgO,UAAU5Y,KAAK4K,OAAOgO,YAAY,8BAQ1D,SAAY9Q,OACR9H,KAAK6Y,yBACF/P,EAAO9I,iBACR6Y,qBAAsB,EAe3B/P,EAAKgQ,mCAAqC9Y,KAAKmI,qBAAqBW,EAAKgQ,mCACzEhQ,EAAKgQ,kCAAoC9Y,KAAKgI,+BAdrC+Q,IACLjQ,EAAKkQ,UACPlQ,EAAK+P,qBAAsB,GAGzB/P,EAAK4B,YAAY5B,EAAKuP,SAEzBvP,EAAK0B,KAAK,UAEV1B,EAAKgQ,mCAAqC9Y,KAAKmI,qBAAqBW,EAAKgQ,mCACzEhQ,EAAKgQ,kCAAoC9Y,KAAKgI,sBAAsB+Q,GACjEjR,GAAUA,OAIP9H,6BAIR,gBACMgY,aAAajK,eACbiL,WAAY,0BAzTlB,sCAAiB3O,2BAAAA,2BACL+L,EAAW/L"}